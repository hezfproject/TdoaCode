###############################################################################
#                                                                             #
# IAR C/C++ Compiler V7.60.1.40026 for 8051             23/Oct/2018  17:27:22 #
# Copyright (C) 2004-2010 IAR Systems AB.                                     #
#                                                                             #
#    Core               =  plain                                              #
#    Code model         =  banked                                             #
#    Data model         =  large                                              #
#    Calling convention =  xdata reentrant                                    #
#    Constant location  =  data_rom                                           #
#    Dptr setup         =  1,16                                               #
#    Source file        =  E:\p4\main\Zigbee\cc2530\mine_project_voice\app\Mo #
#                          bilePhone\src\MobilePhone_Dep.c                    #
#    Command line       =  E:\p4\main\Zigbee\cc2530\mine_project_voice\app\Mo #
#                          bilePhone\src\MobilePhone_Dep.c -D xSMS_TEMPLATE   #
#                          -D MENU_CLOCKFORMAT -D CELLSWITCH_DEBUG -D         #
#                          MP_INFORMATION -D HOLD_AUTO_START -D SMS_SENDBOX   #
#                          -D NEW_MENU_LIB -D WATCHDOG=TRUE -D                #
#                          NEW_DOUBLE_NVID_OP -D AUDIO_SERIAL -D              #
#                          NWK_AUTO_POLL -D OSC32K_CRYSTAL_INSTALLED=FALSE    #
#                          -D xAUDIO_TEST -D xSINGLE_AUDIO_TEST -D            #
#                          xMULTIAUDIO_TEST -D xREFLECTOR -D xLCD_SUPPORTED   #
#                          -D HAL_LCD=FALSE -D HAL_AUDIO=TRUE -D              #
#                          HAL_SPI=FALSE -D HAL_UART=FALSE -D HAL_LED=FALSE   #
#                          -D HAL_AES=FALSE -D HAL_KEY=TRUE -D                #
#                          IDX_THRESHOLD=12 -D xMACNODEBUG -D                 #
#                          xMAC_NO_PARAM_CHECK -D HAL_AUDIO=TRUE -D           #
#                          HAL_DMA=TRUE -D HAL_AES=FALSE -D                   #
#                          MAC_CFG_TX_DATA_MAX=8 -D MAC_CFG_TX_MAX=12 -D      #
#                          MAC_CFG_RX_MAX=8 -lcN E:\p4\main\Zigbee\cc2530\min #
#                          e_project_voice\app\MobilePhone\iar\Release\List\  #
#                          -lb E:\p4\main\Zigbee\cc2530\mine_project_voice\ap #
#                          p\MobilePhone\iar\Release\List\ -o                 #
#                          E:\p4\main\Zigbee\cc2530\mine_project_voice\app\Mo #
#                          bilePhone\iar\Release\Obj\ -e                      #
#                          --require_prototypes --no_unroll --no_inline       #
#                          --no_code_motion --debug --core=plain --dptr=16,1  #
#                          --data_model=large --code_model=banked             #
#                          --calling_convention=xdata_reentrant               #
#                          --place_constants=data_rom --nr_virtual_regs 16    #
#                          -I E:\p4\main\Zigbee\cc2530\mine_project_voice\app #
#                          \MobilePhone\iar\..\src\ -I                        #
#                          E:\p4\main\Zigbee\cc2530\mine_project_voice\app\Mo #
#                          bilePhone\iar\..\src\MenuLib\ -I                   #
#                          E:\p4\main\Zigbee\cc2530\mine_project_voice\app\Mo #
#                          bilePhone\iar\..\src\MenuLib\util\ -I              #
#                          E:\p4\main\Zigbee\cc2530\mine_project_voice\app\Mo #
#                          bilePhone\iar\..\..\..\third_party\TIMAC-CC2530-1. #
#                          3.1\COMPONENTS\MAC\INCLUDE\ -I                     #
#                          E:\p4\main\Zigbee\cc2530\mine_project_voice\app\Mo #
#                          bilePhone\iar\..\..\..\third_party\TIMAC-CC2530-1. #
#                          3.1\COMPONENTS\MAC\HIGH_LEVEL\ -I                  #
#                          E:\p4\main\Zigbee\cc2530\mine_project_voice\app\Mo #
#                          bilePhone\iar\..\..\..\third_party\TIMAC-CC2530-1. #
#                          3.1\COMPONENTS\MAC\LOW_LEVEL\ -I                   #
#                          E:\p4\main\Zigbee\cc2530\mine_project_voice\app\Mo #
#                          bilePhone\iar\..\..\..\third_party\TIMAC-CC2530-1. #
#                          3.1\COMPONENTS\MAC\LOW_LEVEL\SRF04\ -I             #
#                          E:\p4\main\Zigbee\cc2530\mine_project_voice\app\Mo #
#                          bilePhone\iar\..\..\..\third_party\TIMAC-CC2530-1. #
#                          3.1\COMPONENTS\MAC\LOW_LEVEL\SRF04\SINGLE_CHIP\    #
#                          -I E:\p4\main\Zigbee\cc2530\mine_project_voice\app #
#                          \MobilePhone\iar\..\..\..\third_party\TIMAC-CC2530 #
#                          -1.3.1\COMPONENTS\OSAL\INCLUDE\ -I                 #
#                          E:\p4\main\Zigbee\cc2530\mine_project_voice\app\Mo #
#                          bilePhone\iar\..\..\..\third_party\TIMAC-CC2530-1. #
#                          3.1\COMPONENTS\OSAL\MCU\CC2530\ -I                 #
#                          E:\p4\main\Zigbee\cc2530\mine_project_voice\app\Mo #
#                          bilePhone\iar\..\..\..\third_party\TIMAC-CC2530-1. #
#                          3.1\COMPONENTS\SERVICES\SADDR\ -I                  #
#                          E:\p4\main\Zigbee\cc2530\mine_project_voice\app\Mo #
#                          bilePhone\iar\..\..\..\third_party\TIMAC-CC2530-1. #
#                          3.1\COMPONENTS\SERVICES\SDATA\ -I                  #
#                          E:\p4\main\Zigbee\cc2530\mine_project_voice\app\Mo #
#                          bilePhone\iar\..\..\..\third_party\TIMAC-CC2530-1. #
#                          3.1\COMPONENTS\MT\ -I E:\p4\main\Zigbee\cc2530\min #
#                          e_project_voice\app\MobilePhone\iar\..\..\..\..\.. #
#                          \..\common\ -I E:\p4\main\Zigbee\cc2530\mine_proje #
#                          ct_voice\app\MobilePhone\iar\..\..\..\..\..\common #
#                          \lcd\ -I E:\p4\main\Zigbee\cc2530\mine_project_voi #
#                          ce\app\MobilePhone\iar\..\..\..\..\..\..\common\2g #
#                          \ -I E:\p4\main\Zigbee\cc2530\mine_project_voice\a #
#                          pp\MobilePhone\iar\..\..\..\..\..\..\ -I           #
#                          E:\p4\main\Zigbee\cc2530\mine_project_voice\app\Mo #
#                          bilePhone\iar\..\..\..\driver\ -I                  #
#                          E:\p4\main\Zigbee\cc2530\mine_project_voice\app\Mo #
#                          bilePhone\iar\..\..\..\util\ -I                    #
#                          E:\p4\main\Zigbee\cc2530\mine_project_voice\app\Mo #
#                          bilePhone\iar\..\..\..\driver\include\ -I          #
#                          E:\p4\main\Zigbee\cc2530\mine_project_voice\app\Mo #
#                          bilePhone\iar\..\..\..\driver\common\ -I           #
#                          E:\p4\main\Zigbee\cc2530\mine_project_voice\app\Mo #
#                          bilePhone\iar\..\..\..\driver\MobilePhone\ -I      #
#                          E:\p4\main\Zigbee\cc2530\mine_project_voice\app\Mo #
#                          bilePhone\iar\..\..\..\driver\MobilePhone\audio\   #
#                          -I E:\p4\main\Zigbee\cc2530\mine_project_voice\app #
#                          \MobilePhone\iar\..\..\..\driver\MobilePhone\commo #
#                          n\ -I E:\p4\main\Zigbee\cc2530\mine_project_voice\ #
#                          app\MobilePhone\iar\..\..\..\driver\MobilePhone\ke #
#                          y\ -I E:\p4\main\Zigbee\cc2530\mine_project_voice\ #
#                          app\MobilePhone\iar\..\..\..\driver\MobilePhone\lc #
#                          d\ -I E:\p4\main\Zigbee\cc2530\mine_project_voice\ #
#                          app\MobilePhone\iar\..\..\..\driver\MobilePhone\io #
#                          expand\ -I "C:\Program Files\IAR Systems\Embedded  #
#                          Workbench 5.4\8051\INC\" -I "C:\Program Files\IAR  #
#                          Systems\Embedded Workbench 5.4\8051\INC\CLIB\"     #
#                          -Ohs                                               #
#    List file          =  E:\p4\main\Zigbee\cc2530\mine_project_voice\app\Mo #
#                          bilePhone\iar\Release\List\MobilePhone_Dep.lst     #
#    Object file        =  E:\p4\main\Zigbee\cc2530\mine_project_voice\app\Mo #
#                          bilePhone\iar\Release\Obj\MobilePhone_Dep.r51      #
#                                                                             #
#                                                                             #
###############################################################################

E:\p4\main\Zigbee\cc2530\mine_project_voice\app\MobilePhone\src\MobilePhone_Dep.c
      1          /**************************************************************************************************
      2          Filename:       MPDep.c
      3          Revised:        $Date: 2011/08/02 01:58:26 $
      4          Revision:       $Revision: 1.6 $
      5          
      6          Description:   Dependend interface for MP and so on.
      7          **************************************************************************************************/
      8          /*********************************************************************
      9          * INCLUDES
     10          */
     11          #include "MobilePhone_Dep.h"
     12          #include "MobilePhone_global.h"
     13          
     14          #include "WatchDogUtil.h"
     15          
     16          #include "hal_mcu.h"
     17          #include "hal_adc.h"
     18          #include "hal_key.h"
     19          #include "key.h"
     20          #include "mac_radio_defs.h"
     21          #include "delay.h"
     22          
     23          #include "App_cfg.h"
     24          #include "Delay.h"
     25          #include "WatchDogUtil.h"
     26          #include "hal_types.h"
     27          #if ((defined HAL_AUDIO) && (HAL_AUDIO == TRUE))
     28          #include "hal_audio.h"
     29          #endif
     30          #include "lcd_serial.h"
     31          #include "hal_adc.h"
     32          
     33          #include "Osal_Nv.h"
     34          #include "MenuLib_Nv.h"
     35          /*************************************************************************************************
     36          *CONSTANTS
     37          */
     38          /*************************************************************************************************
     39          *MACROS
     40          */
     41          
     42          #define HAL_VCC40V  24496
     43          #define HAL_VCC39V  23888
     44          #define HAL_VCC38V  23328
     45          #define HAL_VCC37V  22704
     46          #define HAL_VCC36V  21984
     47          #define HAL_VCC35V  21552
     48          #define HAL_VCC34V  20868
     49          #define HAL_VCC33V  20360
     50          
     51          static  const uint16 HalAdcVccTable[]=
     52          {
     53              1484,       /* Shut Down VDD 3.6v */
     54              1524,       /*  VDD Limit - 3.70v  */
     55              1547,       /*  VDD Limit - 3.76v  */
     56              1573,       /*  VDD Limit - 3.82v  */
     57              1624        /*  VDD Limit - 3.95v  */
     58          };
     59          
     60          /*************************************************************************************************
     61          *MACROS
     62          */
     63          /* sleep and external interrupt port masks */
     64          #define STIE_BV                             BV(5)
     65          #define P0IE_BV                             BV(5)
     66          #define P1IE_BV                             BV(4)
     67          #define P2IE_BV                             BV(1)
     68          
     69          #define MS_TO_320US(ms)           (((((uint32) (ms)) * 100) + 31) / 32)
     70          
     71          /*********************************************************************
     72          * GLOBAL VARIABLES
     73          */
     74          
     75          /*********************************************************************
     76          * LOCAL VARIABLES
     77          */
     78          static __idata bool MineApp_PowerOn = TRUE;
     79          
     80          /*********************************************************************
     81          * function definations
     82          */
     83          static inline bool MP_InTestLongPress(uint16 key,uint16 TimeOut);
     84          static inline void MP_SleepSetTimer(uint32 timeout);
     85          static int8  MP_AdcVdd2Level(uint16 vdd);
     86          
     87          void MP_turn_off_PA_LNA_use_16mRC(void)
     88          {
     89          #if (defined WATCHDOG) &&(WATCHDOG == TRUE)
     90              FeedWatchDog();
     91          #endif
     92              OBSSEL1 = 0;
     93              OBSSEL4 = 0;
     94              P1SEL &= ~(BV(1) | BV(4));
     95              P1DIR |= (BV(1) | BV(4));
     96              P1 &= ~(BV(1) | BV(4));
     97          
     98          #if 1
     99             SLEEPCMD &= ~OSC_PD;                       /* turn on 16MHz RC and 32MHz XOSC */                \
    100             while (!(SLEEPSTA & XOSC_STB));            /* wait for 32MHz XOSC stable */                     \
    101             asm("NOP");                                /* chip bug workaround */                            \
    102             for (uint16 i=0; i<504; i++) asm("NOP");          /* Require 63us delay for all revs */                \
    103             CLKCONCMD = (CLKCONCMD_16MHZ | OSC_32KHZ); /* Select 16MHz XOSC and the source for 32K clock */ \
    104             while (CLKCONSTA != (CLKCONCMD_16MHZ | OSC_32KHZ)); /* Wait for the change to be effective */   \
    105             SLEEPCMD |= OSC_PD;                        /* turn off 16MHz RC */
    106          #endif
    107          
    108          }
    109          
    110          inline bool MP_InTestLongPress(uint16 key,uint16 TimeOut)
    111          {
    112              uint16 testInterval = 100;
    113              uint16 testnum = TimeOut/testInterval;
    114              for( uint16 i=0; i<testnum; i++)
    115              {
    116                  DelayMs(testInterval);
    117                  uint8 key_tmp = GetKey();
    118          
    119          #if(defined WATCHDOG) &&(WATCHDOG == TRUE)
    120                  FeedWatchDog();
    121          #endif
    122                  if(key_tmp != key)
    123                  {
    124                      return false;
    125                  }
    126              }
    127              return true;
    128          }
    129          bool MP_TestLongPress(uint16 key,uint16 TimeOut)
    130          {
    131              return MP_InTestLongPress(key,TimeOut);
    132          }
    133          
    134          
    135          void MP_LongDelay(uint16 timeout, uint8 cnt)
    136          {
    137              for(uint8 i=0; i<cnt; i++)
    138              {
    139          #if (defined WATCHDOG) &&(WATCHDOG==TRUE)
    140                  FeedWatchDog();
    141          #endif
    142                  DelayMs(timeout);
    143              }
    144          }
    145          
    146          inline void MP_SleepSetTimer(uint32 timeout)
    147          {
    148              uint32 ticks;
    149          
    150              /* read the sleep timer; ST0 must be read first */
    151              ((uint8 *) &ticks)[0] = ST0;
    152              ((uint8 *) &ticks)[1] = ST1;
    153              ((uint8 *) &ticks)[2] = ST2;
    154              ((uint8 *) &ticks)[3] = 0;
    155          
    156          
    157              /* Compute sleep timer compare value.  The ratio of 32 kHz ticks to 320 usec ticks
    158              * is 32768/3125 = 10.48576.  This is nearly 671/64 = 10.484375.
    159              */
    160              ticks += (timeout * 671) / 64;
    161          
    162              /* CC2430 Rev. B bug:  compare value must not be set higher than 0xFFFF7F */
    163              if((ticks & 0xFFFFFF) > 0xFFFF7F)
    164              {
    165                  ticks = 0x000001;
    166              }
    167          
    168              /* set sleep timer compare; ST0 must be written last */
    169              ST2 = ((uint8 *) &ticks)[2];
    170              ST1 = ((uint8 *) &ticks)[1];
    171              ST0 = ((uint8 *) &ticks)[0];
    172          
    173              /* Wait for ST0 jumped for a hop*/
    174              while(ST0 == ((uint8 *) &ticks)[0]);
    175          }
    176          
    177          bool MP_IsPowerOn(void)
    178          {
    179              return MineApp_PowerOn;
    180          }
    181          
    182          void MP_SetPowerOn(bool powerOn)
    183          {
    184              MineApp_PowerOn = powerOn;
    185          }
    186          
    187          
    188          /* -1: need power off */
    189          /* 0-4  vdd level */
    190          static int8  MP_AdcVdd2Level(uint16 vdd)
    191          {
    192              int8 len = sizeof(HalAdcVccTable)/sizeof(HalAdcVccTable[0]);
    193              int8 i;
    194          
    195              for(i=0; i<len; i++)
    196              {
    197                  if(vdd < HalAdcVccTable[i])
    198                  {
    199                      return i-1;
    200                  }
    201              }
    202              return len-1;
    203          }
    204          
    205          uint8 MP_CheckVddLevel(void)
    206          {
    207              uint8 batteryLevel;
    208              uint16 adcvalue;
    209              HalAdcSetReference(HAL_ADC_REF_125V);
    210              adcvalue = HalAdcRead(HAL_ADC_CHANNEL_7, HAL_ADC_RESOLUTION_12);
    211              batteryLevel = (adcvalue -109)/38;
    212              //batteryLevel = MP_AdcVdd2Level(adcvalue);
    213              return batteryLevel;
    214          }

   Maximum stack usage in bytes:

     Function                     ISTACK PSTACK XSTACK
     --------                     ------ ------ ------
     MP_CheckVddLevel                 0      0     10
       -> HalAdcSetReference          0      0     20
       -> HalAdcRead                  0      0     20
     MP_InTestLongPress               0      0     14
       -> DelayMs                     0      0     28
       -> GetKey                      0      0     28
     MP_IsPowerOn                     0      0      0
     MP_LongDelay                     0      0     10
       -> DelayMs                     0      0     20
     MP_SetPowerOn                    0      0      0
     MP_TestLongPress                 2      0      0
       -> MP_InTestLongPress          4      0      0
     MP_turn_off_PA_LNA_use_16mRC     2      0      0


   Segment part sizes:

     Function/Label                       Bytes
     --------------                       -----
     _A_P1                                   1
     SLEEPSTA                                1
     CLKCONSTA                               1
     SLEEPCMD                                1
     CLKCONCMD                               1
     WDCTL                                   1
     P1SEL                                   1
     P1DIR                                   1
     MineApp_PowerOn                         1
     MP_turn_off_PA_LNA_use_16mRC           85
     ?Subroutine0                            7
     MP_InTestLongPress                    111
     MP_TestLongPress                        9
     MP_LongDelay                           43
     ?Subroutine1                            5
     MP_IsPowerOn                            7
     MP_SetPowerOn                           7
     MP_CheckVddLevel                       42
     ?<Initializer for MineApp_PowerOn>      1
     ??MP_turn_off_PA_LNA_use_16mRC?relay    6
     ??MP_InTestLongPress?relay              6
     ??MP_TestLongPress?relay                6
     ??MP_LongDelay?relay                    6
     ??MP_IsPowerOn?relay                    6
     ??MP_SetPowerOn?relay                   6
     ??MP_CheckVddLevel?relay                6

 
 316 bytes in segment BANKED_CODE
  42 bytes in segment BANK_RELAYS
   1 byte  in segment IDATA_I
   1 byte  in segment IDATA_ID
   8 bytes in segment SFR_AN
 
 359 bytes of CODE  memory
   0 bytes of DATA  memory (+ 8 bytes shared)
   1 byte  of IDATA memory

Errors: none
Warnings: 2
