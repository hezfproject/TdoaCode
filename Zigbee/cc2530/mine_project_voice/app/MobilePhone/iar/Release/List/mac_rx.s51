///////////////////////////////////////////////////////////////////////////////
//                                                                            /
// IAR C/C++ Compiler V7.60.1.40026 for 8051            23/Oct/2018  17:27:28 /
// Copyright (C) 2004-2010 IAR Systems AB.                                    /
//                                                                            /
//    Core               =  plain                                             /
//    Code model         =  banked                                            /
//    Data model         =  large                                             /
//    Calling convention =  xdata reentrant                                   /
//    Constant location  =  data_rom                                          /
//    Dptr setup         =  1,16                                              /
//    Source file        =  E:\p4\main\Zigbee\cc2530\mine_project_voice\third /
//                          _party\TIMAC-CC2530-1.3.1\Components\mac\low_leve /
//                          l\srf04\mac_rx.c                                  /
//    Command line       =  E:\p4\main\Zigbee\cc2530\mine_project_voice\third /
//                          _party\TIMAC-CC2530-1.3.1\Components\mac\low_leve /
//                          l\srf04\mac_rx.c -D xSMS_TEMPLATE -D              /
//                          MENU_CLOCKFORMAT -D CELLSWITCH_DEBUG -D           /
//                          MP_INFORMATION -D HOLD_AUTO_START -D SMS_SENDBOX  /
//                          -D NEW_MENU_LIB -D WATCHDOG=TRUE -D               /
//                          NEW_DOUBLE_NVID_OP -D AUDIO_SERIAL -D             /
//                          NWK_AUTO_POLL -D OSC32K_CRYSTAL_INSTALLED=FALSE   /
//                          -D xAUDIO_TEST -D xSINGLE_AUDIO_TEST -D           /
//                          xMULTIAUDIO_TEST -D xREFLECTOR -D xLCD_SUPPORTED  /
//                          -D HAL_LCD=FALSE -D HAL_AUDIO=TRUE -D             /
//                          HAL_SPI=FALSE -D HAL_UART=FALSE -D HAL_LED=FALSE  /
//                          -D HAL_AES=FALSE -D HAL_KEY=TRUE -D               /
//                          IDX_THRESHOLD=12 -D xMACNODEBUG -D                /
//                          xMAC_NO_PARAM_CHECK -D HAL_AUDIO=TRUE -D          /
//                          HAL_DMA=TRUE -D HAL_AES=FALSE -D                  /
//                          MAC_CFG_TX_DATA_MAX=8 -D MAC_CFG_TX_MAX=12 -D     /
//                          MAC_CFG_RX_MAX=8 -lcN E:\p4\main\Zigbee\cc2530\mi /
//                          ne_project_voice\app\MobilePhone\iar\Release\List /
//                          \ -lb E:\p4\main\Zigbee\cc2530\mine_project_voice /
//                          \app\MobilePhone\iar\Release\List\ -o             /
//                          E:\p4\main\Zigbee\cc2530\mine_project_voice\app\M /
//                          obilePhone\iar\Release\Obj\ -e                    /
//                          --require_prototypes --no_unroll --no_inline      /
//                          --no_code_motion --debug --core=plain             /
//                          --dptr=16,1 --data_model=large                    /
//                          --code_model=banked --calling_convention=xdata_re /
//                          entrant --place_constants=data_rom                /
//                          --nr_virtual_regs 16 -I                           /
//                          E:\p4\main\Zigbee\cc2530\mine_project_voice\app\M /
//                          obilePhone\iar\..\src\ -I                         /
//                          E:\p4\main\Zigbee\cc2530\mine_project_voice\app\M /
//                          obilePhone\iar\..\src\MenuLib\ -I                 /
//                          E:\p4\main\Zigbee\cc2530\mine_project_voice\app\M /
//                          obilePhone\iar\..\src\MenuLib\util\ -I            /
//                          E:\p4\main\Zigbee\cc2530\mine_project_voice\app\M /
//                          obilePhone\iar\..\..\..\third_party\TIMAC-CC2530- /
//                          1.3.1\COMPONENTS\MAC\INCLUDE\ -I                  /
//                          E:\p4\main\Zigbee\cc2530\mine_project_voice\app\M /
//                          obilePhone\iar\..\..\..\third_party\TIMAC-CC2530- /
//                          1.3.1\COMPONENTS\MAC\HIGH_LEVEL\ -I               /
//                          E:\p4\main\Zigbee\cc2530\mine_project_voice\app\M /
//                          obilePhone\iar\..\..\..\third_party\TIMAC-CC2530- /
//                          1.3.1\COMPONENTS\MAC\LOW_LEVEL\ -I                /
//                          E:\p4\main\Zigbee\cc2530\mine_project_voice\app\M /
//                          obilePhone\iar\..\..\..\third_party\TIMAC-CC2530- /
//                          1.3.1\COMPONENTS\MAC\LOW_LEVEL\SRF04\ -I          /
//                          E:\p4\main\Zigbee\cc2530\mine_project_voice\app\M /
//                          obilePhone\iar\..\..\..\third_party\TIMAC-CC2530- /
//                          1.3.1\COMPONENTS\MAC\LOW_LEVEL\SRF04\SINGLE_CHIP\ /
//                           -I E:\p4\main\Zigbee\cc2530\mine_project_voice\a /
//                          pp\MobilePhone\iar\..\..\..\third_party\TIMAC-CC2 /
//                          530-1.3.1\COMPONENTS\OSAL\INCLUDE\ -I             /
//                          E:\p4\main\Zigbee\cc2530\mine_project_voice\app\M /
//                          obilePhone\iar\..\..\..\third_party\TIMAC-CC2530- /
//                          1.3.1\COMPONENTS\OSAL\MCU\CC2530\ -I              /
//                          E:\p4\main\Zigbee\cc2530\mine_project_voice\app\M /
//                          obilePhone\iar\..\..\..\third_party\TIMAC-CC2530- /
//                          1.3.1\COMPONENTS\SERVICES\SADDR\ -I               /
//                          E:\p4\main\Zigbee\cc2530\mine_project_voice\app\M /
//                          obilePhone\iar\..\..\..\third_party\TIMAC-CC2530- /
//                          1.3.1\COMPONENTS\SERVICES\SDATA\ -I               /
//                          E:\p4\main\Zigbee\cc2530\mine_project_voice\app\M /
//                          obilePhone\iar\..\..\..\third_party\TIMAC-CC2530- /
//                          1.3.1\COMPONENTS\MT\ -I                           /
//                          E:\p4\main\Zigbee\cc2530\mine_project_voice\app\M /
//                          obilePhone\iar\..\..\..\..\..\..\common\ -I       /
//                          E:\p4\main\Zigbee\cc2530\mine_project_voice\app\M /
//                          obilePhone\iar\..\..\..\..\..\common\lcd\ -I      /
//                          E:\p4\main\Zigbee\cc2530\mine_project_voice\app\M /
//                          obilePhone\iar\..\..\..\..\..\..\common\2g\ -I    /
//                          E:\p4\main\Zigbee\cc2530\mine_project_voice\app\M /
//                          obilePhone\iar\..\..\..\..\..\..\ -I              /
//                          E:\p4\main\Zigbee\cc2530\mine_project_voice\app\M /
//                          obilePhone\iar\..\..\..\driver\ -I                /
//                          E:\p4\main\Zigbee\cc2530\mine_project_voice\app\M /
//                          obilePhone\iar\..\..\..\util\ -I                  /
//                          E:\p4\main\Zigbee\cc2530\mine_project_voice\app\M /
//                          obilePhone\iar\..\..\..\driver\include\ -I        /
//                          E:\p4\main\Zigbee\cc2530\mine_project_voice\app\M /
//                          obilePhone\iar\..\..\..\driver\common\ -I         /
//                          E:\p4\main\Zigbee\cc2530\mine_project_voice\app\M /
//                          obilePhone\iar\..\..\..\driver\MobilePhone\ -I    /
//                          E:\p4\main\Zigbee\cc2530\mine_project_voice\app\M /
//                          obilePhone\iar\..\..\..\driver\MobilePhone\audio\ /
//                           -I E:\p4\main\Zigbee\cc2530\mine_project_voice\a /
//                          pp\MobilePhone\iar\..\..\..\driver\MobilePhone\co /
//                          mmon\ -I E:\p4\main\Zigbee\cc2530\mine_project_vo /
//                          ice\app\MobilePhone\iar\..\..\..\driver\MobilePho /
//                          ne\key\ -I E:\p4\main\Zigbee\cc2530\mine_project_ /
//                          voice\app\MobilePhone\iar\..\..\..\driver\MobileP /
//                          hone\lcd\ -I E:\p4\main\Zigbee\cc2530\mine_projec /
//                          t_voice\app\MobilePhone\iar\..\..\..\driver\Mobil /
//                          ePhone\ioexpand\ -I "C:\Program Files\IAR         /
//                          Systems\Embedded Workbench 5.4\8051\INC\" -I      /
//                          "C:\Program Files\IAR Systems\Embedded Workbench  /
//                          5.4\8051\INC\CLIB\" -Ohs                          /
//    List file          =  E:\p4\main\Zigbee\cc2530\mine_project_voice\app\M /
//                          obilePhone\iar\Release\List\mac_rx.s51            /
//                                                                            /
//                                                                            /
///////////////////////////////////////////////////////////////////////////////

        NAME mac_rx

        RSEG DOVERLAY:DATA:NOROOT(0)
        RSEG IOVERLAY:IDATA:NOROOT(0)
        RSEG ISTACK:IDATA:NOROOT(0)
        RSEG PSTACK:XDATA:NOROOT(0)
        RSEG XSTACK:XDATA:NOROOT(0)

        EXTERN ?ALLOC_XSTACK8
        EXTERN ?BANKED_ENTER_XDATA
        EXTERN ?BANKED_LEAVE_XDATA
        EXTERN ?BDISPATCH
        EXTERN ?BRET
        EXTERN ?CALL_IND
        EXTERN ?DEALLOC_XSTACK8
        EXTERN ?L_MOV_TO_X
        EXTERN ?V0
        EXTERN ?XSP
        EXTERN ?XSTACK_DISP0_8
        EXTERN __INIT_XDATA_Z

        PUBLIC ??macRxAckTxDoneCallback?relay
        PUBLIC ??macRxFifoOverflowIsr?relay
        PUBLIC ??macRxHaltCleanup?relay
        PUBLIC ??macRxInit?relay
        PUBLIC ??macRxPromiscuousMode?relay
        PUBLIC ??macRxRadioPowerUpInit?relay
        PUBLIC ??macRxThresholdIsr?relay
        PUBLIC ??macRxTxReset?relay
        PUBWEAK RFIRQF0
        PUBWEAK RFIRQF1
        PUBWEAK RFST
        PUBWEAK S1CON
        PUBWEAK _A_IEN0
        PUBLIC macRxAckTxDoneCallback
        PUBLIC macRxActive
        PUBLIC macRxFifoOverflowIsr
        PUBLIC macRxFilter
        PUBLIC macRxHaltCleanup
        PUBLIC macRxInit
        PUBLIC macRxOutgoingAckFlag
        PUBLIC macRxPromiscuousMode
        PUBLIC macRxRadioPowerUpInit
        PUBLIC macRxThresholdIsr
        PUBLIC macRxTxReset

macRxHardDisable    SYMBOL "macRxHardDisable"
macDataRxMemFree    SYMBOL "macDataRxMemFree"
halAssertHandler    SYMBOL "halAssertHandler"
macCspForceTxDoneIfPending SYMBOL "macCspForceTxDoneIfPending"
macMemReadRxFifo    SYMBOL "macMemReadRxFifo"
macRadioComputeLQI  SYMBOL "macRadioComputeLQI"
macTxAckReceivedCallback SYMBOL "macTxAckReceivedCallback"
macTxAckNotReceivedCallback SYMBOL "macTxAckNotReceivedCallback"
macDataRxMemAlloc   SYMBOL "macDataRxMemAlloc"
macRxCheckMACPendingCallback SYMBOL "macRxCheckMACPendingCallback"
MAC_SrcMatchCheckAllPending SYMBOL "MAC_SrcMatchCheckAllPending"
macRxCheckPendingCallback SYMBOL "macRxCheckPendingCallback"
macMcuOverflowCapture SYMBOL "macMcuOverflowCapture"
macMcuTimerCapture  SYMBOL "macMcuTimerCapture"
sAddrExtCpy         SYMBOL "sAddrExtCpy"
macRxOffRequest     SYMBOL "macRxOffRequest"
MAC_SrcMatchCheckResult SYMBOL "MAC_SrcMatchCheckResult"
macRxCompleteCallback SYMBOL "macRxCompleteCallback"
macRadioUpdateTxPower SYMBOL "macRadioUpdateTxPower"
macTxStartQueuedFrame SYMBOL "macTxStartQueuedFrame"
??MAC_SrcMatchCheckAllPending?relay SYMBOL "?relay", MAC_SrcMatchCheckAllPending
??MAC_SrcMatchCheckResult?relay SYMBOL "?relay", MAC_SrcMatchCheckResult
??halAssertHandler?relay SYMBOL "?relay", halAssertHandler
??macCspForceTxDoneIfPending?relay SYMBOL "?relay", macCspForceTxDoneIfPending
??macDataRxMemAlloc?relay SYMBOL "?relay", macDataRxMemAlloc
??macDataRxMemFree?relay SYMBOL "?relay", macDataRxMemFree
??macMcuOverflowCapture?relay SYMBOL "?relay", macMcuOverflowCapture
??macMcuTimerCapture?relay SYMBOL "?relay", macMcuTimerCapture
??macMemReadRxFifo?relay SYMBOL "?relay", macMemReadRxFifo
??macRadioComputeLQI?relay SYMBOL "?relay", macRadioComputeLQI
??macRadioUpdateTxPower?relay SYMBOL "?relay", macRadioUpdateTxPower
??macRxCheckMACPendingCallback?relay SYMBOL "?relay", macRxCheckMACPendingCallback
??macRxCheckPendingCallback?relay SYMBOL "?relay", macRxCheckPendingCallback
??macRxCompleteCallback?relay SYMBOL "?relay", macRxCompleteCallback
??macRxHardDisable?relay SYMBOL "?relay", macRxHardDisable
??macRxOffRequest?relay SYMBOL "?relay", macRxOffRequest
??macTxAckNotReceivedCallback?relay SYMBOL "?relay", macTxAckNotReceivedCallback
??macTxAckReceivedCallback?relay SYMBOL "?relay", macTxAckReceivedCallback
??macTxStartQueuedFrame?relay SYMBOL "?relay", macTxStartQueuedFrame
??sAddrExtCpy?relay SYMBOL "?relay", sAddrExtCpy
macRxAckTxDoneCallback SYMBOL "macRxAckTxDoneCallback"
??macRxAckTxDoneCallback?relay SYMBOL "?relay", macRxAckTxDoneCallback
macRxFifoOverflowIsr SYMBOL "macRxFifoOverflowIsr"
??macRxFifoOverflowIsr?relay SYMBOL "?relay", macRxFifoOverflowIsr
macRxHaltCleanup    SYMBOL "macRxHaltCleanup"
??macRxHaltCleanup?relay SYMBOL "?relay", macRxHaltCleanup
macRxInit           SYMBOL "macRxInit"
??macRxInit?relay   SYMBOL "?relay", macRxInit
macRxPromiscuousMode SYMBOL "macRxPromiscuousMode"
??macRxPromiscuousMode?relay SYMBOL "?relay", macRxPromiscuousMode
macRxRadioPowerUpInit SYMBOL "macRxRadioPowerUpInit"
??macRxRadioPowerUpInit?relay SYMBOL "?relay", macRxRadioPowerUpInit
macRxThresholdIsr   SYMBOL "macRxThresholdIsr"
??macRxThresholdIsr?relay SYMBOL "?relay", macRxThresholdIsr
macRxTxReset        SYMBOL "macRxTxReset"
??macRxTxReset?relay SYMBOL "?relay", macRxTxReset

        EXTERN macRxHardDisable
        EXTERN macDataRxMemFree
        EXTERN halAssertHandler
        EXTERN macCspForceTxDoneIfPending
        EXTERN macMemReadRxFifo
        EXTERN macRadioComputeLQI
        EXTERN macTxAckReceivedCallback
        EXTERN macTxAckNotReceivedCallback
        EXTERN macDataRxMemAlloc
        EXTERN macRxCheckMACPendingCallback
        EXTERN MAC_SrcMatchCheckAllPending
        EXTERN macRxCheckPendingCallback
        EXTERN macMcuOverflowCapture
        EXTERN macMcuTimerCapture
        EXTERN sAddrExtCpy
        EXTERN macRxOffRequest
        EXTERN MAC_SrcMatchCheckResult
        EXTERN macRxCompleteCallback
        EXTERN macRadioUpdateTxPower
        EXTERN macTxStartQueuedFrame
        EXTERN ??MAC_SrcMatchCheckAllPending?relay
        EXTERN ??MAC_SrcMatchCheckResult?relay
        EXTERN ??halAssertHandler?relay
        EXTERN ??macCspForceTxDoneIfPending?relay
        EXTERN ??macDataRxMemAlloc?relay
        EXTERN ??macDataRxMemFree?relay
        EXTERN ??macMcuOverflowCapture?relay
        EXTERN ??macMcuTimerCapture?relay
        EXTERN ??macMemReadRxFifo?relay
        EXTERN ??macRadioComputeLQI?relay
        EXTERN ??macRadioUpdateTxPower?relay
        EXTERN ??macRxCheckMACPendingCallback?relay
        EXTERN ??macRxCheckPendingCallback?relay
        EXTERN ??macRxCompleteCallback?relay
        EXTERN ??macRxHardDisable?relay
        EXTERN ??macRxOffRequest?relay
        EXTERN ??macTxAckNotReceivedCallback?relay
        EXTERN ??macTxAckReceivedCallback?relay
        EXTERN ??macTxStartQueuedFrame?relay
        EXTERN ??sAddrExtCpy?relay
        EXTERN macChipVersion
        EXTERN macRadioDefsRefTableId
        EXTERN macRadioDefsRssiAdj
        EXTERN macRxOnFlag
        EXTERN macSrcMatchIsEnabled
        EXTERN macTxActive
        EXTERN pMacDataTx


        ASEGN SFR_AN:DATA:NOROOT,091H
// unsigned char volatile __sfr RFIRQF1
RFIRQF1:
        DS 1

        ASEGN SFR_AN:DATA:NOROOT,09bH
// unsigned char volatile __sfr S1CON
S1CON:
        DS 1

        ASEGN SFR_AN:DATA:NOROOT,0a8H
// union <unnamed> volatile __sfr _A_IEN0
_A_IEN0:
        DS 1

        ASEGN SFR_AN:DATA:NOROOT,0e1H
// unsigned char volatile __sfr RFST
RFST:
        DS 1

        ASEGN SFR_AN:DATA:NOROOT,0e9H
// unsigned char volatile __sfr RFIRQF0
RFIRQF0:
        DS 1

        RSEG XDATA_Z:XDATA:NOROOT(0)
macRxActive:
        DS 1
        REQUIRE __INIT_XDATA_Z

        RSEG XDATA_Z:XDATA:NOROOT(0)
macRxFilter:
        DS 1
        REQUIRE __INIT_XDATA_Z

        RSEG XDATA_Z:XDATA:NOROOT(0)
macRxOutgoingAckFlag:
        DS 1
        REQUIRE __INIT_XDATA_Z

        RSEG CODE_C:CODE:REORDER:NOROOT(0)
        DATA
macRxAddrLen:
        DB 0, 190, 4, 10

        RSEG XDATA_Z:XDATA:NOROOT(0)
pFuncRxState:
        DS 2
        REQUIRE __INIT_XDATA_Z

        RSEG XDATA_Z:XDATA:NOROOT(0)
pRxBuf:
        DS 2
        REQUIRE __INIT_XDATA_Z

        RSEG XDATA_Z:XDATA:NOROOT(0)
rxBuf:
        DS 4
        REQUIRE __INIT_XDATA_Z

        RSEG XDATA_Z:XDATA:NOROOT(0)
rxUnreadLen:
        DS 1
        REQUIRE __INIT_XDATA_Z

        RSEG XDATA_Z:XDATA:NOROOT(0)
rxNextLen:
        DS 1
        REQUIRE __INIT_XDATA_Z

        RSEG XDATA_Z:XDATA:NOROOT(0)
rxPayloadLen:
        DS 1
        REQUIRE __INIT_XDATA_Z

        RSEG XDATA_Z:XDATA:NOROOT(0)
rxFilter:
        DS 1
        REQUIRE __INIT_XDATA_Z

        RSEG XDATA_Z:XDATA:NOROOT(0)
rxPromiscuousMode:
        DS 1
        REQUIRE __INIT_XDATA_Z

        RSEG XDATA_Z:XDATA:NOROOT(0)
rxIsrActiveFlag:
        DS 1
        REQUIRE __INIT_XDATA_Z

        RSEG XDATA_Z:XDATA:NOROOT(0)
rxResetFlag:
        DS 1
        REQUIRE __INIT_XDATA_Z

        RSEG XDATA_Z:XDATA:NOROOT(0)
rxFifoOverflowCount:
        DS 1
        REQUIRE __INIT_XDATA_Z

        RSEG BANKED_CODE:CODE:NOROOT(0)
macRxInit:
        PUSH    DPL
        PUSH    DPH
        ; Saved register size: 2
        ; Auto size: 0
        CLR     A
        MOV     DPTR,#macRxFilter
        MOVX    @DPTR,A
        MOV     DPTR,#rxPromiscuousMode
        MOVX    @DPTR,A
        MOV     DPTR,#pRxBuf
        MOVX    @DPTR,A
        INC     DPTR
        MOVX    @DPTR,A
        MOV     DPTR,#macRxActive
        MOVX    @DPTR,A
        MOV     DPTR,#pFuncRxState
        MOV     A,#(??rxStartIsr?relay & 0xff)
        MOVX    @DPTR,A
        INC     DPTR
        MOV     A,#((??rxStartIsr?relay >> 8) & 0xff)
        MOVX    @DPTR,A
        CLR     A
        MOV     DPTR,#macRxOutgoingAckFlag
        MOVX    @DPTR,A
        MOV     DPTR,#rxIsrActiveFlag
        MOVX    @DPTR,A
        MOV     DPTR,#rxResetFlag
        MOVX    @DPTR,A
        MOV     DPTR,#rxFifoOverflowCount
        LJMP    ?Subroutine0 & 0xFFFF

        RSEG BANKED_CODE:CODE:NOROOT(0)
macRxRadioPowerUpInit:
        PUSH    DPL
        PUSH    DPH
        ; Saved register size: 2
        ; Auto size: 0
        MOV     A,#0x5
        MOV     DPTR,#0x6194
        MOVX    @DPTR,A
        MOV     A,0xa8
        CLR     0xa8.7
        MOV     0x9b,#0x0
        MOV     0xe9,#-0x5
        MOV     C,0xE0 /* A   */.7
        MOV     0xa8.7,C
        MOV     DPTR,#0x61a3
        MOVX    A,@DPTR
        SETB    0xE0 /* A   */.2
        LJMP    ?Subroutine0 & 0xFFFF
        REQUIRE S1CON
        REQUIRE RFIRQF0
        REQUIRE _A_IEN0

        RSEG BANKED_CODE:CODE:NOROOT(0)
macRxTxReset:
        PUSH    DPL
        PUSH    DPH
        ; Saved register size: 2
        ; Auto size: 0
        ; Setup parameters for call to function macRxHardDisable
        LCALL   ??macRxHardDisable?relay
        CLR     A
        MOV     DPTR,#macRxFilter
        MOVX    @DPTR,A
        ; Setup parameters for call to function macRxPromiscuousMode
        MOV     R1,A
        LCALL   ??macRxPromiscuousMode?relay
        LJMP    ??Subroutine2_0 & 0xFFFF

        RSEG BANKED_CODE:CODE:NOROOT(0)
macRxHaltCleanup:
        PUSH    DPL
        PUSH    DPH
        ; Saved register size: 2
        ; Auto size: 0
        MOV     A,#0x1
        MOV     DPTR,#rxResetFlag
        MOVX    @DPTR,A
        MOV     DPTR,#rxIsrActiveFlag
        MOVX    A,@DPTR
        JNZ     ??macRxHaltCleanup_0
        ; Setup parameters for call to function rxHaltCleanupFinalStep
        LCALL   ??rxHaltCleanupFinalStep?relay
        CLR     A
        MOV     DPTR,#rxResetFlag
        MOVX    @DPTR,A
??macRxHaltCleanup_0:
        LJMP    ??Subroutine2_0 & 0xFFFF

        RSEG BANKED_CODE:CODE:NOROOT(0)
rxHaltCleanupFinalStep:
        PUSH    DPL
        PUSH    DPH
        ; Saved register size: 2
        ; Auto size: 0
        MOV     DPTR,#0x61a4
        MOVX    A,@DPTR
        CLR     0xE0 /* A   */.0
        MOVX    @DPTR,A
        MOV     A,#0x5
        MOV     DPTR,#0x6194
        MOVX    @DPTR,A
        MOV     0xe1,#-0x13
        MOV     0xe1,#-0x13
        MOV     A,0xa8
        CLR     0xa8.7
        MOV     0x9b,#0x0
        MOV     0xe9,#-0x5
        MOV     C,0xE0 /* A   */.7
        MOV     0xa8.7,C
        MOV     DPTR,#pRxBuf
        MOVX    A,@DPTR
        JNZ     ??rxHaltCleanupFinalStep_0
        INC     DPTR
        MOVX    A,@DPTR
??rxHaltCleanupFinalStep_0:
        JZ      ??rxHaltCleanupFinalStep_1
        ; Setup parameters for call to function macDataRxMemFree
        MOV     R2,#(pRxBuf & 0xff)
        MOV     R3,#((pRxBuf >> 8) & 0xff)
        LCALL   ??macDataRxMemFree?relay
??rxHaltCleanupFinalStep_1:
        MOV     DPTR,#pRxBuf
        CLR     A
        MOVX    @DPTR,A
        INC     DPTR
        MOVX    @DPTR,A
        MOV     DPTR,#pFuncRxState
        MOV     A,#(??rxStartIsr?relay & 0xff)
        MOVX    @DPTR,A
        INC     DPTR
        MOV     A,#((??rxStartIsr?relay >> 8) & 0xff)
        MOVX    @DPTR,A
        MOV     DPTR,#macRxActive
        MOVX    A,@DPTR
        JNZ     ??rxHaltCleanupFinalStep_2
        MOV     DPTR,#macRxOutgoingAckFlag
        MOVX    A,@DPTR
        JZ      ??rxHaltCleanupFinalStep_3
??rxHaltCleanupFinalStep_2:
        CLR     A
        MOV     DPTR,#macRxActive
        MOVX    @DPTR,A
        MOV     DPTR,#macRxOutgoingAckFlag
        MOVX    @DPTR,A
        ; Setup parameters for call to function rxPostRxUpdates
        LCALL   ??rxPostRxUpdates?relay
??rxHaltCleanupFinalStep_3:
        LJMP    ??Subroutine2_0 & 0xFFFF
        REQUIRE S1CON
        REQUIRE RFST
        REQUIRE RFIRQF0
        REQUIRE _A_IEN0

        RSEG BANKED_CODE:CODE:NOROOT(0)
macRxThresholdIsr:
        PUSH    DPL
        PUSH    DPH
        ; Saved register size: 2
        ; Auto size: 0
        MOV     DPTR,#rxResetFlag
        MOVX    A,@DPTR
        JNZ     ??macRxThresholdIsr_0
        MOV     A,#0x1
        MOV     DPTR,#rxIsrActiveFlag
        MOVX    @DPTR,A
        ; Setup parameters for indirect call
        MOV     DPTR,#pFuncRxState
        MOVX    A,@DPTR
        MOV     R0,A
        INC     DPTR
        MOVX    A,@DPTR
        MOV     DPH,A
        MOV     DPL,R0
        LCALL   ?CALL_IND
        CLR     A
        MOV     DPTR,#rxIsrActiveFlag
        MOVX    @DPTR,A
        MOV     DPTR,#rxResetFlag
        MOVX    A,@DPTR
        JZ      ??macRxThresholdIsr_0
        ; Setup parameters for call to function rxHaltCleanupFinalStep
        LCALL   ??rxHaltCleanupFinalStep?relay
        CLR     A
        MOV     DPTR,#rxResetFlag
        MOVX    @DPTR,A
??macRxThresholdIsr_0:
        LJMP    ??Subroutine2_0 & 0xFFFF

        RSEG BANKED_CODE:CODE:NOROOT(0)
rxStartIsr:
        MOV     A,#-0xc
        LCALL   ?BANKED_ENTER_XDATA
        ; Saved register size: 12
        ; Auto size: 2
        MOV     A,#-0x2
        LCALL   ?ALLOC_XSTACK8
        MOV     DPTR,#macRxActive
        MOVX    A,@DPTR
        JZ      ??rxStartIsr_0
        ; Setup parameters for call to function halAssertHandler
        LCALL   ??halAssertHandler?relay
??rxStartIsr_0:
        MOV     A,#-0x7f
        MOV     DPTR,#macRxActive
        MOVX    @DPTR,A
        MOV     DPTR,#macRxOnFlag
        MOVX    A,@DPTR
        JZ      ??rxStartIsr_1
        MOV     DPTR,#0x6193
        MOVX    A,@DPTR
        MOV     C,0xE0 /* A   */.7
        JC      ??rxStartIsr_2
        MOVX    A,@DPTR
        MOV     C,0xE0 /* A   */.6
        JC      ??rxStartIsr_2
??rxStartIsr_1:
        CLR     A
        MOV     DPTR,#macRxActive
        MOVX    @DPTR,A
        ; Setup parameters for call to function rxPostRxUpdates
        LCALL   ??rxPostRxUpdates?relay
        LJMP    ??rxStartIsr_3 & 0xFFFF
??rxStartIsr_2:
        ; Setup parameters for call to function macCspForceTxDoneIfPending
        LCALL   ??macCspForceTxDoneIfPending?relay
        MOV     DPTR,#0x61a4
        MOVX    A,@DPTR
        CLR     0xE0 /* A   */.0
        MOVX    @DPTR,A
        CLR     A
        MOV     DPTR,#macRxOutgoingAckFlag
        MOVX    @DPTR,A
        MOV     DPTR,#macRxFilter
        MOVX    A,@DPTR
        MOV     DPTR,#rxFilter
        MOVX    @DPTR,A
        ; Setup parameters for call to function macMemReadRxFifo
        MOV     R1,#0x4
        MOV     R2,#(rxBuf & 0xff)
        MOV     R3,#((rxBuf >> 8) & 0xff)
        LCALL   ??macMemReadRxFifo?relay
        MOV     DPTR,#rxBuf
        MOVX    A,@DPTR
        ANL     A,#0x7f
        ADD     A,#-0x3
        MOV     DPTR,#rxUnreadLen
        MOVX    @DPTR,A
        MOV     DPTR,#macChipVersion
        MOVX    A,@DPTR
        MOV     DPTR,#rxUnreadLen
        JNZ     ??rxStartIsr_4
        MOVX    A,@DPTR
        CLR     C
        SUBB    A,#0x7d
        JNC     ??rxStartIsr_5
        MOV     DPTR,#(rxBuf + 1)
        MOVX    A,@DPTR
        ANL     A,#0x7
        CLR     C
        SUBB    A,#0x4
        JC      ??rxStartIsr_6
??rxStartIsr_5:
        MOV     0xe1,#-0x13
        MOV     0xe1,#-0x13
        ; Setup parameters for call to function rxDone
??rxStartIsr_7:
        LCALL   ??rxDone?relay
        LJMP    ??rxStartIsr_3 & 0xFFFF
??rxStartIsr_4:
        MOVX    A,@DPTR
        CLR     C
        SUBB    A,#0x7d
        JC      ??rxStartIsr_6
        ; Setup parameters for call to function halAssertHandler
        LCALL   ??halAssertHandler?relay
??rxStartIsr_6:
        MOV     DPTR,#(rxBuf + 1)
        MOVX    A,@DPTR
        ANL     A,#0x7
        XRL     A,#0x2
        JZ      $+5
        LJMP    ??rxStartIsr_8 & 0xFFFF
        MOV     DPTR,#rxPromiscuousMode
        MOVX    A,@DPTR
        JZ      $+5
        LJMP    ??rxStartIsr_8 & 0xFFFF
        ; Setup parameters for call to function macMemReadRxFifo
        MOV     R1,#0x2
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        MOV     R2,DPL
        MOV     R3,DPH
        LCALL   ??macMemReadRxFifo?relay
        MOV     C,0xa8.7
        CLR     A
        MOV     0xE0 /* A   */.0,C
        MOV     ?V0 + 0,A
        CLR     0xa8.7
        MOV     DPTR,#macTxActive
        MOVX    A,@DPTR
        XRL     A,#0x86
        JZ      $+5
        LJMP    ??rxStartIsr_9 & 0xFFFF
        MOV     DPTR,#pMacDataTx
        MOVX    A,@DPTR
        JNZ     ??rxStartIsr_10
        INC     DPTR
        MOVX    A,@DPTR
??rxStartIsr_10:
        JNZ     ??rxStartIsr_11
        ; Setup parameters for call to function halAssertHandler
        LCALL   ??halAssertHandler?relay
??rxStartIsr_11:
        MOV     DPTR,#macRadioDefsRefTableId
        MOVX    A,@DPTR
        MOV     R0,A
        MOV     A,#0xf
        ANL     A,R0
        ADD     A,#(macRadioDefsRssiAdj & 0xff)
        MOV     DPL,A
        CLR     A
        ADDC    A,#((macRadioDefsRssiAdj >> 8) & 0xff)
        MOV     DPH,A
        CLR     A
        MOVC    A,@A+DPTR
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        MOV     R2,A
        MOVX    A,@DPTR
        ADD     A,R2
        ADD     A,#-0x49
        MOV     R6,A
        MOV     A,#0x1
        LCALL   ?XSTACK_DISP0_8
        MOVX    A,@DPTR
        ANL     A,#0x7f
        MOV     R7,A
        ; Setup parameters for call to function macRadioComputeLQI
        MOV     R2,A
        MOV     A,R6
        MOV     R1,A
        LCALL   ??macRadioComputeLQI?relay
        MOV     A,R1
        PUSH    A
        MOV     DPTR,#pMacDataTx
        MOVX    A,@DPTR
        ADD     A,#0x14
        MOV     R0,A
        INC     DPTR
        MOVX    A,@DPTR
        ADDC    A,#0x0
        MOV     R1,A
        MOV     DPL,R0
        MOV     DPH,R1
        POP     A
        MOVX    @DPTR,A
        MOV     DPTR,#pMacDataTx
        MOVX    A,@DPTR
        ADD     A,#0x15
        MOV     R0,A
        INC     DPTR
        MOVX    A,@DPTR
        ADDC    A,#0x0
        MOV     R1,A
        MOV     DPL,R0
        MOV     DPH,R1
        MOV     A,R7
        MOVX    @DPTR,A
        MOV     DPTR,#pMacDataTx
        MOVX    A,@DPTR
        ADD     A,#0x16
        MOV     R0,A
        INC     DPTR
        MOVX    A,@DPTR
        ADDC    A,#0x0
        MOV     R1,A
        MOV     DPL,R0
        MOV     DPH,R1
        MOV     A,R6
        MOVX    @DPTR,A
        MOV     A,?V0 + 0
        MOV     C,0xE0 /* A   */.0
        MOV     0xa8.7,C
        MOV     A,#0x1
        LCALL   ?XSTACK_DISP0_8
        MOVX    A,@DPTR
        MOV     C,0xE0 /* A   */.7
        JNC     ??rxStartIsr_12
        ; Setup parameters for call to function macTxAckReceivedCallback
        MOV     DPTR,#(rxBuf + 1)
        MOVX    A,@DPTR
        ANL     A,#0x10
        MOV     R2,A
        MOV     DPTR,#(rxBuf + 3)
        MOVX    A,@DPTR
        MOV     R1,A
        LCALL   ??macTxAckReceivedCallback?relay
        SJMP    ??rxStartIsr_13
??rxStartIsr_12:
        ; Setup parameters for call to function macTxAckNotReceivedCallback
        LCALL   ??macTxAckNotReceivedCallback?relay
        SJMP    ??rxStartIsr_13
??rxStartIsr_9:
        MOV     A,?V0 + 0
        MOV     C,0xE0 /* A   */.0
        MOV     0xa8.7,C
??rxStartIsr_13:
        ; Setup parameters for call to function rxDone
        LJMP    ??rxStartIsr_7 & 0xFFFF
??rxStartIsr_8:
        MOV     DPTR,#macTxActive
        MOVX    A,@DPTR
        XRL     A,#0x86
        JNZ     ??rxStartIsr_14
        ; Setup parameters for call to function macTxAckNotReceivedCallback
        LCALL   ??macTxAckNotReceivedCallback?relay
??rxStartIsr_14:
        MOV     DPTR,#rxFilter
        MOVX    A,@DPTR
        JZ      ??rxStartIsr_15
        MOV     DPTR,#rxPromiscuousMode
        MOVX    A,@DPTR
        JNZ     ??rxStartIsr_15
        MOV     DPTR,#rxFilter
        MOVX    A,@DPTR
        XRL     A,#0x1
        JNZ     $+5
        LJMP    ??rxStartIsr_16 & 0xFFFF
        MOVX    A,@DPTR
        XRL     A,#0x2
        JZ      $+5
        LJMP    ??rxStartIsr_17 & 0xFFFF
        MOV     DPTR,#(rxBuf + 1)
        MOVX    A,@DPTR
        ANL     A,#0x7
        JZ      $+5
        LJMP    ??rxStartIsr_16 & 0xFFFF
??rxStartIsr_15:
        MOV     DPTR,#(rxBuf + 2)
        MOVX    A,@DPTR
        MOV     R2,A
        RRC     A
        RRC     A
        ANL     A,#0x3f
        ANL     A,#0x3
        MOV     ?V0 + 2,A
        MOV     A,R2
        SWAP    A
        RRC     A
        RRC     A
        ANL     A,#0x3
        MOV     ?V0 + 3,A
        MOV     DPTR,#macChipVersion
        MOVX    A,@DPTR
        JNZ     ??rxStartIsr_18
        MOV     A,#0x1
        XRL     A,?V0 + 3
        JNZ     $+5
        LJMP    ??rxStartIsr_5 & 0xFFFF
        MOV     A,#0x1
        XRL     A,?V0 + 2
        JNZ     $+5
        LJMP    ??rxStartIsr_5 & 0xFFFF
??rxStartIsr_18:
        MOV     ?V0 + 0,?V0 + 3
        MOV     A,?V0 + 0
        ADD     A,#(macRxAddrLen & 0xff)
        MOV     DPL,A
        CLR     A
        ADDC    A,#((macRxAddrLen >> 8) & 0xff)
        MOV     DPH,A
        CLR     A
        MOVC    A,@A+DPTR
        PUSH    A
        MOV     ?V0 + 0,?V0 + 2
        MOV     A,?V0 + 0
        ADD     A,#(macRxAddrLen & 0xff)
        MOV     DPL,A
        CLR     A
        ADDC    A,#((macRxAddrLen >> 8) & 0xff)
        MOV     DPH,A
        CLR     A
        MOVC    A,@A+DPTR
        MOV     R2,A
        POP     A
        ADD     A,R2
        MOV     R6,A
        MOV     A,?V0 + 3
        JZ      ??rxStartIsr_19
        MOV     DPTR,#(rxBuf + 1)
        MOVX    A,@DPTR
        MOV     C,0xE0 /* A   */.6
        JNC     ??rxStartIsr_19
        DEC     R6
        DEC     R6
??rxStartIsr_19:
        MOV     DPTR,#rxUnreadLen
        MOVX    A,@DPTR
        MOV     R2,A
        MOV     ?V0 + 0,R6
        MOV     A,#0x2
        ADD     A,?V0 + 0
        MOV     R0,A
        CLR     A
        ADDC    A,#0x0
        MOV     R1,A
        MOV     A,R2
        SUBB    A,R0
        CLR     A
        SUBB    A,R1
        CLR     C
        XRL     A,PSW
        RLC     A
        JC      ??rxStartIsr_16
        MOVX    A,@DPTR
        CLR     C
        SUBB    A,R6
        ADD     A,#-0x2
        MOV     DPTR,#rxPayloadLen
        MOVX    @DPTR,A
        ; Setup parameters for call to function macDataRxMemAlloc
        MOV     R0,A
        MOV     A,#0x32
        ADD     A,R0
        MOV     R2,A
        CLR     A
        ADDC    A,#0x0
        MOV     R3,A
        LCALL   ??macDataRxMemAlloc?relay
        MOV     DPTR,#pRxBuf
        MOV     A,R2
        MOVX    @DPTR,A
        INC     DPTR
        MOV     A,R3
        MOVX    @DPTR,A
        MOV     DPTR,#pRxBuf
        MOVX    A,@DPTR
        JNZ     ??rxStartIsr_20
        INC     DPTR
        MOVX    A,@DPTR
??rxStartIsr_20:
        JNZ     ??rxStartIsr_21
        MOV     0xe1,#-0x18
        ; Setup parameters for call to function rxDiscardFrame
??rxStartIsr_16:
        LCALL   ??rxDiscardFrame?relay
        LJMP    ??rxStartIsr_3 & 0xFFFF
??rxStartIsr_17:
        MOVX    A,@DPTR
        XRL     A,#0x3
        JZ      $+5
        LJMP    ??rxStartIsr_15 & 0xFFFF
        MOV     DPTR,#(rxBuf + 1)
        MOVX    A,@DPTR
        ANL     A,#0x7
        XRL     A,#0x3
        JNZ     $+5
        LJMP    ??rxStartIsr_15 & 0xFFFF
        ; Setup parameters for call to function rxDiscardFrame
        SJMP    ??rxStartIsr_16
??rxStartIsr_21:
        MOV     R7,#0x0
        MOV     DPTR,#rxPromiscuousMode
        MOVX    A,@DPTR
        JNZ     ??rxStartIsr_22
        MOV     DPTR,#(rxBuf + 1)
        MOVX    A,@DPTR
        ANL     A,#0x20
        MOV     DPTR,#macRxOutgoingAckFlag
        MOVX    @DPTR,A
??rxStartIsr_22:
        MOV     DPTR,#macRxOutgoingAckFlag
        MOVX    A,@DPTR
        JZ      ??rxStartIsr_23
        MOV     C,0xa8.7
        CLR     A
        MOV     0xE0 /* A   */.0,C
        MOV     ?V0 + 0,A
        CLR     0xa8.7
        MOV     DPTR,#(rxBuf + 1)
        MOVX    A,@DPTR
        ANL     A,#0x7
        XRL     A,#0x3
        JNZ     ??rxStartIsr_24
        ; Setup parameters for call to function macRxCheckMACPendingCallback
        LCALL   ??macRxCheckMACPendingCallback?relay
        MOV     A,R1
        JZ      ??rxStartIsr_25
??rxStartIsr_26:
        MOV     R7,#0x4
        MOV     DPTR,#0x618a
        MOVX    A,@DPTR
        SETB    0xE0 /* A   */.2
        SJMP    ??rxStartIsr_27
??rxStartIsr_25:
        MOV     DPTR,#macSrcMatchIsEnabled
        MOVX    A,@DPTR
        JZ      ??rxStartIsr_28
        ; Setup parameters for call to function MAC_SrcMatchCheckAllPending
        LCALL   ??MAC_SrcMatchCheckAllPending?relay
        MOV     A,R1
        XRL     A,#0xfe
        JNZ     ??rxStartIsr_24
        SJMP    ??rxStartIsr_26
??rxStartIsr_28:
        ; Setup parameters for call to function macRxCheckPendingCallback
        LCALL   ??macRxCheckPendingCallback?relay
        MOV     A,R1
        JNZ     ??rxStartIsr_26
??rxStartIsr_24:
        MOV     DPTR,#0x618a
        MOVX    A,@DPTR
        CLR     0xE0 /* A   */.2
??rxStartIsr_27:
        MOVX    @DPTR,A
        MOV     A,0xa8
        CLR     0xa8.7
        MOV     0x9b,#0x0
        MOV     0x91,#-0x2
        MOV     C,0xE0 /* A   */.7
        MOV     0xa8.7,C
        MOV     DPTR,#0x61a4
        MOVX    A,@DPTR
        SETB    0xE0 /* A   */.0
        MOVX    @DPTR,A
        MOV     A,?V0 + 0
        MOV     C,0xE0 /* A   */.0
        MOV     0xa8.7,C
??rxStartIsr_23:
        MOV     DPTR,#pRxBuf
        MOVX    A,@DPTR
        ADD     A,#0x32
        MOV     R0,A
        INC     DPTR
        MOVX    A,@DPTR
        ADDC    A,#0x0
        MOV     R1,A
        MOV     DPTR,#pRxBuf
        MOVX    A,@DPTR
        MOV     R2,A
        INC     DPTR
        MOVX    A,@DPTR
        MOV     DPH,A
        MOV     DPL,R2
        INC     DPTR
        INC     DPTR
        MOV     A,R0
        MOVX    @DPTR,A
        INC     DPTR
        MOV     A,R1
        MOVX    @DPTR,A
        MOV     DPTR,#rxPayloadLen
        MOVX    A,@DPTR
        PUSH    A
        MOV     DPTR,#pRxBuf
        MOVX    A,@DPTR
        MOV     R0,A
        INC     DPTR
        MOVX    A,@DPTR
        MOV     DPH,A
        MOV     DPL,R0
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        POP     A
        MOVX    @DPTR,A
        MOV     DPTR,#pRxBuf
        MOVX    A,@DPTR
        ADD     A,#0x1a
        MOV     R0,A
        INC     DPTR
        MOVX    A,@DPTR
        ADDC    A,#0x0
        MOV     R1,A
        MOV     DPL,R0
        MOV     DPH,R1
        MOV     A,?V0 + 3
        MOVX    @DPTR,A
        MOV     DPTR,#pRxBuf
        MOVX    A,@DPTR
        ADD     A,#0x23
        MOV     R0,A
        INC     DPTR
        MOVX    A,@DPTR
        ADDC    A,#0x0
        MOV     R1,A
        MOV     DPL,R0
        MOV     DPH,R1
        MOV     A,?V0 + 2
        MOVX    @DPTR,A
        ; Setup parameters for call to function macMcuOverflowCapture
        LCALL   ??macMcuOverflowCapture?relay
        MOV     ?V0 + 0,R2
        MOV     ?V0 + 1,R3
        MOV     ?V0 + 2,R4
        MOV     ?V0 + 3,R5
        MOV     DPTR,#pRxBuf
        MOVX    A,@DPTR
        ADD     A,#0x24
        MOV     R0,A
        INC     DPTR
        MOVX    A,@DPTR
        ADDC    A,#0x0
        MOV     R1,A
        MOV     DPL,R0
        MOV     DPH,R1
        MOV     R0,#?V0 + 0
        LCALL   ?L_MOV_TO_X
        ; Setup parameters for call to function macMcuTimerCapture
        LCALL   ??macMcuTimerCapture?relay
        MOV     DPTR,#pRxBuf
        MOVX    A,@DPTR
        ADD     A,#0x28
        MOV     R0,A
        INC     DPTR
        MOVX    A,@DPTR
        ADDC    A,#0x0
        MOV     R1,A
        MOV     DPL,R0
        MOV     DPH,R1
        MOV     A,R2
        MOVX    @DPTR,A
        INC     DPTR
        MOV     A,R3
        MOVX    @DPTR,A
        MOV     DPTR,#(rxBuf + 1)
        MOVX    A,@DPTR
        ANL     A,#0x7
        PUSH    A
        MOV     DPTR,#pRxBuf
        MOVX    A,@DPTR
        MOV     R0,A
        INC     DPTR
        MOVX    A,@DPTR
        MOV     DPH,A
        MOV     DPL,R0
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        POP     A
        MOVX    @DPTR,A
        MOV     DPTR,#(rxBuf + 3)
        MOVX    A,@DPTR
        PUSH    A
        MOV     DPTR,#pRxBuf
        MOVX    A,@DPTR
        ADD     A,#0x31
        MOV     R0,A
        INC     DPTR
        MOVX    A,@DPTR
        ADDC    A,#0x0
        MOV     R1,A
        MOV     DPL,R0
        MOV     DPH,R1
        POP     A
        MOVX    @DPTR,A
        MOV     DPTR,#(rxBuf + 1)
        MOVX    A,@DPTR
        ANL     A,#0x78
        PUSH    A
        MOV     DPTR,#(rxBuf + 2)
        MOVX    A,@DPTR
        SWAP    A
        ANL     A,#0xf
        ANL     A,#0x3
        MOV     R2,A
        POP     A
        ORL     A,R2
        ORL     A,R7
        PUSH    A
        MOV     DPTR,#pRxBuf
        MOVX    A,@DPTR
        MOV     R0,A
        INC     DPTR
        MOVX    A,@DPTR
        MOV     DPH,A
        MOV     DPL,R0
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        POP     A
        MOVX    @DPTR,A
        MOV     DPTR,#pRxBuf
        MOVX    A,@DPTR
        ADD     A,#0xf
        MOV     R0,A
        INC     DPTR
        MOVX    A,@DPTR
        ADDC    A,#0x0
        MOV     R1,A
        MOV     DPL,R0
        MOV     DPH,R1
        CLR     A
        MOVX    @DPTR,A
        MOV     A,R6
        JNZ     ??rxStartIsr_29
        MOV     DPTR,#pFuncRxState
        MOV     A,#(??rxPayloadIsr?relay & 0xff)
        MOVX    @DPTR,A
        INC     DPTR
        MOV     A,#((??rxPayloadIsr?relay >> 8) & 0xff)
        MOVX    @DPTR,A
        ; Setup parameters for call to function rxPrepPayload
        LCALL   ??rxPrepPayload?relay
        SJMP    ??rxStartIsr_3
??rxStartIsr_29:
        MOV     DPTR,#rxNextLen
        MOVX    @DPTR,A
        DEC     A
        MOV     DPTR,#0x6194
        MOVX    @DPTR,A
        MOV     DPTR,#pFuncRxState
        MOV     A,#(??rxAddrIsr?relay & 0xff)
        MOVX    @DPTR,A
        INC     DPTR
        MOV     A,#((??rxAddrIsr?relay >> 8) & 0xff)
        MOVX    @DPTR,A
??rxStartIsr_3:
        MOV     A,#0x2
        LCALL   ?DEALLOC_XSTACK8
        MOV     R7,#0x4
        LJMP    ?BANKED_LEAVE_XDATA
        REQUIRE RFIRQF1
        REQUIRE S1CON
        REQUIRE RFST
        REQUIRE _A_IEN0

        RSEG BANKED_CODE:CODE:NOROOT(0)
rxAddrIsr:
        MOV     A,#-0x9
        LCALL   ?BANKED_ENTER_XDATA
        ; Saved register size: 9
        ; Auto size: 20
        MOV     A,#-0x14
        LCALL   ?ALLOC_XSTACK8
        MOV     DPTR,#rxNextLen
        MOVX    A,@DPTR
        JNZ     ??rxAddrIsr_0
        ; Setup parameters for call to function halAssertHandler
        LCALL   ??halAssertHandler?relay
??rxAddrIsr_0:
        ; Setup parameters for call to function macMemReadRxFifo
        MOV     DPTR,#rxNextLen
        MOVX    A,@DPTR
        MOV     R1,A
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        MOV     R2,DPL
        MOV     R3,DPH
        LCALL   ??macMemReadRxFifo?relay
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        MOV     R4,DPL
        MOV     R5,DPH
        MOV     DPTR,#(rxBuf + 2)
        MOVX    A,@DPTR
        RRC     A
        RRC     A
        ANL     A,#0x3f
        ANL     A,#0x3
        MOV     R6,A
        JNZ     $+5
        LJMP    ??rxAddrIsr_1 & 0xFFFF
        MOV     DPTR,#pRxBuf
        MOVX    A,@DPTR
        ADD     A,#0x2c
        MOV     R0,A
        INC     DPTR
        MOVX    A,@DPTR
        ADDC    A,#0x0
        MOV     R1,A
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        MOVX    A,@DPTR
        MOV     R4,A
        MOV     A,#0x1
        LCALL   ?XSTACK_DISP0_8
        MOVX    A,@DPTR
        MOV     R3,A
        MOV     A,R4
        MOV     DPL,R0
        MOV     DPH,R1
        MOVX    @DPTR,A
        INC     DPTR
        MOV     A,R3
        MOVX    @DPTR,A
        MOV     DPL,R0
        MOV     DPH,R1
        MOVX    A,@DPTR
        MOV     R2,A
        MOV     DPTR,#pRxBuf
        MOVX    A,@DPTR
        ADD     A,#0x2a
        MOV     R0,A
        INC     DPTR
        MOVX    A,@DPTR
        ADDC    A,#0x0
        MOV     R1,A
        MOV     DPL,R0
        MOV     DPH,R1
        MOV     A,R2
        MOVX    @DPTR,A
        INC     DPTR
        MOV     A,R3
        MOVX    @DPTR,A
        MOV     A,#0x3
        XRL     A,R6
        JNZ     ??rxAddrIsr_2
        ; Setup parameters for call to function sAddrExtCpy
        MOV     A,#0x2
        LCALL   ?XSTACK_DISP0_8
        MOV     R4,DPL
        MOV     R5,DPH
        MOV     DPTR,#pRxBuf
        MOVX    A,@DPTR
        ADD     A,#0x1b
        MOV     R2,A
        INC     DPTR
        MOVX    A,@DPTR
        ADDC    A,#0x0
        MOV     R3,A
        LCALL   ??sAddrExtCpy?relay
        MOV     A,#0xa
        SJMP    ??rxAddrIsr_3
??rxAddrIsr_2:
        MOV     A,#0x2
        LCALL   ?XSTACK_DISP0_8
        MOVX    A,@DPTR
        MOV     R2,A
        MOV     A,#0x3
        LCALL   ?XSTACK_DISP0_8
        MOVX    A,@DPTR
        MOV     R3,A
        MOV     DPTR,#pRxBuf
        MOVX    A,@DPTR
        ADD     A,#0x1b
        MOV     R0,A
        INC     DPTR
        MOVX    A,@DPTR
        ADDC    A,#0x0
        MOV     R1,A
        MOV     DPL,R0
        MOV     DPH,R1
        MOV     A,R2
        MOVX    @DPTR,A
        INC     DPTR
        MOV     A,R3
        MOVX    @DPTR,A
        MOV     A,#0x4
??rxAddrIsr_3:
        LCALL   ?XSTACK_DISP0_8
        MOV     R4,DPL
        MOV     R5,DPH
??rxAddrIsr_1:
        MOV     DPTR,#(rxBuf + 2)
        MOVX    A,@DPTR
        SWAP    A
        RRC     A
        RRC     A
        ANL     A,#0x3
        MOV     R6,A
        JZ      ??rxAddrIsr_4
        MOV     DPTR,#pRxBuf
        MOVX    A,@DPTR
        MOV     R0,A
        INC     DPTR
        MOVX    A,@DPTR
        MOV     DPH,A
        MOV     DPL,R0
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        MOVX    A,@DPTR
        MOV     C,0xE0 /* A   */.6
        JC      ??rxAddrIsr_5
        MOV     DPL,R4
        MOV     DPH,R5
        MOVX    A,@DPTR
        MOV     R2,A
        INC     DPTR
        MOVX    A,@DPTR
        MOV     R3,A
        MOV     DPTR,#pRxBuf
        MOVX    A,@DPTR
        ADD     A,#0x2a
        MOV     R0,A
        INC     DPTR
        MOVX    A,@DPTR
        ADDC    A,#0x0
        MOV     R1,A
        MOV     DPL,R0
        MOV     DPH,R1
        MOV     A,R2
        MOVX    @DPTR,A
        INC     DPTR
        MOV     A,R3
        MOVX    @DPTR,A
        MOV     A,R4
        ADD     A,#0x2
        INC     R4
        INC     R4
        MOV     A,R5
        ADDC    A,#0x0
        MOV     R5,A
??rxAddrIsr_5:
        MOV     A,#0x3
        XRL     A,R6
        JNZ     ??rxAddrIsr_6
        ; Setup parameters for call to function sAddrExtCpy
        MOV     DPTR,#pRxBuf
        MOVX    A,@DPTR
        ADD     A,#0x12
        MOV     R2,A
        INC     DPTR
        MOVX    A,@DPTR
        ADDC    A,#0x0
        MOV     R3,A
        LCALL   ??sAddrExtCpy?relay
        SJMP    ??rxAddrIsr_4
??rxAddrIsr_6:
        MOV     DPL,R4
        MOV     DPH,R5
        MOVX    A,@DPTR
        MOV     R2,A
        INC     DPTR
        MOVX    A,@DPTR
        MOV     R3,A
        MOV     DPTR,#pRxBuf
        MOVX    A,@DPTR
        ADD     A,#0x12
        MOV     R0,A
        INC     DPTR
        MOVX    A,@DPTR
        ADDC    A,#0x0
        MOV     R1,A
        MOV     DPL,R0
        MOV     DPH,R1
        MOV     A,R2
        MOVX    @DPTR,A
        INC     DPTR
        MOV     A,R3
        MOVX    @DPTR,A
??rxAddrIsr_4:
        MOV     DPTR,#pFuncRxState
        MOV     A,#(??rxPayloadIsr?relay & 0xff)
        MOVX    @DPTR,A
        INC     DPTR
        MOV     A,#((??rxPayloadIsr?relay >> 8) & 0xff)
        MOVX    @DPTR,A
        ; Setup parameters for call to function rxPrepPayload
        LCALL   ??rxPrepPayload?relay
        MOV     A,#0x14
        LCALL   ?DEALLOC_XSTACK8
        REQUIRE ?Subroutine1
        ; // Fall through to label ?Subroutine1

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine1:
        MOV     R7,#0x1
        LJMP    ?BANKED_LEAVE_XDATA

        RSEG BANKED_CODE:CODE:NOROOT(0)
rxPrepPayload:
        PUSH    DPL
        PUSH    DPH
        ; Saved register size: 2
        ; Auto size: 0
        MOV     DPTR,#rxPayloadLen
        MOVX    A,@DPTR
        JNZ     ??rxPrepPayload_0
        MOV     A,#0x1
        MOV     DPTR,#0x6194
        MOVX    @DPTR,A
        MOV     DPTR,#pFuncRxState
        MOV     A,#(??rxFcsIsr?relay & 0xff)
        MOVX    @DPTR,A
        INC     DPTR
        MOV     A,#((??rxFcsIsr?relay >> 8) & 0xff)
        SJMP    ??rxPrepPayload_1
??rxPrepPayload_0:
        CLR     C
        SUBB    A,#0x10
        JNC     ??rxPrepPayload_2
        MOVX    A,@DPTR
        SJMP    ??rxPrepPayload_3
??rxPrepPayload_2:
        MOV     A,#0x10
??rxPrepPayload_3:
        MOV     DPTR,#rxNextLen
        MOVX    @DPTR,A
        MOVX    A,@DPTR
        DEC     A
        MOV     DPTR,#0x6194
??rxPrepPayload_1:
        SJMP    ?Subroutine0

        RSEG BANKED_CODE:CODE:NOROOT(0)
rxPayloadIsr:
        PUSH    DPL
        PUSH    DPH
        ; Saved register size: 2
        ; Auto size: 0
        ; Setup parameters for call to function macMemReadRxFifo
        MOV     DPTR,#rxNextLen
        MOVX    A,@DPTR
        MOV     R1,A
        MOV     DPTR,#pRxBuf
        MOVX    A,@DPTR
        MOV     R0,A
        INC     DPTR
        MOVX    A,@DPTR
        MOV     DPH,A
        MOV     DPL,R0
        INC     DPTR
        INC     DPTR
        MOVX    A,@DPTR
        MOV     R2,A
        INC     DPTR
        MOVX    A,@DPTR
        MOV     R3,A
        LCALL   ??macMemReadRxFifo?relay
        MOV     DPTR,#pRxBuf
        MOVX    A,@DPTR
        ADD     A,#0x2
        MOV     R0,A
        INC     DPTR
        MOVX    A,@DPTR
        ADDC    A,#0x0
        MOV     R1,A
        MOV     DPTR,#rxNextLen
        MOVX    A,@DPTR
        MOV     R2,A
        MOV     DPL,R0
        MOV     DPH,R1
        MOVX    A,@DPTR
        ADD     A,R2
        MOV     R2,A
        INC     DPTR
        MOVX    A,@DPTR
        ADDC    A,#0x0
        MOV     R3,A
        MOV     DPL,R0
        MOV     DPH,R1
        MOV     A,R2
        MOVX    @DPTR,A
        INC     DPTR
        MOV     A,R3
        MOVX    @DPTR,A
        MOV     DPTR,#rxNextLen
        MOVX    A,@DPTR
        MOV     R2,A
        MOV     DPTR,#rxPayloadLen
        MOVX    A,@DPTR
        CLR     C
        SUBB    A,R2
        MOVX    @DPTR,A
        ; Setup parameters for call to function rxPrepPayload
        LCALL   ??rxPrepPayload?relay
        SJMP    ??Subroutine2_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine0:
        MOVX    @DPTR,A
        REQUIRE ??Subroutine2_0
        ; // Fall through to label ??Subroutine2_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine2_0:
        POP     DPH
        POP     DPL
        LJMP    ?BRET

        RSEG BANKED_CODE:CODE:NOROOT(0)
rxFcsIsr:
        MOV     A,#-0xa
        LCALL   ?BANKED_ENTER_XDATA
        ; Saved register size: 10
        ; Auto size: 0
        MOV     ?V0 + 0,#0x0
        ; Setup parameters for call to function macMemReadRxFifo
        MOV     R1,#0x2
        MOV     R2,#(rxBuf & 0xff)
        MOV     R3,#((rxBuf >> 8) & 0xff)
        LCALL   ??macMemReadRxFifo?relay
        MOV     DPTR,#(rxBuf + 1)
        MOVX    A,@DPTR
        ANL     A,#0x80
        MOV     ?V0 + 1,A
        JNZ     ??rxFcsIsr_0
        MOV     DPTR,#rxPromiscuousMode
        MOVX    A,@DPTR
        XRL     A,#0x2
        JZ      $+5
        LJMP    ??rxFcsIsr_1 & 0xFFFF
??rxFcsIsr_0:
        MOV     A,#0x2
        MOV     DPTR,#macRxActive
        MOVX    @DPTR,A
        ; Setup parameters for call to function macRxOffRequest
        LCALL   ??macRxOffRequest?relay
        MOV     DPTR,#macRadioDefsRefTableId
        MOVX    A,@DPTR
        MOV     R0,A
        MOV     A,#0xf
        ANL     A,R0
        ADD     A,#(macRadioDefsRssiAdj & 0xff)
        MOV     DPL,A
        CLR     A
        ADDC    A,#((macRadioDefsRssiAdj >> 8) & 0xff)
        MOV     DPH,A
        CLR     A
        MOVC    A,@A+DPTR
        MOV     DPTR,#rxBuf
        MOV     R2,A
        MOVX    A,@DPTR
        ADD     A,R2
        ADD     A,#-0x49
        MOV     R7,A
        MOV     DPTR,#(rxBuf + 1)
        MOVX    A,@DPTR
        ANL     A,#0x7f
        MOV     R6,A
        MOV     DPTR,#macSrcMatchIsEnabled
        MOVX    A,@DPTR
        JZ      ??rxFcsIsr_2
        ; Setup parameters for call to function MAC_SrcMatchCheckResult
        LCALL   ??MAC_SrcMatchCheckResult?relay
        MOV     A,R1
        JZ      ??rxFcsIsr_2
        MOV     ?V0 + 0,#0x4
??rxFcsIsr_2:
        MOV     A,?V0 + 0
        ORL     A,?V0 + 1
        MOV     R2,A
        MOV     DPTR,#pRxBuf
        MOVX    A,@DPTR
        MOV     R0,A
        INC     DPTR
        MOVX    A,@DPTR
        MOV     DPH,A
        MOV     DPL,R0
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        MOVX    A,@DPTR
        ORL     A,R2
        MOVX    @DPTR,A
        ; Setup parameters for call to function macRadioComputeLQI
        MOV     A,R6
        MOV     R2,A
        MOV     A,R7
        MOV     R1,A
        LCALL   ??macRadioComputeLQI?relay
        MOV     A,R1
        PUSH    A
        MOV     DPTR,#pRxBuf
        MOVX    A,@DPTR
        ADD     A,#0x2e
        MOV     R0,A
        INC     DPTR
        MOVX    A,@DPTR
        ADDC    A,#0x0
        MOV     R1,A
        MOV     DPL,R0
        MOV     DPH,R1
        POP     A
        MOVX    @DPTR,A
        MOV     DPTR,#pRxBuf
        MOVX    A,@DPTR
        ADD     A,#0x30
        MOV     R0,A
        INC     DPTR
        MOVX    A,@DPTR
        ADDC    A,#0x0
        MOV     R1,A
        MOV     DPL,R0
        MOV     DPH,R1
        MOV     A,R7
        MOVX    @DPTR,A
        MOV     DPTR,#pRxBuf
        MOVX    A,@DPTR
        ADD     A,#0x2f
        MOV     R0,A
        INC     DPTR
        MOVX    A,@DPTR
        ADDC    A,#0x0
        MOV     R1,A
        MOV     DPL,R0
        MOV     DPH,R1
        MOV     A,R6
        MOVX    @DPTR,A
        MOV     DPTR,#pRxBuf
        MOVX    A,@DPTR
        ADD     A,#0x32
        MOV     R0,A
        INC     DPTR
        MOVX    A,@DPTR
        ADDC    A,#0x0
        MOV     R1,A
        MOV     DPTR,#pRxBuf
        MOVX    A,@DPTR
        MOV     R2,A
        INC     DPTR
        MOVX    A,@DPTR
        MOV     DPH,A
        MOV     DPL,R2
        INC     DPTR
        INC     DPTR
        MOV     A,R0
        MOVX    @DPTR,A
        INC     DPTR
        MOV     A,R1
        MOVX    @DPTR,A
        ; Setup parameters for call to function macRxCompleteCallback
        MOV     DPTR,#pRxBuf
        MOVX    A,@DPTR
        MOV     R2,A
        INC     DPTR
        MOVX    A,@DPTR
        MOV     R3,A
        LCALL   ??macRxCompleteCallback?relay
        SJMP    ??rxFcsIsr_3
??rxFcsIsr_1:
        MOV     DPTR,#0x61a4
        MOVX    A,@DPTR
        CLR     0xE0 /* A   */.0
        MOVX    @DPTR,A
        CLR     A
        MOV     DPTR,#macRxOutgoingAckFlag
        MOVX    @DPTR,A
        ; Setup parameters for call to function macDataRxMemFree
        MOV     R2,#(pRxBuf & 0xff)
        MOV     R3,#((pRxBuf >> 8) & 0xff)
        LCALL   ??macDataRxMemFree?relay
??rxFcsIsr_3:
        MOV     DPTR,#pRxBuf
        CLR     A
        MOVX    @DPTR,A
        INC     DPTR
        MOVX    @DPTR,A
        MOV     A,#0x5
        MOV     DPTR,#0x6194
        MOVX    @DPTR,A
        MOV     DPTR,#pFuncRxState
        MOV     A,#(??rxStartIsr?relay & 0xff)
        MOVX    @DPTR,A
        INC     DPTR
        MOV     A,#((??rxStartIsr?relay >> 8) & 0xff)
        MOVX    @DPTR,A
        ; Setup parameters for call to function rxDone
        LCALL   ??rxDone?relay
        MOV     R7,#0x2
        LJMP    ?BANKED_LEAVE_XDATA

        RSEG BANKED_CODE:CODE:NOROOT(0)
rxDone:
        PUSH    DPL
        PUSH    DPH
        ; Saved register size: 2
        ; Auto size: 0
        MOV     DPTR,#0x6193
        MOVX    A,@DPTR
        MOV     C,0xE0 /* A   */.6
        JNC     ??rxDone_0
        MOVX    A,@DPTR
        MOV     C,0xE0 /* A   */.7
        JC      ??rxDone_0
        MOV     0xe1,#-0x13
        MOV     0xe1,#-0x13
??rxDone_0:
        CLR     A
        MOV     DPTR,#macRxActive
        MOVX    @DPTR,A
        MOV     DPTR,#macRxOutgoingAckFlag
        MOVX    A,@DPTR
        JNZ     ??rxDone_1
        ; Setup parameters for call to function rxPostRxUpdates
        LCALL   ??rxPostRxUpdates?relay
??rxDone_1:
        LJMP    ??Subroutine2_0 & 0xFFFF
        REQUIRE RFST

        RSEG BANKED_CODE:CODE:NOROOT(0)
macRxAckTxDoneCallback:
        PUSH    DPL
        PUSH    DPH
        ; Saved register size: 2
        ; Auto size: 0
        CLR     A
        MOV     DPTR,#macRxOutgoingAckFlag
        MOVX    @DPTR,A
        MOV     DPTR,#macRxActive
        MOVX    A,@DPTR
        JNZ     ??macRxAckTxDoneCallback_0
        ; Setup parameters for call to function rxPostRxUpdates
        LCALL   ??rxPostRxUpdates?relay
??macRxAckTxDoneCallback_0:
        LJMP    ??Subroutine2_0 & 0xFFFF

        RSEG BANKED_CODE:CODE:NOROOT(0)
rxPostRxUpdates:
        PUSH    DPL
        PUSH    DPH
        ; Saved register size: 2
        ; Auto size: 0
        ; Setup parameters for call to function macRxOffRequest
        LCALL   ??macRxOffRequest?relay
        ; Setup parameters for call to function macRadioUpdateTxPower
        LCALL   ??macRadioUpdateTxPower?relay
        ; Setup parameters for call to function macTxStartQueuedFrame
        LCALL   ??macTxStartQueuedFrame?relay
        LJMP    ??Subroutine2_0 & 0xFFFF

        RSEG BANKED_CODE:CODE:NOROOT(0)
rxDiscardFrame:
        PUSH    DPL
        PUSH    DPH
        ; Saved register size: 2
        ; Auto size: 0
        MOV     DPTR,#pFuncRxState
        MOVX    A,@DPTR
        XRL     A,#(??rxStartIsr?relay & 0xff)
        JNZ     ??rxDiscardFrame_0
        INC     DPTR
        MOVX    A,@DPTR
        XRL     A,#((??rxStartIsr?relay >> 8) & 0xff)
??rxDiscardFrame_0:
        JZ      ??rxDiscardFrame_1
        ; Setup parameters for call to function halAssertHandler
        LCALL   ??halAssertHandler?relay
??rxDiscardFrame_1:
        MOV     DPTR,#rxUnreadLen
        MOVX    A,@DPTR
        JNZ     ??rxDiscardFrame_2
        ; Setup parameters for call to function rxDone
        LCALL   ??rxDone?relay
        SJMP    ??rxDiscardFrame_3
??rxDiscardFrame_2:
        CLR     C
        SUBB    A,#0x10
        JNC     ??rxDiscardFrame_4
        MOVX    A,@DPTR
        SJMP    ??rxDiscardFrame_5
??rxDiscardFrame_4:
        MOV     A,#0x10
??rxDiscardFrame_5:
        MOV     DPTR,#rxNextLen
        MOVX    @DPTR,A
        MOVX    A,@DPTR
        DEC     A
        MOV     DPTR,#0x6194
        MOVX    @DPTR,A
        MOV     DPTR,#pFuncRxState
        MOV     A,#(??rxDiscardIsr?relay & 0xff)
        MOVX    @DPTR,A
        INC     DPTR
        MOV     A,#((??rxDiscardIsr?relay >> 8) & 0xff)
        MOVX    @DPTR,A
??rxDiscardFrame_3:
        LJMP    ??Subroutine2_0 & 0xFFFF

        RSEG BANKED_CODE:CODE:NOROOT(0)
rxDiscardIsr:
        PUSH    DPL
        PUSH    DPH
        ; Saved register size: 2
        ; Auto size: 16
        MOV     A,#-0x10
        LCALL   ?ALLOC_XSTACK8
        ; Setup parameters for call to function macMemReadRxFifo
        MOV     DPTR,#rxNextLen
        MOVX    A,@DPTR
        MOV     R1,A
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        MOV     R2,DPL
        MOV     R3,DPH
        LCALL   ??macMemReadRxFifo?relay
        MOV     DPTR,#rxNextLen
        MOVX    A,@DPTR
        MOV     R2,A
        MOV     DPTR,#rxUnreadLen
        MOVX    A,@DPTR
        CLR     C
        SUBB    A,R2
        MOVX    @DPTR,A
        JZ      ??rxDiscardIsr_0
        CLR     C
        SUBB    A,#0x10
        JNC     ??rxDiscardIsr_1
        MOVX    A,@DPTR
        MOV     DPTR,#rxNextLen
        MOVX    @DPTR,A
        DEC     A
        MOV     DPTR,#0x6194
        MOVX    @DPTR,A
        SJMP    ??rxDiscardIsr_1
??rxDiscardIsr_0:
        MOV     A,#0x5
        MOV     DPTR,#0x6194
        MOVX    @DPTR,A
        MOV     DPTR,#pFuncRxState
        MOV     A,#(??rxStartIsr?relay & 0xff)
        MOVX    @DPTR,A
        INC     DPTR
        MOV     A,#((??rxStartIsr?relay >> 8) & 0xff)
        MOVX    @DPTR,A
        ; Setup parameters for call to function rxDone
        LCALL   ??rxDone?relay
??rxDiscardIsr_1:
        MOV     A,#0x10
        LCALL   ?DEALLOC_XSTACK8
        LJMP    ??Subroutine2_0 & 0xFFFF

        RSEG BANKED_CODE:CODE:NOROOT(0)
macRxFifoOverflowIsr:
        PUSH    DPL
        PUSH    DPH
        ; Saved register size: 2
        ; Auto size: 0
        MOV     DPTR,#rxFifoOverflowCount
        MOVX    A,@DPTR
        INC     A
        MOVX    @DPTR,A
        ; Setup parameters for call to function macRxHaltCleanup
        LCALL   ??macRxHaltCleanup?relay
        LJMP    ??Subroutine2_0 & 0xFFFF

        RSEG BANKED_CODE:CODE:NOROOT(0)
macRxPromiscuousMode:
        MOV     A,#-0x9
        LCALL   ?BANKED_ENTER_XDATA
        ; Saved register size: 9
        ; Auto size: 0
        MOV     A,R1
        MOV     R6,A
        MOV     DPTR,#rxPromiscuousMode
        MOVX    @DPTR,A
        JNZ     ??macRxPromiscuousMode_0
        CLR     A
        MOV     DPTR,#0x6180
        MOVX    @DPTR,A
        MOVX    A,@DPTR
        ORL     A,#0x5
        SJMP    ??macRxPromiscuousMode_1
??macRxPromiscuousMode_0:
        MOV     A,#0x2
        XRL     A,R6
        JZ      ??macRxPromiscuousMode_2
        MOV     A,#0x1
        XRL     A,R6
        JZ      ??macRxPromiscuousMode_2
        ; Setup parameters for call to function halAssertHandler
        LCALL   ??halAssertHandler?relay
??macRxPromiscuousMode_2:
        MOV     DPTR,#0x6180
        MOVX    A,@DPTR
        CLR     0xE0 /* A   */.0
??macRxPromiscuousMode_1:
        MOVX    @DPTR,A
        LJMP    ?Subroutine1 & 0xFFFF

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??macRxInit?relay:
        LCALL   ?BDISPATCH
        DATA
        DC24    macRxInit

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??macRxRadioPowerUpInit?relay:
        LCALL   ?BDISPATCH
        DATA
        DC24    macRxRadioPowerUpInit

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??macRxTxReset?relay:
        LCALL   ?BDISPATCH
        DATA
        DC24    macRxTxReset

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??macRxHaltCleanup?relay:
        LCALL   ?BDISPATCH
        DATA
        DC24    macRxHaltCleanup

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??rxHaltCleanupFinalStep?relay:
        LCALL   ?BDISPATCH
        DATA
        DC24    rxHaltCleanupFinalStep

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??macRxThresholdIsr?relay:
        LCALL   ?BDISPATCH
        DATA
        DC24    macRxThresholdIsr

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??rxStartIsr?relay:
        LCALL   ?BDISPATCH
        DATA
        DC24    rxStartIsr

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??rxAddrIsr?relay:
        LCALL   ?BDISPATCH
        DATA
        DC24    rxAddrIsr

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??rxPrepPayload?relay:
        LCALL   ?BDISPATCH
        DATA
        DC24    rxPrepPayload

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??rxPayloadIsr?relay:
        LCALL   ?BDISPATCH
        DATA
        DC24    rxPayloadIsr

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??rxFcsIsr?relay:
        LCALL   ?BDISPATCH
        DATA
        DC24    rxFcsIsr

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??rxDone?relay:
        LCALL   ?BDISPATCH
        DATA
        DC24    rxDone

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??macRxAckTxDoneCallback?relay:
        LCALL   ?BDISPATCH
        DATA
        DC24    macRxAckTxDoneCallback

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??rxPostRxUpdates?relay:
        LCALL   ?BDISPATCH
        DATA
        DC24    rxPostRxUpdates

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??rxDiscardFrame?relay:
        LCALL   ?BDISPATCH
        DATA
        DC24    rxDiscardFrame

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??rxDiscardIsr?relay:
        LCALL   ?BDISPATCH
        DATA
        DC24    rxDiscardIsr

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??macRxFifoOverflowIsr?relay:
        LCALL   ?BDISPATCH
        DATA
        DC24    macRxFifoOverflowIsr

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??macRxPromiscuousMode?relay:
        LCALL   ?BDISPATCH
        DATA
        DC24    macRxPromiscuousMode

        END
// 
// 2 381 bytes in segment BANKED_CODE
//   108 bytes in segment BANK_RELAYS
//     4 bytes in segment CODE_C
//     5 bytes in segment SFR_AN
//    19 bytes in segment XDATA_Z
// 
// 2 493 bytes of CODE  memory
//     0 bytes of DATA  memory (+ 5 bytes shared)
//    19 bytes of XDATA memory
//
//Errors: none
//Warnings: none
