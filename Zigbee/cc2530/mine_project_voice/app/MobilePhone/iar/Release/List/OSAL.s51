///////////////////////////////////////////////////////////////////////////////
//                                                                            /
// IAR C/C++ Compiler V7.60.1.40026 for 8051            23/Oct/2018  17:27:17 /
// Copyright (C) 2004-2010 IAR Systems AB.                                    /
//                                                                            /
//    Core               =  plain                                             /
//    Code model         =  banked                                            /
//    Data model         =  large                                             /
//    Calling convention =  xdata reentrant                                   /
//    Constant location  =  data_rom                                          /
//    Dptr setup         =  1,16                                              /
//    Source file        =  E:\p4\main\Zigbee\cc2530\mine_project_voice\third /
//                          _party\TIMAC-CC2530-1.3.1\Components\osal\common\ /
//                          OSAL.c                                            /
//    Command line       =  E:\p4\main\Zigbee\cc2530\mine_project_voice\third /
//                          _party\TIMAC-CC2530-1.3.1\Components\osal\common\ /
//                          OSAL.c -D xSMS_TEMPLATE -D MENU_CLOCKFORMAT -D    /
//                          CELLSWITCH_DEBUG -D MP_INFORMATION -D             /
//                          HOLD_AUTO_START -D SMS_SENDBOX -D NEW_MENU_LIB    /
//                          -D WATCHDOG=TRUE -D NEW_DOUBLE_NVID_OP -D         /
//                          AUDIO_SERIAL -D NWK_AUTO_POLL -D                  /
//                          OSC32K_CRYSTAL_INSTALLED=FALSE -D xAUDIO_TEST -D  /
//                          xSINGLE_AUDIO_TEST -D xMULTIAUDIO_TEST -D         /
//                          xREFLECTOR -D xLCD_SUPPORTED -D HAL_LCD=FALSE -D  /
//                          HAL_AUDIO=TRUE -D HAL_SPI=FALSE -D                /
//                          HAL_UART=FALSE -D HAL_LED=FALSE -D HAL_AES=FALSE  /
//                          -D HAL_KEY=TRUE -D IDX_THRESHOLD=12 -D            /
//                          xMACNODEBUG -D xMAC_NO_PARAM_CHECK -D             /
//                          HAL_AUDIO=TRUE -D HAL_DMA=TRUE -D HAL_AES=FALSE   /
//                          -D MAC_CFG_TX_DATA_MAX=8 -D MAC_CFG_TX_MAX=12 -D  /
//                          MAC_CFG_RX_MAX=8 -lcN E:\p4\main\Zigbee\cc2530\mi /
//                          ne_project_voice\app\MobilePhone\iar\Release\List /
//                          \ -lb E:\p4\main\Zigbee\cc2530\mine_project_voice /
//                          \app\MobilePhone\iar\Release\List\ -o             /
//                          E:\p4\main\Zigbee\cc2530\mine_project_voice\app\M /
//                          obilePhone\iar\Release\Obj\ -e                    /
//                          --require_prototypes --no_unroll --no_inline      /
//                          --no_code_motion --debug --core=plain             /
//                          --dptr=16,1 --data_model=large                    /
//                          --code_model=banked --calling_convention=xdata_re /
//                          entrant --place_constants=data_rom                /
//                          --nr_virtual_regs 16 -I                           /
//                          E:\p4\main\Zigbee\cc2530\mine_project_voice\app\M /
//                          obilePhone\iar\..\src\ -I                         /
//                          E:\p4\main\Zigbee\cc2530\mine_project_voice\app\M /
//                          obilePhone\iar\..\src\MenuLib\ -I                 /
//                          E:\p4\main\Zigbee\cc2530\mine_project_voice\app\M /
//                          obilePhone\iar\..\src\MenuLib\util\ -I            /
//                          E:\p4\main\Zigbee\cc2530\mine_project_voice\app\M /
//                          obilePhone\iar\..\..\..\third_party\TIMAC-CC2530- /
//                          1.3.1\COMPONENTS\MAC\INCLUDE\ -I                  /
//                          E:\p4\main\Zigbee\cc2530\mine_project_voice\app\M /
//                          obilePhone\iar\..\..\..\third_party\TIMAC-CC2530- /
//                          1.3.1\COMPONENTS\MAC\HIGH_LEVEL\ -I               /
//                          E:\p4\main\Zigbee\cc2530\mine_project_voice\app\M /
//                          obilePhone\iar\..\..\..\third_party\TIMAC-CC2530- /
//                          1.3.1\COMPONENTS\MAC\LOW_LEVEL\ -I                /
//                          E:\p4\main\Zigbee\cc2530\mine_project_voice\app\M /
//                          obilePhone\iar\..\..\..\third_party\TIMAC-CC2530- /
//                          1.3.1\COMPONENTS\MAC\LOW_LEVEL\SRF04\ -I          /
//                          E:\p4\main\Zigbee\cc2530\mine_project_voice\app\M /
//                          obilePhone\iar\..\..\..\third_party\TIMAC-CC2530- /
//                          1.3.1\COMPONENTS\MAC\LOW_LEVEL\SRF04\SINGLE_CHIP\ /
//                           -I E:\p4\main\Zigbee\cc2530\mine_project_voice\a /
//                          pp\MobilePhone\iar\..\..\..\third_party\TIMAC-CC2 /
//                          530-1.3.1\COMPONENTS\OSAL\INCLUDE\ -I             /
//                          E:\p4\main\Zigbee\cc2530\mine_project_voice\app\M /
//                          obilePhone\iar\..\..\..\third_party\TIMAC-CC2530- /
//                          1.3.1\COMPONENTS\OSAL\MCU\CC2530\ -I              /
//                          E:\p4\main\Zigbee\cc2530\mine_project_voice\app\M /
//                          obilePhone\iar\..\..\..\third_party\TIMAC-CC2530- /
//                          1.3.1\COMPONENTS\SERVICES\SADDR\ -I               /
//                          E:\p4\main\Zigbee\cc2530\mine_project_voice\app\M /
//                          obilePhone\iar\..\..\..\third_party\TIMAC-CC2530- /
//                          1.3.1\COMPONENTS\SERVICES\SDATA\ -I               /
//                          E:\p4\main\Zigbee\cc2530\mine_project_voice\app\M /
//                          obilePhone\iar\..\..\..\third_party\TIMAC-CC2530- /
//                          1.3.1\COMPONENTS\MT\ -I                           /
//                          E:\p4\main\Zigbee\cc2530\mine_project_voice\app\M /
//                          obilePhone\iar\..\..\..\..\..\..\common\ -I       /
//                          E:\p4\main\Zigbee\cc2530\mine_project_voice\app\M /
//                          obilePhone\iar\..\..\..\..\..\common\lcd\ -I      /
//                          E:\p4\main\Zigbee\cc2530\mine_project_voice\app\M /
//                          obilePhone\iar\..\..\..\..\..\..\common\2g\ -I    /
//                          E:\p4\main\Zigbee\cc2530\mine_project_voice\app\M /
//                          obilePhone\iar\..\..\..\..\..\..\ -I              /
//                          E:\p4\main\Zigbee\cc2530\mine_project_voice\app\M /
//                          obilePhone\iar\..\..\..\driver\ -I                /
//                          E:\p4\main\Zigbee\cc2530\mine_project_voice\app\M /
//                          obilePhone\iar\..\..\..\util\ -I                  /
//                          E:\p4\main\Zigbee\cc2530\mine_project_voice\app\M /
//                          obilePhone\iar\..\..\..\driver\include\ -I        /
//                          E:\p4\main\Zigbee\cc2530\mine_project_voice\app\M /
//                          obilePhone\iar\..\..\..\driver\common\ -I         /
//                          E:\p4\main\Zigbee\cc2530\mine_project_voice\app\M /
//                          obilePhone\iar\..\..\..\driver\MobilePhone\ -I    /
//                          E:\p4\main\Zigbee\cc2530\mine_project_voice\app\M /
//                          obilePhone\iar\..\..\..\driver\MobilePhone\audio\ /
//                           -I E:\p4\main\Zigbee\cc2530\mine_project_voice\a /
//                          pp\MobilePhone\iar\..\..\..\driver\MobilePhone\co /
//                          mmon\ -I E:\p4\main\Zigbee\cc2530\mine_project_vo /
//                          ice\app\MobilePhone\iar\..\..\..\driver\MobilePho /
//                          ne\key\ -I E:\p4\main\Zigbee\cc2530\mine_project_ /
//                          voice\app\MobilePhone\iar\..\..\..\driver\MobileP /
//                          hone\lcd\ -I E:\p4\main\Zigbee\cc2530\mine_projec /
//                          t_voice\app\MobilePhone\iar\..\..\..\driver\Mobil /
//                          ePhone\ioexpand\ -I "C:\Program Files\IAR         /
//                          Systems\Embedded Workbench 5.4\8051\INC\" -I      /
//                          "C:\Program Files\IAR Systems\Embedded Workbench  /
//                          5.4\8051\INC\CLIB\" -Ohs                          /
//    List file          =  E:\p4\main\Zigbee\cc2530\mine_project_voice\app\M /
//                          obilePhone\iar\Release\List\OSAL.s51              /
//                                                                            /
//                                                                            /
///////////////////////////////////////////////////////////////////////////////

        NAME OSAL

        RSEG DOVERLAY:DATA:NOROOT(0)
        RSEG IOVERLAY:IDATA:NOROOT(0)
        RSEG ISTACK:IDATA:NOROOT(0)
        RSEG PSTACK:XDATA:NOROOT(0)
        RSEG XSTACK:XDATA:NOROOT(0)

        EXTERN ?ALLOC_XSTACK8
        EXTERN ?BANKED_ENTER_XDATA
        EXTERN ?BANKED_LEAVE_XDATA
        EXTERN ?BDISPATCH
        EXTERN ?BRET
        EXTERN ?CALL_IND
        EXTERN ?DEALLOC_XSTACK8
        EXTERN ?L_ADD
        EXTERN ?L_MOV_X
        EXTERN ?L_SHL
        EXTERN ?MOVE_LONG8_XDATA_XDATA
        EXTERN ?PUSH_XSTACK_I_TWO
        EXTERN ?UL_DIV_MOD
        EXTERN ?UL_SHR
        EXTERN ?V0
        EXTERN ?XSP
        EXTERN ?XSTACK_DISP0_8
        EXTERN __INIT_XDATA_Z

        PUBLIC ??_ltoa?relay
        PUBLIC ??osal_buffer_uint24?relay
        PUBLIC ??osal_buffer_uint32?relay
        PUBLIC ??osal_build_uint16?relay
        PUBLIC ??osal_build_uint32?relay
        PUBLIC ??osal_clear_event?relay
        PUBLIC ??osal_init_system?relay
        PUBLIC ??osal_int_disable?relay
        PUBLIC ??osal_int_enable?relay
        PUBLIC ??osal_isr_register?relay
        PUBLIC ??osal_memcmp?relay
        PUBLIC ??osal_memcpy?relay
        PUBLIC ??osal_memdup?relay
        PUBLIC ??osal_memset?relay
        PUBLIC ??osal_msg_allocate?relay
        PUBLIC ??osal_msg_deallocate?relay
        PUBLIC ??osal_msg_dequeue?relay
        PUBLIC ??osal_msg_enqueue?relay
        PUBLIC ??osal_msg_enqueue_max?relay
        PUBLIC ??osal_msg_extract?relay
        PUBLIC ??osal_msg_find?relay
        PUBLIC ??osal_msg_push?relay
        PUBLIC ??osal_msg_receive?relay
        PUBLIC ??osal_msg_send?relay
        PUBLIC ??osal_rand?relay
        PUBLIC ??osal_revmemcpy?relay
        PUBLIC ??osal_set_event?relay
        PUBLIC ??osal_start_system?relay
        PUBLIC ??osal_strlen?relay
        PUBWEAK _A_IEN0
        PUBWEAK __Constant_2710
        PUBWEAK __Constant_5f5e100
        PUBLIC _ltoa
        PUBLIC osal_buffer_uint24
        PUBLIC osal_buffer_uint32
        PUBLIC osal_build_uint16
        PUBLIC osal_build_uint32
        PUBLIC osal_clear_event
        PUBLIC osal_init_system
        PUBLIC osal_int_disable
        PUBLIC osal_int_enable
        PUBLIC osal_isr_register
        PUBLIC osal_memcmp
        PUBLIC osal_memcpy
        PUBLIC osal_memdup
        PUBLIC osal_memset
        PUBLIC osal_msg_allocate
        PUBLIC osal_msg_deallocate
        PUBLIC osal_msg_dequeue
        PUBLIC osal_msg_enqueue
        PUBLIC osal_msg_enqueue_max
        PUBLIC osal_msg_extract
        PUBLIC osal_msg_find
        PUBLIC osal_msg_push
        PUBLIC osal_msg_receive
        PUBLIC osal_msg_send
        PUBLIC osal_qHead
        PUBLIC osal_rand
        PUBLIC osal_revmemcpy
        PUBLIC osal_set_event
        PUBLIC osal_start_system
        PUBLIC osal_strlen

strlen              SYMBOL "strlen"
osal_mem_alloc      SYMBOL "osal_mem_alloc"
memset              SYMBOL "memset"
_itoa               SYMBOL "_itoa"
strcpy              SYMBOL "strcpy"
strcat              SYMBOL "strcat"
Onboard_rand        SYMBOL "Onboard_rand"
osal_mem_free       SYMBOL "osal_mem_free"
osal_mem_init       SYMBOL "osal_mem_init"
osalTimerInit       SYMBOL "osalTimerInit"
osal_pwrmgr_init    SYMBOL "osal_pwrmgr_init"
osalInitTasks       SYMBOL "osalInitTasks"
osal_mem_kick       SYMBOL "osal_mem_kick"
osalTimeUpdate      SYMBOL "osalTimeUpdate"
Hal_ProcessPoll     SYMBOL "Hal_ProcessPoll"
??Hal_ProcessPoll?relay SYMBOL "?relay", Hal_ProcessPoll
??Onboard_rand?relay SYMBOL "?relay", Onboard_rand
??_itoa?relay       SYMBOL "?relay", _itoa
??memset?relay      SYMBOL "?relay", memset
??osalInitTasks?relay SYMBOL "?relay", osalInitTasks
??osalTimeUpdate?relay SYMBOL "?relay", osalTimeUpdate
??osalTimerInit?relay SYMBOL "?relay", osalTimerInit
??osal_mem_alloc?relay SYMBOL "?relay", osal_mem_alloc
??osal_mem_free?relay SYMBOL "?relay", osal_mem_free
??osal_mem_init?relay SYMBOL "?relay", osal_mem_init
??osal_mem_kick?relay SYMBOL "?relay", osal_mem_kick
??osal_pwrmgr_init?relay SYMBOL "?relay", osal_pwrmgr_init
??strcat?relay      SYMBOL "?relay", strcat
??strcpy?relay      SYMBOL "?relay", strcpy
??strlen?relay      SYMBOL "?relay", strlen
_ltoa               SYMBOL "_ltoa"
??_ltoa?relay       SYMBOL "?relay", _ltoa
osal_buffer_uint24  SYMBOL "osal_buffer_uint24"
??osal_buffer_uint24?relay SYMBOL "?relay", osal_buffer_uint24
osal_buffer_uint32  SYMBOL "osal_buffer_uint32"
??osal_buffer_uint32?relay SYMBOL "?relay", osal_buffer_uint32
osal_build_uint16   SYMBOL "osal_build_uint16"
??osal_build_uint16?relay SYMBOL "?relay", osal_build_uint16
osal_build_uint32   SYMBOL "osal_build_uint32"
??osal_build_uint32?relay SYMBOL "?relay", osal_build_uint32
osal_clear_event    SYMBOL "osal_clear_event"
??osal_clear_event?relay SYMBOL "?relay", osal_clear_event
osal_init_system    SYMBOL "osal_init_system"
??osal_init_system?relay SYMBOL "?relay", osal_init_system
osal_int_disable    SYMBOL "osal_int_disable"
??osal_int_disable?relay SYMBOL "?relay", osal_int_disable
osal_int_enable     SYMBOL "osal_int_enable"
??osal_int_enable?relay SYMBOL "?relay", osal_int_enable
osal_isr_register   SYMBOL "osal_isr_register"
??osal_isr_register?relay SYMBOL "?relay", osal_isr_register
osal_memcmp         SYMBOL "osal_memcmp"
??osal_memcmp?relay SYMBOL "?relay", osal_memcmp
osal_memcpy         SYMBOL "osal_memcpy"
??osal_memcpy?relay SYMBOL "?relay", osal_memcpy
osal_memdup         SYMBOL "osal_memdup"
??osal_memdup?relay SYMBOL "?relay", osal_memdup
osal_memset         SYMBOL "osal_memset"
??osal_memset?relay SYMBOL "?relay", osal_memset
osal_msg_allocate   SYMBOL "osal_msg_allocate"
??osal_msg_allocate?relay SYMBOL "?relay", osal_msg_allocate
osal_msg_deallocate SYMBOL "osal_msg_deallocate"
??osal_msg_deallocate?relay SYMBOL "?relay", osal_msg_deallocate
osal_msg_dequeue    SYMBOL "osal_msg_dequeue"
??osal_msg_dequeue?relay SYMBOL "?relay", osal_msg_dequeue
osal_msg_enqueue    SYMBOL "osal_msg_enqueue"
??osal_msg_enqueue?relay SYMBOL "?relay", osal_msg_enqueue
osal_msg_enqueue_max SYMBOL "osal_msg_enqueue_max"
??osal_msg_enqueue_max?relay SYMBOL "?relay", osal_msg_enqueue_max
osal_msg_extract    SYMBOL "osal_msg_extract"
??osal_msg_extract?relay SYMBOL "?relay", osal_msg_extract
osal_msg_find       SYMBOL "osal_msg_find"
??osal_msg_find?relay SYMBOL "?relay", osal_msg_find
osal_msg_push       SYMBOL "osal_msg_push"
??osal_msg_push?relay SYMBOL "?relay", osal_msg_push
osal_msg_receive    SYMBOL "osal_msg_receive"
??osal_msg_receive?relay SYMBOL "?relay", osal_msg_receive
osal_msg_send       SYMBOL "osal_msg_send"
??osal_msg_send?relay SYMBOL "?relay", osal_msg_send
osal_rand           SYMBOL "osal_rand"
??osal_rand?relay   SYMBOL "?relay", osal_rand
osal_revmemcpy      SYMBOL "osal_revmemcpy"
??osal_revmemcpy?relay SYMBOL "?relay", osal_revmemcpy
osal_set_event      SYMBOL "osal_set_event"
??osal_set_event?relay SYMBOL "?relay", osal_set_event
osal_start_system   SYMBOL "osal_start_system"
??osal_start_system?relay SYMBOL "?relay", osal_start_system
osal_strlen         SYMBOL "osal_strlen"
??osal_strlen?relay SYMBOL "?relay", osal_strlen

        EXTERN strlen
        EXTERN osal_mem_alloc
        EXTERN memset
        EXTERN _itoa
        EXTERN strcpy
        EXTERN strcat
        EXTERN Onboard_rand
        EXTERN osal_mem_free
        EXTERN osal_mem_init
        EXTERN osalTimerInit
        EXTERN osal_pwrmgr_init
        EXTERN osalInitTasks
        EXTERN osal_mem_kick
        EXTERN osalTimeUpdate
        EXTERN Hal_ProcessPoll
        EXTERN ??Hal_ProcessPoll?relay
        EXTERN ??Onboard_rand?relay
        EXTERN ??_itoa?relay
        EXTERN ??memset?relay
        EXTERN ??osalInitTasks?relay
        EXTERN ??osalTimeUpdate?relay
        EXTERN ??osalTimerInit?relay
        EXTERN ??osal_mem_alloc?relay
        EXTERN ??osal_mem_free?relay
        EXTERN ??osal_mem_init?relay
        EXTERN ??osal_mem_kick?relay
        EXTERN ??osal_pwrmgr_init?relay
        EXTERN ??strcat?relay
        EXTERN ??strcpy?relay
        EXTERN ??strlen?relay
        EXTERN tasksArr
        EXTERN tasksCnt
        EXTERN tasksEvents


        ASEGN SFR_AN:DATA:NOROOT,0a8H
// union <unnamed> volatile __sfr _A_IEN0
_A_IEN0:
        DS 1

        RSEG XDATA_Z:XDATA:NOROOT(0)
osal_qHead:
        DS 2
        REQUIRE __INIT_XDATA_Z

        RSEG BANKED_CODE:CODE:NOROOT(0)
osal_strlen:
        PUSH    DPL
        PUSH    DPH
        ; Saved register size: 2
        ; Auto size: 0
        ; Setup parameters for call to function strlen
        LCALL   ??strlen?relay
        LJMP    ?Subroutine0 & 0xFFFF

        RSEG BANKED_CODE:CODE:NOROOT(0)
osal_memcpy:
        MOV     A,#-0x9
        LCALL   ?BANKED_ENTER_XDATA
        ; Saved register size: 9
        ; Auto size: 0
        MOV     A,R4
        MOV     R0,A
        MOV     A,R5
        MOV     R1,A
        MOV     A,#0x9
        LCALL   ?XSTACK_DISP0_8
        MOVX    A,@DPTR
        MOV     R4,A
        INC     DPTR
        MOVX    A,@DPTR
        MOV     R5,A
        MOV     A,R4
        JNZ     ??osal_memcpy_0
        MOV     A,R5
??osal_memcpy_0:
        JZ      ??osal_memcpy_1
??osal_memcpy_2:
        MOV     DPL,R0
        MOV     DPH,R1
        MOVX    A,@DPTR
        MOV     DPL,R2
        MOV     DPH,R3
        MOVX    @DPTR,A
        MOV     DPL,R0
        MOV     DPH,R1
        INC     DPTR
        MOV     R0,DPL
        MOV     R1,DPH
        MOV     DPL,R2
        MOV     DPH,R3
        INC     DPTR
        MOV     R2,DPL
        MOV     R3,DPH
        MOV     A,R4
        ADD     A,#-0x1
        DEC     R4
        MOV     A,R5
        ADDC    A,#-0x1
        MOV     R5,A
        MOV     A,R4
        JNZ     ??osal_memcpy_3
        MOV     A,R5
??osal_memcpy_3:
        JNZ     ??osal_memcpy_2
??osal_memcpy_1:
        SJMP    ??Subroutine6_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
osal_revmemcpy:
        MOV     A,#-0x9
        LCALL   ?BANKED_ENTER_XDATA
        ; Saved register size: 9
        ; Auto size: 0
        MOV     A,#0x9
        LCALL   ?XSTACK_DISP0_8
        MOVX    A,@DPTR
        MOV     R6,A
        INC     DPTR
        MOVX    A,@DPTR
        MOV     R7,A
        MOV     A,R4
        ADD     A,R6
        MOV     R0,A
        MOV     A,R5
        ADDC    A,R7
        MOV     R1,A
        MOV     A,#-0x1
        ADD     A,R0
        DEC     R0
        MOV     A,#-0x1
        ADDC    A,R1
        MOV     R1,A
        MOV     A,R6
        JNZ     ??osal_revmemcpy_0
        MOV     A,R7
??osal_revmemcpy_0:
        JZ      ??osal_revmemcpy_1
??osal_revmemcpy_2:
        MOV     DPL,R0
        MOV     DPH,R1
        MOVX    A,@DPTR
        MOV     DPL,R2
        MOV     DPH,R3
        MOVX    @DPTR,A
        MOV     A,R0
        ADD     A,#-0x1
        DEC     R0
        MOV     A,R1
        ADDC    A,#-0x1
        MOV     R1,A
        INC     DPTR
        MOV     R2,DPL
        MOV     R3,DPH
        MOV     A,R6
        ADD     A,#-0x1
        DEC     R6
        MOV     A,R7
        ADDC    A,#-0x1
        MOV     R7,A
        MOV     A,R6
        JNZ     ??osal_revmemcpy_3
        MOV     A,R7
??osal_revmemcpy_3:
        JNZ     ??osal_revmemcpy_2
??osal_revmemcpy_1:
        SJMP    ??Subroutine6_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine1:
        MOV     C,0xE0 /* A   */.0
        REQUIRE ??Subroutine5_0
        ; // Fall through to label ??Subroutine5_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine5_0:
        MOV     0xa8.7,C
        REQUIRE ??Subroutine6_0
        ; // Fall through to label ??Subroutine6_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine6_0:
        MOV     R7,#0x1
        LJMP    ?BANKED_LEAVE_XDATA

        RSEG BANKED_CODE:CODE:NOROOT(0)
osal_memdup:
        MOV     A,#-0xe
        LCALL   ?BANKED_ENTER_XDATA
        ; Saved register size: 14
        ; Auto size: 0
        MOV     ?V0 + 0,R2
        MOV     ?V0 + 1,R3
        MOV     ?V0 + 2,R4
        MOV     ?V0 + 3,R5
        ; Setup parameters for call to function osal_mem_alloc
        MOV     R2,?V0 + 2
        MOV     R3,?V0 + 3
        LCALL   ??osal_mem_alloc?relay
        MOV     ?V0 + 4,R2
        MOV     ?V0 + 5,R3
        MOV     R6,?V0 + 4
        MOV     R7,?V0 + 5
        MOV     A,R6
        JNZ     ??osal_memdup_0
        MOV     A,R7
??osal_memdup_0:
        JZ      ??osal_memdup_1
        ; Setup parameters for call to function osal_memcpy
        MOV     R0,#?V0 + 2
        LCALL   ?PUSH_XSTACK_I_TWO
        MOV     R4,?V0 + 0
        MOV     R5,?V0 + 1
        LCALL   ??osal_memcpy?relay
        MOV     A,#0x2
        LCALL   ?DEALLOC_XSTACK8
??osal_memdup_1:
        REQUIRE ?Subroutine2
        ; // Fall through to label ?Subroutine2

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine2:
        MOV     A,R6
        MOV     R2,A
        MOV     A,R7
        MOV     R3,A
        MOV     R7,#0x6
        LJMP    ?BANKED_LEAVE_XDATA

        RSEG BANKED_CODE:CODE:NOROOT(0)
osal_memcmp:
        MOV     A,#-0xb
        LCALL   ?BANKED_ENTER_XDATA
        ; Saved register size: 11
        ; Auto size: 0
        MOV     A,R4
        MOV     R0,A
        MOV     A,R5
        MOV     R1,A
        MOV     A,#0xb
        LCALL   ?XSTACK_DISP0_8
        MOVX    A,@DPTR
        MOV     ?V0 + 0,A
        INC     DPTR
        MOVX    A,@DPTR
        MOV     ?V0 + 1,A
??osal_memcmp_0:
        MOV     A,?V0 + 0
        JNZ     ??osal_memcmp_1
        MOV     A,?V0 + 1
??osal_memcmp_1:
        JZ      ??osal_memcmp_2
        MOV     A,?V0 + 0
        ADD     A,#-0x1
        MOV     ?V0 + 0,A
        MOV     A,?V0 + 1
        ADDC    A,#-0x1
        MOV     ?V0 + 1,A
        MOV     A,R2
        MOV     R4,A
        MOV     A,R3
        MOV     R5,A
        MOV     DPL,R4
        MOV     DPH,R5
        INC     DPTR
        MOV     R2,DPL
        MOV     R3,DPH
        MOV     A,R0
        MOV     R6,A
        MOV     A,R1
        MOV     R7,A
        MOV     DPL,R6
        MOV     DPH,R7
        INC     DPTR
        MOV     R0,DPL
        MOV     R1,DPH
        MOV     DPL,R4
        MOV     DPH,R5
        MOVX    A,@DPTR
        MOV     R4,A
        MOV     DPL,R6
        MOV     DPH,R7
        MOVX    A,@DPTR
        XRL     A,R4
        JZ      ??osal_memcmp_0
        MOV     R1,#0x0
        SJMP    ??osal_memcmp_3
??osal_memcmp_2:
        MOV     R1,#0x1
??osal_memcmp_3:
        MOV     R7,#0x3
        LJMP    ?BANKED_LEAVE_XDATA

        RSEG BANKED_CODE:CODE:NOROOT(0)
osal_memset:
        MOV     A,#-0xa
        LCALL   ?BANKED_ENTER_XDATA
        ; Saved register size: 10
        ; Auto size: 0
        MOV     A,R1
        MOV     R6,A
        ; Setup parameters for call to function memset
        MOV     ?V0 + 0,R4
        MOV     ?V0 + 1,R5
        MOV     R0,#?V0 + 0
        LCALL   ?PUSH_XSTACK_I_TWO
        MOV     A,R6
        MOV     R4,A
        MOV     R5,#0x0
        LCALL   ??memset?relay
        MOV     A,#0x2
        LCALL   ?DEALLOC_XSTACK8
        LJMP    ?Subroutine3 & 0xFFFF

        RSEG BANKED_CODE:CODE:NOROOT(0)
osal_build_uint16:
        MOV     A,#-0x9
        LCALL   ?BANKED_ENTER_XDATA
        ; Saved register size: 9
        ; Auto size: 0
        MOV     DPL,R2
        MOV     DPH,R3
        MOVX    A,@DPTR
        MOV     R4,A
        INC     DPTR
        MOVX    A,@DPTR
        MOV     R1,A
        MOV     A,R4
        MOV     R2,A
        MOV     A,R1
        MOV     R3,A
        LJMP    ??Subroutine6_0 & 0xFFFF

        RSEG BANKED_CODE:CODE:NOROOT(0)
osal_build_uint32:
        MOV     A,#-0x10
        LCALL   ?BANKED_ENTER_XDATA
        ; Saved register size: 16
        ; Auto size: 0
        MOV     A,R1
        MOV     R6,A
        MOV     A,#0x2
        XRL     A,R6
        JNZ     ??osal_build_uint32_0
        MOV     DPL,R2
        MOV     DPH,R3
        MOVX    A,@DPTR
        MOV     ?V0 + 0,A
        MOV     ?V0 + 1,#0x0
        MOV     ?V0 + 2,#0x0
        MOV     ?V0 + 3,#0x0
        INC     DPTR
        MOVX    A,@DPTR
        MOV     ?V0 + 4,A
        MOV     ?V0 + 5,#0x0
        MOV     ?V0 + 6,#0x0
        MOV     ?V0 + 7,#0x0
        MOV     A,#0x8
??osal_build_uint32_1:
        MOV     R0,#?V0 + 4
        LCALL   ?L_SHL
        MOV     R0,#?V0 + 0
        MOV     R1,#?V0 + 4
        LCALL   ?L_ADD
        MOV     R2,?V0 + 0
        MOV     R3,?V0 + 1
        MOV     R4,?V0 + 2
        MOV     R5,?V0 + 3
        LJMP    ??osal_build_uint32_2 & 0xFFFF
??osal_build_uint32_0:
        MOV     A,#0x3
        XRL     A,R6
        JNZ     ??osal_build_uint32_3
        MOV     DPL,R2
        MOV     DPH,R3
        MOVX    A,@DPTR
        MOV     ?V0 + 0,A
        MOV     ?V0 + 1,#0x0
        MOV     ?V0 + 2,#0x0
        MOV     ?V0 + 3,#0x0
        INC     DPTR
        MOVX    A,@DPTR
        MOV     ?V0 + 4,A
        MOV     ?V0 + 5,#0x0
        MOV     ?V0 + 6,#0x0
        MOV     ?V0 + 7,#0x0
        MOV     A,#0x8
        MOV     R0,#?V0 + 4
        LCALL   ?L_SHL
        MOV     R0,#?V0 + 0
        MOV     R1,#?V0 + 4
        LCALL   ?L_ADD
        MOV     DPL,R2
        MOV     DPH,R3
        INC     DPTR
        INC     DPTR
        MOVX    A,@DPTR
        MOV     ?V0 + 4,A
        MOV     ?V0 + 5,#0x0
        MOV     A,#0x10
        SJMP    ??osal_build_uint32_1
??osal_build_uint32_3:
        MOV     A,#0x4
        XRL     A,R6
        MOV     DPL,R2
        MOV     DPH,R3
        JNZ     ??osal_build_uint32_4
        MOVX    A,@DPTR
        MOV     ?V0 + 0,A
        MOV     ?V0 + 1,#0x0
        MOV     ?V0 + 2,#0x0
        MOV     ?V0 + 3,#0x0
        INC     DPTR
        MOVX    A,@DPTR
        MOV     ?V0 + 4,A
        MOV     ?V0 + 5,#0x0
        MOV     ?V0 + 6,#0x0
        MOV     ?V0 + 7,#0x0
        MOV     A,#0x8
        MOV     R0,#?V0 + 4
        LCALL   ?L_SHL
        MOV     R0,#?V0 + 0
        MOV     R1,#?V0 + 4
        LCALL   ?L_ADD
        MOV     DPL,R2
        MOV     DPH,R3
        INC     DPTR
        INC     DPTR
        MOVX    A,@DPTR
        MOV     ?V0 + 4,A
        MOV     ?V0 + 5,#0x0
        MOV     A,#0x10
        MOV     R0,#?V0 + 4
        LCALL   ?L_SHL
        MOV     R0,#?V0 + 0
        MOV     R1,#?V0 + 4
        LCALL   ?L_ADD
        MOV     DPL,R2
        MOV     DPH,R3
        INC     DPTR
        INC     DPTR
        INC     DPTR
        MOVX    A,@DPTR
        MOV     ?V0 + 4,A
        MOV     ?V0 + 6,#0x0
        MOV     A,#0x18
        LJMP    ??osal_build_uint32_1 & 0xFFFF
??osal_build_uint32_4:
        MOVX    A,@DPTR
        MOV     R2,A
        MOV     R3,#0x0
        MOV     R4,#0x0
        MOV     R5,#0x0
??osal_build_uint32_2:
        LJMP    ??Subroutine7_0 & 0xFFFF

        RSEG BANKED_CODE:CODE:NOROOT(0)
_ltoa:
        MOV     A,#-0x18
        LCALL   ?BANKED_ENTER_XDATA
        ; Saved register size: 24
        ; Auto size: 31
        MOV     A,#-0x1f
        LCALL   ?ALLOC_XSTACK8
        MOV     A,R1
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        MOVX    @DPTR,A
        MOV     ?V0 + 8,R2
        MOV     ?V0 + 9,R3
        MOV     ?V0 + 10,R4
        MOV     ?V0 + 11,R5
        MOV     A,#0x1
        LCALL   ?XSTACK_DISP0_8
        MOV     R4,DPL
        MOV     R5,DPH
        MOV     DPH,#((`?<Constant "">` >> 8) & 0xff)
        MOV     DPL,#(`?<Constant "">` & 0xff)
        MOV     A,#0xa
        LCALL   ?MOVE_LONG8_XDATA_XDATA
        MOV     DPH,#((`?<Constant "">_1` >> 8) & 0xff)
        MOV     DPL,#(`?<Constant "">_1` & 0xff)
        MOV     A,#0xa
        LCALL   ?MOVE_LONG8_XDATA_XDATA
        MOV     DPH,#((`?<Constant "">_2` >> 8) & 0xff)
        MOV     DPL,#(`?<Constant "">_2` & 0xff)
        MOV     A,#0xa
        LCALL   ?MOVE_LONG8_XDATA_XDATA
        MOV     A,#0x37
        LCALL   ?XSTACK_DISP0_8
        MOVX    A,@DPTR
        MOV     R0,A
        INC     DPTR
        MOVX    A,@DPTR
        MOV     DPH,A
        MOV     DPL,R0
        CLR     A
        MOVX    @DPTR,A
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        MOVX    A,@DPTR
        XRL     A,#0xa
        JZ      $+5
        LJMP    ??_ltoa_0 & 0xFFFF
        MOV     ?V0 + 0,R2
        MOV     ?V0 + 1,R3
        MOV     ?V0 + 2,?V0 + 10
        MOV     ?V0 + 3,?V0 + 11
        MOV     DPTR,#__Constant_2710
        MOV     R0,#?V0 + 4
        LCALL   ?L_MOV_X
        MOV     R0,#?V0 + 0
        MOV     R1,#?V0 + 4
        LCALL   ?UL_DIV_MOD
        MOV     ?V0 + 0,?V0 + 4
        MOV     ?V0 + 1,?V0 + 5
        MOV     ?V0 + 4,R2
        MOV     ?V0 + 5,R3
        MOV     ?V0 + 6,?V0 + 10
        MOV     ?V0 + 7,?V0 + 11
        MOV     DPTR,#__Constant_2710
        MOV     R0,#?V0 + 12
        LCALL   ?L_MOV_X
        MOV     R0,#?V0 + 4
        MOV     R1,#?V0 + 12
        LCALL   ?UL_DIV_MOD
        MOV     DPTR,#__Constant_2710
        MOV     R0,#?V0 + 12
        LCALL   ?L_MOV_X
        MOV     R0,#?V0 + 4
        MOV     R1,#?V0 + 12
        LCALL   ?UL_DIV_MOD
        MOV     R6,?V0 + 12
        MOV     R7,?V0 + 13
        MOV     DPTR,#__Constant_5f5e100
        MOV     R0,#?V0 + 4
        LCALL   ?L_MOV_X
        MOV     R0,#?V0 + 8
        MOV     R1,#?V0 + 4
        LCALL   ?UL_DIV_MOD
        MOV     ?V0 + 2,?V0 + 8
        MOV     ?V0 + 3,?V0 + 9
        MOV     A,?V0 + 2
        JNZ     ??_ltoa_1
        MOV     A,?V0 + 3
??_ltoa_1:
        JZ      ??_ltoa_2
        ; Setup parameters for call to function _itoa
        MOV     R1,#0xa
        MOV     A,#0x15
        LCALL   ?XSTACK_DISP0_8
        MOV     R4,DPL
        MOV     R5,DPH
        MOV     R2,?V0 + 2
        MOV     R3,?V0 + 3
        LCALL   ??_itoa?relay
??_ltoa_2:
        MOV     A,R6
        JNZ     ??_ltoa_3
        MOV     A,R7
??_ltoa_3:
        JZ      ??_ltoa_4
        ; Setup parameters for call to function _itoa
        MOV     R1,#0xa
        MOV     A,#0xb
        LCALL   ?XSTACK_DISP0_8
        MOV     R4,DPL
        MOV     R5,DPH
        MOV     A,R6
        MOV     R2,A
        MOV     A,R7
        MOV     R3,A
        LCALL   ??_itoa?relay
??_ltoa_4:
        MOV     A,?V0 + 0
        JNZ     ??_ltoa_5
        MOV     A,?V0 + 1
??_ltoa_5:
        JZ      ??_ltoa_6
        ; Setup parameters for call to function _itoa
        MOV     R1,#0xa
        MOV     A,#0x1
        LCALL   ?XSTACK_DISP0_8
        MOV     R4,DPL
        MOV     R5,DPH
        MOV     R2,?V0 + 0
        MOV     R3,?V0 + 1
        LCALL   ??_itoa?relay
??_ltoa_6:
        MOV     A,?V0 + 2
        JNZ     ??_ltoa_7
        MOV     A,?V0 + 3
??_ltoa_7:
        JZ      ??_ltoa_8
        ; Setup parameters for call to function strcpy
        MOV     A,#0x15
        LCALL   ?XSTACK_DISP0_8
        MOV     R4,DPL
        MOV     R5,DPH
        MOV     A,#0x37
        LCALL   ?XSTACK_DISP0_8
        MOVX    A,@DPTR
        MOV     R2,A
        INC     DPTR
        MOVX    A,@DPTR
        MOV     R3,A
        LCALL   ??strcpy?relay
        MOV     ?V0 + 4,#0x0
        SJMP    ??_ltoa_9
??_ltoa_10:
        ; Setup parameters for call to function strcat
        MOV     R4,#(`?<Constant "0">` & 0xff)
        MOV     R5,#((`?<Constant "0">` >> 8) & 0xff)
        MOV     A,#0x37
        LCALL   ?XSTACK_DISP0_8
        MOVX    A,@DPTR
        MOV     R2,A
        INC     DPTR
        MOVX    A,@DPTR
        MOV     R3,A
        LCALL   ??strcat?relay
        INC     ?V0 + 4
??_ltoa_9:
        MOV     ?V0 + 6,?V0 + 4
        ; Setup parameters for call to function strlen
        MOV     A,#0xb
        LCALL   ?XSTACK_DISP0_8
        MOV     R2,DPL
        MOV     R3,DPH
        LCALL   ??strlen?relay
        MOV     ?V0 + 8,R2
        MOV     ?V0 + 9,R3
        MOV     A,#0x4
        CLR     C
        SUBB    A,?V0 + 8
        MOV     R0,A
        CLR     A
        SUBB    A,?V0 + 9
        MOV     R1,A
        CLR     C
        MOV     A,?V0 + 6
        SUBB    A,R0
        CLR     A
        SUBB    A,R1
        JC      ??_ltoa_10
??_ltoa_8:
        ; Setup parameters for call to function strcat
        MOV     A,#0xb
        LCALL   ?XSTACK_DISP0_8
        MOV     R4,DPL
        MOV     R5,DPH
        MOV     A,#0x37
        LCALL   ?XSTACK_DISP0_8
        MOVX    A,@DPTR
        MOV     R2,A
        INC     DPTR
        MOVX    A,@DPTR
        MOV     R3,A
        LCALL   ??strcat?relay
        MOV     A,?V0 + 2
        JNZ     ??_ltoa_11
        MOV     A,?V0 + 3
??_ltoa_11:
        JNZ     ??_ltoa_12
        MOV     A,R6
        JNZ     ??_ltoa_13
        MOV     A,R7
??_ltoa_13:
        JZ      ??_ltoa_14
??_ltoa_12:
        MOV     ?V0 + 4,#0x0
        SJMP    ??_ltoa_15
??_ltoa_16:
        ; Setup parameters for call to function strcat
        MOV     R4,#(`?<Constant "0">` & 0xff)
        MOV     R5,#((`?<Constant "0">` >> 8) & 0xff)
        MOV     A,#0x37
        LCALL   ?XSTACK_DISP0_8
        MOVX    A,@DPTR
        MOV     R2,A
        INC     DPTR
        MOVX    A,@DPTR
        MOV     R3,A
        LCALL   ??strcat?relay
        INC     ?V0 + 4
??_ltoa_15:
        MOV     ?V0 + 6,?V0 + 4
        ; Setup parameters for call to function strlen
        MOV     A,#0x1
        LCALL   ?XSTACK_DISP0_8
        MOV     R2,DPL
        MOV     R3,DPH
        LCALL   ??strlen?relay
        MOV     ?V0 + 8,R2
        MOV     ?V0 + 9,R3
        MOV     A,#0x4
        CLR     C
        SUBB    A,?V0 + 8
        MOV     R0,A
        CLR     A
        SUBB    A,?V0 + 9
        MOV     R1,A
        CLR     C
        MOV     A,?V0 + 6
        SUBB    A,R0
        CLR     A
        SUBB    A,R1
        JC      ??_ltoa_16
??_ltoa_14:
        ; Setup parameters for call to function strcat
        MOV     A,#0x1
        LCALL   ?XSTACK_DISP0_8
        MOV     R4,DPL
        MOV     R5,DPH
        MOV     A,#0x37
        LCALL   ?XSTACK_DISP0_8
        MOVX    A,@DPTR
        MOV     R2,A
        INC     DPTR
        MOVX    A,@DPTR
        MOV     R3,A
        LCALL   ??strcat?relay
        MOV     A,?V0 + 2
        JNZ     ??_ltoa_17
        MOV     A,?V0 + 3
??_ltoa_17:
        JNZ     ??_ltoa_18
        MOV     A,R6
        JNZ     ??_ltoa_19
        MOV     A,R7
??_ltoa_19:
        JNZ     ??_ltoa_18
??_ltoa_20:
        MOV     A,?V0 + 0
        JNZ     ??_ltoa_21
        MOV     A,?V0 + 1
??_ltoa_21:
        JNZ     ??_ltoa_18
        ; Setup parameters for call to function strcpy
        MOV     R4,#(`?<Constant "0">` & 0xff)
        MOV     R5,#((`?<Constant "0">` >> 8) & 0xff)
        MOV     A,#0x37
        LCALL   ?XSTACK_DISP0_8
        MOVX    A,@DPTR
        MOV     R2,A
        INC     DPTR
        MOVX    A,@DPTR
        MOV     R3,A
        LCALL   ??strcpy?relay
??_ltoa_18:
        MOV     A,#0x37
        LCALL   ?XSTACK_DISP0_8
        MOVX    A,@DPTR
        MOV     R2,A
        INC     DPTR
        MOVX    A,@DPTR
        MOV     R3,A
??_ltoa_22:
        MOV     A,#0x1f
        LCALL   ?DEALLOC_XSTACK8
        MOV     R7,#0x10
        LJMP    ?BANKED_LEAVE_XDATA
??_ltoa_0:
        MOVX    A,@DPTR
        XRL     A,#0x10
        JZ      $+5
        LJMP    ??_ltoa_23 & 0xFFFF
        MOV     ?V0 + 0,R2
        MOV     ?V0 + 1,R3
        MOV     A,#0x10
        MOV     R0,#?V0 + 8
        LCALL   ?UL_SHR
        MOV     R6,?V0 + 8
        MOV     R7,?V0 + 9
        MOV     A,R6
        JNZ     ??_ltoa_24
        MOV     A,R7
??_ltoa_24:
        JZ      ??_ltoa_25
        ; Setup parameters for call to function _itoa
        MOV     R1,#0x10
        MOV     A,#0xb
        LCALL   ?XSTACK_DISP0_8
        MOV     R4,DPL
        MOV     R5,DPH
        MOV     A,R6
        MOV     R2,A
        MOV     A,R7
        MOV     R3,A
        LCALL   ??_itoa?relay
??_ltoa_25:
        MOV     A,?V0 + 0
        JNZ     ??_ltoa_26
        MOV     A,?V0 + 1
??_ltoa_26:
        JZ      ??_ltoa_27
        ; Setup parameters for call to function _itoa
        MOV     R1,#0x10
        MOV     A,#0x1
        LCALL   ?XSTACK_DISP0_8
        MOV     R4,DPL
        MOV     R5,DPH
        MOV     R2,?V0 + 0
        MOV     R3,?V0 + 1
        LCALL   ??_itoa?relay
??_ltoa_27:
        MOV     A,R6
        JNZ     ??_ltoa_28
        MOV     A,R7
??_ltoa_28:
        JZ      ??_ltoa_29
        ; Setup parameters for call to function strcpy
        MOV     A,#0xb
        LCALL   ?XSTACK_DISP0_8
        MOV     R4,DPL
        MOV     R5,DPH
        MOV     A,#0x37
        LCALL   ?XSTACK_DISP0_8
        MOVX    A,@DPTR
        MOV     R2,A
        INC     DPTR
        MOVX    A,@DPTR
        MOV     R3,A
        LCALL   ??strcpy?relay
        MOV     ?V0 + 4,#0x0
        SJMP    ??_ltoa_30
??_ltoa_31:
        ; Setup parameters for call to function strcat
        MOV     R4,#(`?<Constant "0">` & 0xff)
        MOV     R5,#((`?<Constant "0">` >> 8) & 0xff)
        MOV     A,#0x37
        LCALL   ?XSTACK_DISP0_8
        MOVX    A,@DPTR
        MOV     R2,A
        INC     DPTR
        MOVX    A,@DPTR
        MOV     R3,A
        LCALL   ??strcat?relay
        INC     ?V0 + 4
??_ltoa_30:
        MOV     ?V0 + 2,?V0 + 4
        ; Setup parameters for call to function strlen
        MOV     A,#0x1
        LCALL   ?XSTACK_DISP0_8
        MOV     R2,DPL
        MOV     R3,DPH
        LCALL   ??strlen?relay
        MOV     ?V0 + 6,R2
        MOV     ?V0 + 7,R3
        MOV     A,#0x4
        CLR     C
        SUBB    A,?V0 + 6
        MOV     R0,A
        CLR     A
        SUBB    A,?V0 + 7
        MOV     R1,A
        CLR     C
        MOV     A,?V0 + 2
        SUBB    A,R0
        CLR     A
        SUBB    A,R1
        JC      ??_ltoa_31
??_ltoa_29:
        ; Setup parameters for call to function strcat
        MOV     A,#0x1
        LCALL   ?XSTACK_DISP0_8
        MOV     R4,DPL
        MOV     R5,DPH
        MOV     A,#0x37
        LCALL   ?XSTACK_DISP0_8
        MOVX    A,@DPTR
        MOV     R2,A
        INC     DPTR
        MOVX    A,@DPTR
        MOV     R3,A
        LCALL   ??strcat?relay
        MOV     A,R6
        JNZ     ??_ltoa_32
        MOV     A,R7
??_ltoa_32:
        JZ      $+5
        LJMP    ??_ltoa_18 & 0xFFFF
        LJMP    ??_ltoa_20 & 0xFFFF
??_ltoa_23:
        MOV     R2,#0x0
        MOV     R3,#0x0
        LJMP    ??_ltoa_22 & 0xFFFF

        RSEG BANKED_CODE:CODE:NOROOT(0)
osal_rand:
        PUSH    DPL
        PUSH    DPH
        ; Saved register size: 2
        ; Auto size: 0
        ; Setup parameters for call to function Onboard_rand
        LCALL   ??Onboard_rand?relay
        LJMP    ?Subroutine0 & 0xFFFF

        RSEG BANKED_CODE:CODE:NOROOT(0)
osal_msg_allocate:
        MOV     A,#-0xa
        LCALL   ?BANKED_ENTER_XDATA
        ; Saved register size: 10
        ; Auto size: 0
        MOV     A,R2
        MOV     R6,A
        MOV     A,R3
        MOV     R7,A
        MOV     A,R6
        JNZ     ??osal_msg_allocate_0
        MOV     A,R7
??osal_msg_allocate_0:
        JNZ     ??osal_msg_allocate_1
??osal_msg_allocate_2:
        MOV     R2,#0x0
        MOV     R3,#0x0
        SJMP    ??osal_msg_allocate_3
??osal_msg_allocate_1:
        ; Setup parameters for call to function osal_mem_alloc
        MOV     A,#0x5
        ADD     A,R6
        MOV     R2,A
        CLR     A
        ADDC    A,R7
        MOV     R3,A
        LCALL   ??osal_mem_alloc?relay
        MOV     ?V0 + 0,R2
        MOV     ?V0 + 1,R3
        MOV     R0,?V0 + 0
        MOV     R1,?V0 + 1
        MOV     A,R0
        JNZ     ??osal_msg_allocate_4
        MOV     A,R1
??osal_msg_allocate_4:
        JZ      ??osal_msg_allocate_2
        MOV     DPL,R0
        MOV     DPH,R1
        CLR     A
        MOVX    @DPTR,A
        INC     DPTR
        MOVX    @DPTR,A
        MOV     DPL,R0
        MOV     DPH,R1
        INC     DPTR
        INC     DPTR
        MOV     A,R6
        MOVX    @DPTR,A
        INC     DPTR
        MOV     A,R7
        MOVX    @DPTR,A
        MOV     A,#-0x1
        MOV     DPL,R0
        MOV     DPH,R1
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        MOVX    @DPTR,A
        MOV     A,R0
        ADD     A,#0x5
        MOV     R2,A
        MOV     A,R1
        ADDC    A,#0x0
        MOV     R3,A
??osal_msg_allocate_3:
        LJMP    ?Subroutine3 & 0xFFFF

        RSEG BANKED_CODE:CODE:NOROOT(0)
osal_msg_deallocate:
        PUSH    DPL
        PUSH    DPH
        ; Saved register size: 2
        ; Auto size: 0
        MOV     A,R2
        JNZ     ??osal_msg_deallocate_0
        MOV     A,R3
??osal_msg_deallocate_0:
        JNZ     ??osal_msg_deallocate_1
        MOV     R1,#0x5
        SJMP    ??osal_msg_deallocate_2
??osal_msg_deallocate_1:
        MOV     A,R2
        ADD     A,#-0x1
        MOV     DPL,A
        MOV     A,R3
        ADDC    A,#-0x1
        MOV     DPH,A
        MOVX    A,@DPTR
        XRL     A,#0xff
        JZ      ??osal_msg_deallocate_3
        MOV     R1,#0x4
        SJMP    ??osal_msg_deallocate_2
??osal_msg_deallocate_3:
        ; Setup parameters for call to function osal_mem_free
        MOV     A,R2
        ADD     A,#-0x5
        MOV     R2,A
        MOV     A,R3
        ADDC    A,#-0x1
        MOV     R3,A
        LCALL   ??osal_mem_free?relay
        MOV     R1,#0x0
??osal_msg_deallocate_2:
        REQUIRE ?Subroutine0
        ; // Fall through to label ?Subroutine0

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine0:
        POP     DPH
        POP     DPL
        LJMP    ?BRET

        RSEG BANKED_CODE:CODE:NOROOT(0)
osal_msg_send:
        MOV     A,#-0x9
        LCALL   ?BANKED_ENTER_XDATA
        ; Saved register size: 9
        ; Auto size: 0
        MOV     A,R1
        MOV     R6,A
        MOV     A,R2
        JNZ     ??osal_msg_send_0
        MOV     A,R3
??osal_msg_send_0:
        JNZ     ??osal_msg_send_1
??osal_msg_send_2:
        MOV     R1,#0x5
        SJMP    ??osal_msg_send_3
??osal_msg_send_1:
        MOV     DPTR,#tasksCnt
        MOVX    A,@DPTR
        MOV     R4,A
        MOV     A,R1
        CLR     C
        SUBB    A,R4
        JC      ??osal_msg_send_4
        ; Setup parameters for call to function osal_msg_deallocate
        LCALL   ??osal_msg_deallocate?relay
        MOV     R1,#0x3
        SJMP    ??osal_msg_send_3
??osal_msg_send_4:
        MOV     A,R2
        ADD     A,#-0x5
        MOV     DPL,A
        MOV     A,R3
        ADDC    A,#-0x1
        MOV     DPH,A
        MOVX    A,@DPTR
        JNZ     ??osal_msg_send_5
        INC     DPTR
        MOVX    A,@DPTR
??osal_msg_send_5:
        JNZ     ??osal_msg_send_6
        MOV     A,R2
        ADD     A,#-0x1
        MOV     DPL,A
        MOV     A,R3
        ADDC    A,#-0x1
        MOV     DPH,A
        MOVX    A,@DPTR
        XRL     A,#0xff
        JZ      ??osal_msg_send_7
??osal_msg_send_6:
        ; Setup parameters for call to function osal_msg_deallocate
        LCALL   ??osal_msg_deallocate?relay
        SJMP    ??osal_msg_send_2
??osal_msg_send_7:
        MOV     A,R6
        MOVX    @DPTR,A
        ; Setup parameters for call to function osal_msg_enqueue
        MOV     A,R2
        MOV     R4,A
        MOV     A,R3
        MOV     R5,A
        MOV     R2,#(osal_qHead & 0xff)
        MOV     R3,#((osal_qHead >> 8) & 0xff)
        LCALL   ??osal_msg_enqueue?relay
        ; Setup parameters for call to function osal_set_event
        MOV     R2,#0x0
        MOV     R3,#-0x80
        MOV     A,R6
        MOV     R1,A
        LCALL   ??osal_set_event?relay
        MOV     R1,#0x0
??osal_msg_send_3:
        LJMP    ??Subroutine6_0 & 0xFFFF

        RSEG BANKED_CODE:CODE:NOROOT(0)
osal_msg_receive:
        MOV     A,#-0xe
        LCALL   ?BANKED_ENTER_XDATA
        ; Saved register size: 14
        ; Auto size: 0
        MOV     ?V0 + 3,R1
        MOV     ?V0 + 4,#0x0
        MOV     ?V0 + 5,#0x0
        MOV     R6,#0x0
        MOV     R7,#0x0
        MOV     C,0xa8.7
        CLR     A
        MOV     0xE0 /* A   */.0,C
        MOV     ?V0 + 2,A
        CLR     0xa8.7
        MOV     DPTR,#osal_qHead
        SJMP    ??osal_msg_receive_0
??osal_msg_receive_1:
        MOV     A,R6
        JNZ     ??osal_msg_receive_2
        MOV     A,R7
??osal_msg_receive_2:
        JNZ     ??osal_msg_receive_3
        MOV     ?V0 + 4,?V0 + 0
        MOV     ?V0 + 5,?V0 + 1
??osal_msg_receive_3:
        MOV     A,?V0 + 0
        ADD     A,#-0x5
        MOV     DPL,A
        MOV     A,?V0 + 1
        ADDC    A,#-0x1
        MOV     DPH,A
??osal_msg_receive_0:
        MOVX    A,@DPTR
        MOV     ?V0 + 0,A
        INC     DPTR
        MOVX    A,@DPTR
        MOV     ?V0 + 1,A
        MOV     A,?V0 + 0
        JNZ     ??osal_msg_receive_4
        MOV     A,?V0 + 1
??osal_msg_receive_4:
        JZ      ??osal_msg_receive_5
        MOV     A,?V0 + 0
        ADD     A,#-0x1
        MOV     DPL,A
        MOV     A,?V0 + 1
        ADDC    A,#-0x1
        MOV     DPH,A
        MOVX    A,@DPTR
        XRL     A,?V0 + 3
        JNZ     ??osal_msg_receive_1
        MOV     A,R6
        JNZ     ??osal_msg_receive_6
        MOV     A,R7
??osal_msg_receive_6:
        JNZ     ??osal_msg_receive_7
        MOV     R6,?V0 + 0
        MOV     R7,?V0 + 1
        SJMP    ??osal_msg_receive_3
??osal_msg_receive_7:
        ; Setup parameters for call to function osal_set_event
        MOV     R2,#0x0
        MOV     R3,#-0x80
        LCALL   ??osal_set_event?relay
        SJMP    ??osal_msg_receive_8
??osal_msg_receive_5:
        ; Setup parameters for call to function osal_clear_event
        MOV     R2,#0x0
        MOV     R3,#-0x80
        LCALL   ??osal_clear_event?relay
        MOV     A,R6
        JNZ     ??osal_msg_receive_9
        MOV     A,R7
??osal_msg_receive_9:
        JZ      ??osal_msg_receive_10
??osal_msg_receive_8:
        ; Setup parameters for call to function osal_msg_extract
        MOV     R0,#?V0 + 4
        LCALL   ?PUSH_XSTACK_I_TWO
        MOV     A,R6
        MOV     R4,A
        MOV     A,R7
        MOV     R5,A
        MOV     R2,#(osal_qHead & 0xff)
        MOV     R3,#((osal_qHead >> 8) & 0xff)
        LCALL   ??osal_msg_extract?relay
        MOV     A,#0x2
        LCALL   ?DEALLOC_XSTACK8
??osal_msg_receive_10:
        MOV     A,?V0 + 2
        MOV     C,0xE0 /* A   */.0
        MOV     0xa8.7,C
        LJMP    ?Subroutine2 & 0xFFFF
        REQUIRE _A_IEN0

        RSEG BANKED_CODE:CODE:NOROOT(0)
osal_msg_find:
        MOV     A,#-0x9
        LCALL   ?BANKED_ENTER_XDATA
        ; Saved register size: 9
        ; Auto size: 0
        MOV     A,R2
        MOV     R4,A
        MOV     C,0xa8.7
        CLR     A
        MOV     0xE0 /* A   */.0,C
        MOV     R5,A
        CLR     0xa8.7
        MOV     DPTR,#osal_qHead
        SJMP    ??osal_msg_find_0
??osal_msg_find_1:
        MOV     A,R2
        ADD     A,#-0x5
        MOV     DPL,A
        MOV     A,R3
        ADDC    A,#-0x1
        MOV     DPH,A
??osal_msg_find_0:
        MOVX    A,@DPTR
        MOV     R2,A
        INC     DPTR
        MOVX    A,@DPTR
        MOV     R3,A
        MOV     A,R2
        JNZ     ??osal_msg_find_2
        MOV     A,R3
??osal_msg_find_2:
        JZ      ??osal_msg_find_3
        MOV     A,R2
        ADD     A,#-0x1
        MOV     DPL,A
        MOV     A,R3
        ADDC    A,#-0x1
        MOV     DPH,A
        MOVX    A,@DPTR
        XRL     A,R1
        JNZ     ??osal_msg_find_1
        MOV     DPL,R2
        MOV     DPH,R3
        MOVX    A,@DPTR
        XRL     A,R4
        JNZ     ??osal_msg_find_1
??osal_msg_find_3:
        MOV     A,R5
        LJMP    ?Subroutine1 & 0xFFFF
        REQUIRE _A_IEN0

        RSEG BANKED_CODE:CODE:NOROOT(0)
osal_msg_enqueue:
        MOV     A,#-0x9
        LCALL   ?BANKED_ENTER_XDATA
        ; Saved register size: 9
        ; Auto size: 0
        MOV     C,0xa8.7
        CLR     A
        MOV     0xE0 /* A   */.0,C
        MOV     R6,A
        CLR     0xa8.7
        MOV     A,R4
        ADD     A,#-0x5
        MOV     DPL,A
        MOV     A,R5
        ADDC    A,#-0x1
        MOV     DPH,A
        CLR     A
        MOVX    @DPTR,A
        INC     DPTR
        MOVX    @DPTR,A
        MOV     DPL,R2
        MOV     DPH,R3
        MOVX    A,@DPTR
        JNZ     ??osal_msg_enqueue_0
        INC     DPTR
        MOVX    A,@DPTR
??osal_msg_enqueue_0:
        MOV     DPL,R2
        MOV     DPH,R3
        JNZ     ??osal_msg_enqueue_1
        SJMP    ??osal_msg_enqueue_2
??osal_msg_enqueue_3:
        MOV     A,R0
        ADD     A,#-0x5
        MOV     DPL,A
        MOV     A,R1
        ADDC    A,#-0x1
        MOV     DPH,A
??osal_msg_enqueue_1:
        MOVX    A,@DPTR
        MOV     R0,A
        INC     DPTR
        MOVX    A,@DPTR
        MOV     R1,A
        MOV     A,R0
        ADD     A,#-0x5
        MOV     DPL,A
        MOV     A,R1
        ADDC    A,#-0x1
        MOV     DPH,A
        MOVX    A,@DPTR
        JNZ     ??osal_msg_enqueue_4
        INC     DPTR
        MOVX    A,@DPTR
??osal_msg_enqueue_4:
        JNZ     ??osal_msg_enqueue_3
        MOV     A,R0
        ADD     A,#-0x5
        MOV     DPL,A
        MOV     A,R1
        ADDC    A,#-0x1
        MOV     DPH,A
??osal_msg_enqueue_2:
        MOV     A,R4
        MOVX    @DPTR,A
        INC     DPTR
        MOV     A,R5
        MOVX    @DPTR,A
        MOV     A,R6
        LJMP    ?Subroutine1 & 0xFFFF
        REQUIRE _A_IEN0

        RSEG BANKED_CODE:CODE:NOROOT(0)
osal_msg_dequeue:
        MOV     A,#-0xa
        LCALL   ?BANKED_ENTER_XDATA
        ; Saved register size: 10
        ; Auto size: 0
        MOV     R0,#0x0
        MOV     R1,#0x0
        MOV     C,0xa8.7
        CLR     A
        MOV     0xE0 /* A   */.0,C
        MOV     ?V0 + 0,A
        CLR     0xa8.7
        MOV     DPL,R2
        MOV     DPH,R3
        MOVX    A,@DPTR
        JNZ     ??osal_msg_dequeue_0
        INC     DPTR
        MOVX    A,@DPTR
??osal_msg_dequeue_0:
        JZ      ??osal_msg_dequeue_1
        MOV     DPL,R2
        MOV     DPH,R3
        MOVX    A,@DPTR
        MOV     R0,A
        INC     DPTR
        MOVX    A,@DPTR
        MOV     R1,A
        MOV     A,R0
        ADD     A,#-0x5
        MOV     R4,A
        MOV     A,R1
        ADDC    A,#-0x1
        MOV     R5,A
        MOV     DPL,R4
        MOV     DPH,R5
        MOVX    A,@DPTR
        MOV     R6,A
        INC     DPTR
        MOVX    A,@DPTR
        MOV     R7,A
        MOV     DPL,R2
        MOV     DPH,R3
        MOV     A,R6
        MOVX    @DPTR,A
        INC     DPTR
        MOV     A,R7
        MOVX    @DPTR,A
        MOV     DPL,R4
        MOV     DPH,R5
        CLR     A
        MOVX    @DPTR,A
        INC     DPTR
        MOVX    @DPTR,A
        MOV     A,R0
        ADD     A,#-0x1
        MOV     DPL,A
        MOV     A,R1
        ADDC    A,#-0x1
        MOV     DPH,A
        MOV     A,#-0x1
        MOVX    @DPTR,A
??osal_msg_dequeue_1:
        MOV     A,?V0 + 0
        MOV     C,0xE0 /* A   */.0
        MOV     0xa8.7,C
        MOV     A,R0
        MOV     R2,A
        MOV     A,R1
        MOV     R3,A
        REQUIRE ?Subroutine3
        REQUIRE _A_IEN0
        ; // Fall through to label ?Subroutine3

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine3:
        MOV     R7,#0x2
        LJMP    ?BANKED_LEAVE_XDATA

        RSEG BANKED_CODE:CODE:NOROOT(0)
osal_msg_push:
        MOV     A,#-0x9
        LCALL   ?BANKED_ENTER_XDATA
        ; Saved register size: 9
        ; Auto size: 0
        MOV     A,0xa8
        MOV     R6,A
        CLR     0xa8.7
        MOV     DPL,R2
        MOV     DPH,R3
        MOVX    A,@DPTR
        MOV     R0,A
        INC     DPTR
        MOVX    A,@DPTR
        MOV     R1,A
        MOV     A,R4
        ADD     A,#-0x5
        MOV     DPL,A
        MOV     A,R5
        ADDC    A,#-0x1
        MOV     DPH,A
        MOV     A,R0
        MOVX    @DPTR,A
        INC     DPTR
        MOV     A,R1
        MOVX    @DPTR,A
        MOV     DPL,R2
        MOV     DPH,R3
        MOV     A,R4
        MOVX    @DPTR,A
        INC     DPTR
        MOV     A,R5
        MOVX    @DPTR,A
        MOV     A,R6
        MOV     C,0xE0 /* A   */.7
        LJMP    ??Subroutine5_0 & 0xFFFF
        REQUIRE _A_IEN0

        RSEG BANKED_CODE:CODE:NOROOT(0)
osal_msg_extract:
        MOV     A,#-0x9
        LCALL   ?BANKED_ENTER_XDATA
        ; Saved register size: 9
        ; Auto size: 0
        MOV     A,#0x9
        LCALL   ?XSTACK_DISP0_8
        MOVX    A,@DPTR
        MOV     R0,A
        INC     DPTR
        MOVX    A,@DPTR
        MOV     R1,A
        MOV     C,0xa8.7
        CLR     A
        MOV     0xE0 /* A   */.0,C
        MOV     ?V0 + 0,A
        CLR     0xa8.7
        MOV     DPL,R2
        MOV     DPH,R3
        MOVX    A,@DPTR
        MOV     R6,A
        INC     DPTR
        MOVX    A,@DPTR
        MOV     R7,A
        MOV     A,R4
        XRL     A,R6
        JNZ     ??osal_msg_extract_0
        MOV     A,R5
        XRL     A,R7
??osal_msg_extract_0:
        JNZ     ??osal_msg_extract_1
        MOV     A,R4
        ADD     A,#-0x5
        MOV     DPL,A
        MOV     A,R5
        ADDC    A,#-0x1
        MOV     DPH,A
        MOVX    A,@DPTR
        MOV     R0,A
        INC     DPTR
        MOVX    A,@DPTR
        MOV     R1,A
        MOV     DPL,R2
        MOV     DPH,R3
        MOV     A,R0
        MOVX    @DPTR,A
        INC     DPTR
        MOV     A,R1
        SJMP    ??osal_msg_extract_2
??osal_msg_extract_1:
        MOV     A,R4
        ADD     A,#-0x5
        MOV     DPL,A
        MOV     A,R5
        ADDC    A,#-0x1
        MOV     DPH,A
        MOVX    A,@DPTR
        MOV     R2,A
        INC     DPTR
        MOVX    A,@DPTR
        MOV     R3,A
        MOV     A,R0
        ADD     A,#-0x5
        MOV     DPL,A
        MOV     A,R1
        ADDC    A,#-0x1
        MOV     DPH,A
        MOV     A,R2
        MOVX    @DPTR,A
        INC     DPTR
        MOV     A,R3
??osal_msg_extract_2:
        MOVX    @DPTR,A
        MOV     A,R4
        ADD     A,#-0x5
        MOV     DPL,A
        MOV     A,R5
        ADDC    A,#-0x1
        MOV     DPH,A
        CLR     A
        MOVX    @DPTR,A
        INC     DPTR
        MOVX    @DPTR,A
        MOV     A,R4
        ADD     A,#-0x1
        MOV     DPL,A
        MOV     A,R5
        ADDC    A,#-0x1
        MOV     DPH,A
        MOV     A,#-0x1
        MOVX    @DPTR,A
        MOV     A,?V0 + 0
        LJMP    ?Subroutine1 & 0xFFFF
        REQUIRE _A_IEN0

        RSEG BANKED_CODE:CODE:NOROOT(0)
osal_msg_enqueue_max:
        MOV     A,#-0xa
        LCALL   ?BANKED_ENTER_XDATA
        ; Saved register size: 10
        ; Auto size: 0
        MOV     A,R1
        MOV     R6,A
        MOV     R7,#0x0
        MOV     C,0xa8.7
        CLR     A
        MOV     0xE0 /* A   */.0,C
        MOV     ?V0 + 0,A
        CLR     0xa8.7
        MOV     DPL,R2
        MOV     DPH,R3
        MOVX    A,@DPTR
        JNZ     ??osal_msg_enqueue_max_0
        INC     DPTR
        MOVX    A,@DPTR
??osal_msg_enqueue_max_0:
        MOV     DPL,R2
        MOV     DPH,R3
        JNZ     ??osal_msg_enqueue_max_1
        SJMP    ??osal_msg_enqueue_max_2
??osal_msg_enqueue_max_3:
        MOV     A,R6
        JZ      ??osal_msg_enqueue_max_4
        MOV     A,R0
        ADD     A,#-0x5
        MOV     DPL,A
        MOV     A,R1
        ADDC    A,#-0x1
        MOV     DPH,A
??osal_msg_enqueue_max_1:
        MOVX    A,@DPTR
        MOV     R0,A
        INC     DPTR
        MOVX    A,@DPTR
        MOV     R1,A
        DEC     R6
        MOV     A,R0
        ADD     A,#-0x5
        MOV     DPL,A
        MOV     A,R1
        ADDC    A,#-0x1
        MOV     DPH,A
        MOVX    A,@DPTR
        JNZ     ??osal_msg_enqueue_max_5
        INC     DPTR
        MOVX    A,@DPTR
??osal_msg_enqueue_max_5:
        JNZ     ??osal_msg_enqueue_max_3
        MOV     A,R6
        JZ      ??osal_msg_enqueue_max_4
        MOV     A,R0
        ADD     A,#-0x5
        MOV     DPL,A
        MOV     A,R1
        ADDC    A,#-0x1
        MOV     DPH,A
??osal_msg_enqueue_max_2:
        MOV     A,R4
        MOVX    @DPTR,A
        INC     DPTR
        MOV     A,R5
        MOVX    @DPTR,A
        INC     R7
??osal_msg_enqueue_max_4:
        MOV     A,?V0 + 0
        MOV     C,0xE0 /* A   */.0
        MOV     0xa8.7,C
        MOV     A,R7
        MOV     R1,A
        LJMP    ?Subroutine3 & 0xFFFF
        REQUIRE _A_IEN0

        RSEG BANKED_CODE:CODE:NOROOT(0)
osal_set_event:
        MOV     A,#-0x9
        LCALL   ?BANKED_ENTER_XDATA
        ; Saved register size: 9
        ; Auto size: 0
        MOV     A,R1
        MOV     R5,A
        MOV     DPTR,#tasksCnt
        MOVX    A,@DPTR
        MOV     R4,A
        MOV     A,R1
        CLR     C
        SUBB    A,R4
        JNC     ??osal_set_event_0
        MOV     A,0xa8
        MOV     R6,A
        CLR     0xa8.7
        MOV     A,R5
        CLR     C
        RLC     A
        MOV     R0,A
        CLR     A
        RLC     A
        MOV     R1,A
        MOV     DPTR,#tasksEvents
        MOVX    A,@DPTR
        ADD     A,R0
        MOV     R4,A
        INC     DPTR
        MOVX    A,@DPTR
        ADDC    A,R1
        MOV     DPL,R4
        MOV     DPH,A
        MOVX    A,@DPTR
        ORL     A,R2
        MOVX    @DPTR,A
        INC     DPTR
        MOVX    A,@DPTR
        ORL     A,R3
        MOVX    @DPTR,A
        MOV     A,R6
        MOV     C,0xE0 /* A   */.7
        MOV     0xa8.7,C
        MOV     R1,#0x0
        SJMP    ??osal_set_event_1
??osal_set_event_0:
        MOV     R1,#0x3
??osal_set_event_1:
        LJMP    ??Subroutine6_0 & 0xFFFF
        REQUIRE _A_IEN0

        RSEG BANKED_CODE:CODE:NOROOT(0)
osal_clear_event:
        MOV     A,#-0x9
        LCALL   ?BANKED_ENTER_XDATA
        ; Saved register size: 9
        ; Auto size: 0
        MOV     A,R1
        MOV     R6,A
        MOV     DPTR,#tasksCnt
        MOVX    A,@DPTR
        MOV     R4,A
        MOV     A,R1
        CLR     C
        SUBB    A,R4
        JNC     ??osal_clear_event_0
        MOV     A,0xa8
        MOV     R7,A
        CLR     0xa8.7
        MOV     A,R2
        CPL     A
        MOV     R4,A
        MOV     A,R3
        CPL     A
        MOV     R5,A
        MOV     A,R6
        CLR     C
        RLC     A
        MOV     R0,A
        CLR     A
        RLC     A
        MOV     R1,A
        MOV     DPTR,#tasksEvents
        MOVX    A,@DPTR
        ADD     A,R0
        MOV     R2,A
        INC     DPTR
        MOVX    A,@DPTR
        ADDC    A,R1
        MOV     DPL,R2
        MOV     DPH,A
        MOVX    A,@DPTR
        ANL     A,R4
        MOVX    @DPTR,A
        INC     DPTR
        MOVX    A,@DPTR
        ANL     A,R5
        MOVX    @DPTR,A
        MOV     A,R7
        MOV     C,0xE0 /* A   */.7
        MOV     0xa8.7,C
        MOV     R1,#0x0
        SJMP    ??osal_clear_event_1
??osal_clear_event_0:
        MOV     R1,#0x3
??osal_clear_event_1:
        LJMP    ??Subroutine6_0 & 0xFFFF
        REQUIRE _A_IEN0

        RSEG BANKED_CODE:CODE:NOROOT(0)
osal_isr_register:
        ; Saved register size: 0
        ; Auto size: 0
        MOV     R1,#0x0
        LJMP    ?BRET

        RSEG BANKED_CODE:CODE:NOROOT(0)
osal_int_enable:
        ; Saved register size: 0
        ; Auto size: 0
        MOV     A,R1
        MOV     R2,A
        MOV     A,#-0x1
        XRL     A,R2
        JNZ     ??osal_int_enable_0
        SETB    0xa8.7
        MOV     R1,#0x0
        SJMP    ??osal_int_enable_1
??osal_int_enable_0:
        MOV     R1,#0x7
??osal_int_enable_1:
        LJMP    ?BRET
        REQUIRE _A_IEN0

        RSEG BANKED_CODE:CODE:NOROOT(0)
osal_int_disable:
        ; Saved register size: 0
        ; Auto size: 0
        MOV     A,R1
        MOV     R2,A
        MOV     A,#-0x1
        XRL     A,R2
        JNZ     ??osal_int_disable_0
        CLR     0xa8.7
        MOV     R1,#0x0
        SJMP    ??osal_int_disable_1
??osal_int_disable_0:
        MOV     R1,#0x7
??osal_int_disable_1:
        LJMP    ?BRET
        REQUIRE _A_IEN0

        RSEG BANKED_CODE:CODE:NOROOT(0)
osal_init_system:
        PUSH    DPL
        PUSH    DPH
        ; Saved register size: 2
        ; Auto size: 0
        ; Setup parameters for call to function osal_mem_init
        LCALL   ??osal_mem_init?relay
        MOV     DPTR,#osal_qHead
        CLR     A
        MOVX    @DPTR,A
        INC     DPTR
        MOVX    @DPTR,A
        ; Setup parameters for call to function osalTimerInit
        LCALL   ??osalTimerInit?relay
        ; Setup parameters for call to function osal_pwrmgr_init
        LCALL   ??osal_pwrmgr_init?relay
        ; Setup parameters for call to function osalInitTasks
        LCALL   ??osalInitTasks?relay
        ; Setup parameters for call to function osal_mem_kick
        LCALL   ??osal_mem_kick?relay
        MOV     R1,#0x0
        LJMP    ?Subroutine0 & 0xFFFF

        RSEG BANKED_CODE:CODE:NOROOT(0)
osal_start_system:
        MOV     A,#-0xa
        LCALL   ?BANKED_ENTER_XDATA
        ; Saved register size: 10
        ; Auto size: 0
??osal_start_system_0:
        MOV     ?V0 + 0,#0x0
        ; Setup parameters for call to function osalTimeUpdate
        LCALL   ??osalTimeUpdate?relay
        ; Setup parameters for call to function Hal_ProcessPoll
        LCALL   ??Hal_ProcessPoll?relay
??osal_start_system_1:
        MOV     A,?V0 + 0
        CLR     C
        RLC     A
        MOV     R0,A
        CLR     A
        RLC     A
        MOV     R1,A
        MOV     DPTR,#tasksEvents
        MOVX    A,@DPTR
        ADD     A,R0
        MOV     R2,A
        INC     DPTR
        MOVX    A,@DPTR
        ADDC    A,R1
        MOV     DPL,R2
        MOV     DPH,A
        MOVX    A,@DPTR
        JNZ     ??osal_start_system_2
        INC     DPTR
        MOVX    A,@DPTR
??osal_start_system_2:
        JNZ     ??osal_start_system_3
        INC     ?V0 + 0
        MOV     DPTR,#tasksCnt
        MOVX    A,@DPTR
        MOV     R2,A
        MOV     A,?V0 + 0
        CLR     C
        SUBB    A,R2
        JC      ??osal_start_system_1
??osal_start_system_3:
        MOV     DPTR,#tasksCnt
        MOVX    A,@DPTR
        MOV     R2,A
        MOV     A,?V0 + 0
        CLR     C
        SUBB    A,R2
        JNC     ??osal_start_system_0
        MOV     A,0xa8
        MOV     R4,A
        CLR     0xa8.7
        MOV     A,?V0 + 0
        CLR     C
        RLC     A
        MOV     R6,A
        CLR     A
        RLC     A
        MOV     R7,A
        MOV     DPTR,#tasksEvents
        MOVX    A,@DPTR
        ADD     A,R6
        MOV     R0,A
        INC     DPTR
        MOVX    A,@DPTR
        ADDC    A,R7
        MOV     R1,A
        MOV     DPL,R0
        MOV     DPH,R1
        MOVX    A,@DPTR
        MOV     R2,A
        INC     DPTR
        MOVX    A,@DPTR
        MOV     R3,A
        MOV     DPL,R0
        MOV     DPH,R1
        CLR     A
        MOVX    @DPTR,A
        INC     DPTR
        MOVX    @DPTR,A
        MOV     A,R4
        MOV     C,0xE0 /* A   */.7
        MOV     0xa8.7,C
        ; Setup parameters for indirect call
        MOV     R1,?V0 + 0
        MOV     A,R6
        ADD     A,#(tasksArr & 0xff)
        MOV     DPL,A
        MOV     A,R7
        ADDC    A,#((tasksArr >> 8) & 0xff)
        MOV     DPH,A
        MOVX    A,@DPTR
        MOV     R0,A
        INC     DPTR
        MOVX    A,@DPTR
        MOV     DPH,A
        MOV     DPL,R0
        LCALL   ?CALL_IND
        MOV     A,0xa8
        MOV     R5,A
        CLR     0xa8.7
        MOV     DPTR,#tasksEvents
        MOVX    A,@DPTR
        ADD     A,R6
        MOV     R4,A
        INC     DPTR
        MOVX    A,@DPTR
        ADDC    A,R7
        MOV     DPL,R4
        MOV     DPH,A
        MOVX    A,@DPTR
        ORL     A,R2
        MOVX    @DPTR,A
        INC     DPTR
        MOVX    A,@DPTR
        ORL     A,R3
        MOVX    @DPTR,A
        MOV     A,R5
        MOV     C,0xE0 /* A   */.7
        MOV     0xa8.7,C
        LJMP    ??osal_start_system_0 & 0xFFFF
        REQUIRE _A_IEN0

        RSEG BANKED_CODE:CODE:NOROOT(0)
osal_buffer_uint32:
        MOV     A,#-0x10
        LCALL   ?BANKED_ENTER_XDATA
        ; Saved register size: 16
        ; Auto size: 0
        MOV     A,#0x10
        LCALL   ?XSTACK_DISP0_8
        MOV     R0,#?V0 + 4
        LCALL   ?L_MOV_X
        MOV     DPL,R2
        MOV     DPH,R3
        MOV     A,?V0 + 4
        MOVX    @DPTR,A
        INC     DPTR
        MOV     ?V0 + 1,?V0 + 5
        MOV     A,?V0 + 1
        MOVX    @DPTR,A
        INC     DPTR
        MOV     ?V0 + 0,?V0 + 4
        MOV     ?V0 + 2,?V0 + 6
        MOV     ?V0 + 3,?V0 + 7
        MOV     A,#0x10
        MOV     R0,#?V0 + 0
        LCALL   ?UL_SHR
        MOV     A,?V0 + 0
        MOVX    @DPTR,A
        INC     DPTR
        MOV     A,#0x18
        REQUIRE ?Subroutine4
        ; // Fall through to label ?Subroutine4

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine4:
        MOV     R0,#?V0 + 4
        LCALL   ?UL_SHR
        MOV     A,?V0 + 4
        MOVX    @DPTR,A
        INC     DPTR
        MOV     R2,DPL
        MOV     R3,DPH
        REQUIRE ??Subroutine7_0
        ; // Fall through to label ??Subroutine7_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine7_0:
        MOV     R7,#0x8
        LJMP    ?BANKED_LEAVE_XDATA

        RSEG BANKED_CODE:CODE:NOROOT(0)
osal_buffer_uint24:
        MOV     A,#-0x10
        LCALL   ?BANKED_ENTER_XDATA
        ; Saved register size: 16
        ; Auto size: 0
        MOV     A,#0x10
        LCALL   ?XSTACK_DISP0_8
        MOV     R0,#?V0 + 4
        LCALL   ?L_MOV_X
        MOV     ?V0 + 0,?V0 + 4
        MOV     DPL,R2
        MOV     DPH,R3
        MOV     A,?V0 + 0
        MOVX    @DPTR,A
        INC     DPTR
        MOV     ?V0 + 1,?V0 + 5
        MOV     A,?V0 + 1
        MOVX    @DPTR,A
        INC     DPTR
        MOV     A,#0x10
        SJMP    ?Subroutine4

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??osal_strlen?relay:
        LCALL   ?BDISPATCH
        DATA
        DC24    osal_strlen

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??osal_memcpy?relay:
        LCALL   ?BDISPATCH
        DATA
        DC24    osal_memcpy

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??osal_revmemcpy?relay:
        LCALL   ?BDISPATCH
        DATA
        DC24    osal_revmemcpy

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??osal_memdup?relay:
        LCALL   ?BDISPATCH
        DATA
        DC24    osal_memdup

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??osal_memcmp?relay:
        LCALL   ?BDISPATCH
        DATA
        DC24    osal_memcmp

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??osal_memset?relay:
        LCALL   ?BDISPATCH
        DATA
        DC24    osal_memset

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??osal_build_uint16?relay:
        LCALL   ?BDISPATCH
        DATA
        DC24    osal_build_uint16

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??osal_build_uint32?relay:
        LCALL   ?BDISPATCH
        DATA
        DC24    osal_build_uint32

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??_ltoa?relay:
        LCALL   ?BDISPATCH
        DATA
        DC24    _ltoa

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??osal_rand?relay:
        LCALL   ?BDISPATCH
        DATA
        DC24    osal_rand

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??osal_msg_allocate?relay:
        LCALL   ?BDISPATCH
        DATA
        DC24    osal_msg_allocate

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??osal_msg_deallocate?relay:
        LCALL   ?BDISPATCH
        DATA
        DC24    osal_msg_deallocate

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??osal_msg_send?relay:
        LCALL   ?BDISPATCH
        DATA
        DC24    osal_msg_send

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??osal_msg_receive?relay:
        LCALL   ?BDISPATCH
        DATA
        DC24    osal_msg_receive

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??osal_msg_find?relay:
        LCALL   ?BDISPATCH
        DATA
        DC24    osal_msg_find

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??osal_msg_enqueue?relay:
        LCALL   ?BDISPATCH
        DATA
        DC24    osal_msg_enqueue

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??osal_msg_dequeue?relay:
        LCALL   ?BDISPATCH
        DATA
        DC24    osal_msg_dequeue

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??osal_msg_push?relay:
        LCALL   ?BDISPATCH
        DATA
        DC24    osal_msg_push

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??osal_msg_extract?relay:
        LCALL   ?BDISPATCH
        DATA
        DC24    osal_msg_extract

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??osal_msg_enqueue_max?relay:
        LCALL   ?BDISPATCH
        DATA
        DC24    osal_msg_enqueue_max

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??osal_set_event?relay:
        LCALL   ?BDISPATCH
        DATA
        DC24    osal_set_event

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??osal_clear_event?relay:
        LCALL   ?BDISPATCH
        DATA
        DC24    osal_clear_event

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??osal_isr_register?relay:
        LCALL   ?BDISPATCH
        DATA
        DC24    osal_isr_register

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??osal_int_enable?relay:
        LCALL   ?BDISPATCH
        DATA
        DC24    osal_int_enable

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??osal_int_disable?relay:
        LCALL   ?BDISPATCH
        DATA
        DC24    osal_int_disable

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??osal_init_system?relay:
        LCALL   ?BDISPATCH
        DATA
        DC24    osal_init_system

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??osal_start_system?relay:
        LCALL   ?BDISPATCH
        DATA
        DC24    osal_start_system

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??osal_buffer_uint32?relay:
        LCALL   ?BDISPATCH
        DATA
        DC24    osal_buffer_uint32

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??osal_buffer_uint24?relay:
        LCALL   ?BDISPATCH
        DATA
        DC24    osal_buffer_uint24

        RSEG XDATA_ROM_C:CONST:REORDER:NOROOT(0)
        DATA
`?<Constant "">`:
        DB ""
        DB 0, 0, 0, 0, 0, 0, 0, 0, 0

        RSEG XDATA_ROM_C:CONST:REORDER:NOROOT(0)
        DATA
`?<Constant "">_1`:
        DB ""
        DB 0, 0, 0, 0, 0, 0, 0, 0, 0

        RSEG XDATA_ROM_C:CONST:REORDER:NOROOT(0)
        DATA
`?<Constant "">_2`:
        DB ""
        DB 0, 0, 0, 0, 0, 0, 0, 0, 0

        RSEG XDATA_ROM_C:CONST:REORDER:NOROOT(0)
        DATA
`?<Constant "0">`:
        DB "0"

        RSEG XDATA_ROM_C:CONST:REORDER:NOROOT(0)
        DATA
__Constant_2710:
        DD 10000

        RSEG XDATA_ROM_C:CONST:REORDER:NOROOT(0)
        DATA
__Constant_5f5e100:
        DD 100000000

        END
// 
// 2 756 bytes in segment BANKED_CODE
//   174 bytes in segment BANK_RELAYS
//     1 byte  in segment SFR_AN
//    40 bytes in segment XDATA_ROM_C
//     2 bytes in segment XDATA_Z
// 
// 2 930 bytes of CODE  memory
//    32 bytes of CONST memory (+ 8 bytes shared)
//     0 bytes of DATA  memory (+ 1 byte  shared)
//     2 bytes of XDATA memory
//
//Errors: none
//Warnings: 5
