///////////////////////////////////////////////////////////////////////////////
//                                                                            /
// IAR C/C++ Compiler V7.60.1.40026 for 8051            23/Oct/2018  17:27:15 /
// Copyright (C) 2004-2010 IAR Systems AB.                                    /
//                                                                            /
//    Core               =  plain                                             /
//    Code model         =  banked                                            /
//    Data model         =  large                                             /
//    Calling convention =  xdata reentrant                                   /
//    Constant location  =  data_rom                                          /
//    Dptr setup         =  1,16                                              /
//    Source file        =  E:\p4\main\Zigbee\cc2530\mine_project_voice\drive /
//                          r\MobilePhone\hal_uart.c                          /
//    Command line       =  E:\p4\main\Zigbee\cc2530\mine_project_voice\drive /
//                          r\MobilePhone\hal_uart.c -D xSMS_TEMPLATE -D      /
//                          MENU_CLOCKFORMAT -D CELLSWITCH_DEBUG -D           /
//                          MP_INFORMATION -D HOLD_AUTO_START -D SMS_SENDBOX  /
//                          -D NEW_MENU_LIB -D WATCHDOG=TRUE -D               /
//                          NEW_DOUBLE_NVID_OP -D AUDIO_SERIAL -D             /
//                          NWK_AUTO_POLL -D OSC32K_CRYSTAL_INSTALLED=FALSE   /
//                          -D xAUDIO_TEST -D xSINGLE_AUDIO_TEST -D           /
//                          xMULTIAUDIO_TEST -D xREFLECTOR -D xLCD_SUPPORTED  /
//                          -D HAL_LCD=FALSE -D HAL_AUDIO=TRUE -D             /
//                          HAL_SPI=FALSE -D HAL_UART=FALSE -D HAL_LED=FALSE  /
//                          -D HAL_AES=FALSE -D HAL_KEY=TRUE -D               /
//                          IDX_THRESHOLD=12 -D xMACNODEBUG -D                /
//                          xMAC_NO_PARAM_CHECK -D HAL_AUDIO=TRUE -D          /
//                          HAL_DMA=TRUE -D HAL_AES=FALSE -D                  /
//                          MAC_CFG_TX_DATA_MAX=8 -D MAC_CFG_TX_MAX=12 -D     /
//                          MAC_CFG_RX_MAX=8 -lcN E:\p4\main\Zigbee\cc2530\mi /
//                          ne_project_voice\app\MobilePhone\iar\Release\List /
//                          \ -lb E:\p4\main\Zigbee\cc2530\mine_project_voice /
//                          \app\MobilePhone\iar\Release\List\ -o             /
//                          E:\p4\main\Zigbee\cc2530\mine_project_voice\app\M /
//                          obilePhone\iar\Release\Obj\ -e                    /
//                          --require_prototypes --no_unroll --no_inline      /
//                          --no_code_motion --debug --core=plain             /
//                          --dptr=16,1 --data_model=large                    /
//                          --code_model=banked --calling_convention=xdata_re /
//                          entrant --place_constants=data_rom                /
//                          --nr_virtual_regs 16 -I                           /
//                          E:\p4\main\Zigbee\cc2530\mine_project_voice\app\M /
//                          obilePhone\iar\..\src\ -I                         /
//                          E:\p4\main\Zigbee\cc2530\mine_project_voice\app\M /
//                          obilePhone\iar\..\src\MenuLib\ -I                 /
//                          E:\p4\main\Zigbee\cc2530\mine_project_voice\app\M /
//                          obilePhone\iar\..\src\MenuLib\util\ -I            /
//                          E:\p4\main\Zigbee\cc2530\mine_project_voice\app\M /
//                          obilePhone\iar\..\..\..\third_party\TIMAC-CC2530- /
//                          1.3.1\COMPONENTS\MAC\INCLUDE\ -I                  /
//                          E:\p4\main\Zigbee\cc2530\mine_project_voice\app\M /
//                          obilePhone\iar\..\..\..\third_party\TIMAC-CC2530- /
//                          1.3.1\COMPONENTS\MAC\HIGH_LEVEL\ -I               /
//                          E:\p4\main\Zigbee\cc2530\mine_project_voice\app\M /
//                          obilePhone\iar\..\..\..\third_party\TIMAC-CC2530- /
//                          1.3.1\COMPONENTS\MAC\LOW_LEVEL\ -I                /
//                          E:\p4\main\Zigbee\cc2530\mine_project_voice\app\M /
//                          obilePhone\iar\..\..\..\third_party\TIMAC-CC2530- /
//                          1.3.1\COMPONENTS\MAC\LOW_LEVEL\SRF04\ -I          /
//                          E:\p4\main\Zigbee\cc2530\mine_project_voice\app\M /
//                          obilePhone\iar\..\..\..\third_party\TIMAC-CC2530- /
//                          1.3.1\COMPONENTS\MAC\LOW_LEVEL\SRF04\SINGLE_CHIP\ /
//                           -I E:\p4\main\Zigbee\cc2530\mine_project_voice\a /
//                          pp\MobilePhone\iar\..\..\..\third_party\TIMAC-CC2 /
//                          530-1.3.1\COMPONENTS\OSAL\INCLUDE\ -I             /
//                          E:\p4\main\Zigbee\cc2530\mine_project_voice\app\M /
//                          obilePhone\iar\..\..\..\third_party\TIMAC-CC2530- /
//                          1.3.1\COMPONENTS\OSAL\MCU\CC2530\ -I              /
//                          E:\p4\main\Zigbee\cc2530\mine_project_voice\app\M /
//                          obilePhone\iar\..\..\..\third_party\TIMAC-CC2530- /
//                          1.3.1\COMPONENTS\SERVICES\SADDR\ -I               /
//                          E:\p4\main\Zigbee\cc2530\mine_project_voice\app\M /
//                          obilePhone\iar\..\..\..\third_party\TIMAC-CC2530- /
//                          1.3.1\COMPONENTS\SERVICES\SDATA\ -I               /
//                          E:\p4\main\Zigbee\cc2530\mine_project_voice\app\M /
//                          obilePhone\iar\..\..\..\third_party\TIMAC-CC2530- /
//                          1.3.1\COMPONENTS\MT\ -I                           /
//                          E:\p4\main\Zigbee\cc2530\mine_project_voice\app\M /
//                          obilePhone\iar\..\..\..\..\..\..\common\ -I       /
//                          E:\p4\main\Zigbee\cc2530\mine_project_voice\app\M /
//                          obilePhone\iar\..\..\..\..\..\common\lcd\ -I      /
//                          E:\p4\main\Zigbee\cc2530\mine_project_voice\app\M /
//                          obilePhone\iar\..\..\..\..\..\..\common\2g\ -I    /
//                          E:\p4\main\Zigbee\cc2530\mine_project_voice\app\M /
//                          obilePhone\iar\..\..\..\..\..\..\ -I              /
//                          E:\p4\main\Zigbee\cc2530\mine_project_voice\app\M /
//                          obilePhone\iar\..\..\..\driver\ -I                /
//                          E:\p4\main\Zigbee\cc2530\mine_project_voice\app\M /
//                          obilePhone\iar\..\..\..\util\ -I                  /
//                          E:\p4\main\Zigbee\cc2530\mine_project_voice\app\M /
//                          obilePhone\iar\..\..\..\driver\include\ -I        /
//                          E:\p4\main\Zigbee\cc2530\mine_project_voice\app\M /
//                          obilePhone\iar\..\..\..\driver\common\ -I         /
//                          E:\p4\main\Zigbee\cc2530\mine_project_voice\app\M /
//                          obilePhone\iar\..\..\..\driver\MobilePhone\ -I    /
//                          E:\p4\main\Zigbee\cc2530\mine_project_voice\app\M /
//                          obilePhone\iar\..\..\..\driver\MobilePhone\audio\ /
//                           -I E:\p4\main\Zigbee\cc2530\mine_project_voice\a /
//                          pp\MobilePhone\iar\..\..\..\driver\MobilePhone\co /
//                          mmon\ -I E:\p4\main\Zigbee\cc2530\mine_project_vo /
//                          ice\app\MobilePhone\iar\..\..\..\driver\MobilePho /
//                          ne\key\ -I E:\p4\main\Zigbee\cc2530\mine_project_ /
//                          voice\app\MobilePhone\iar\..\..\..\driver\MobileP /
//                          hone\lcd\ -I E:\p4\main\Zigbee\cc2530\mine_projec /
//                          t_voice\app\MobilePhone\iar\..\..\..\driver\Mobil /
//                          ePhone\ioexpand\ -I "C:\Program Files\IAR         /
//                          Systems\Embedded Workbench 5.4\8051\INC\" -I      /
//                          "C:\Program Files\IAR Systems\Embedded Workbench  /
//                          5.4\8051\INC\CLIB\" -Ohs                          /
//    List file          =  E:\p4\main\Zigbee\cc2530\mine_project_voice\app\M /
//                          obilePhone\iar\Release\List\hal_uart.s51          /
//                                                                            /
//                                                                            /
///////////////////////////////////////////////////////////////////////////////

        NAME hal_uart

        RSEG DOVERLAY:DATA:NOROOT(0)
        RSEG IOVERLAY:IDATA:NOROOT(0)
        RSEG ISTACK:IDATA:NOROOT(0)
        RSEG PSTACK:XDATA:NOROOT(0)
        RSEG XSTACK:XDATA:NOROOT(0)

        EXTERN ?BANKED_ENTER_XDATA
        EXTERN ?BANKED_LEAVE_XDATA
        EXTERN ?BDISPATCH
        EXTERN ?BRET
        EXTERN ?CALL_IND
        EXTERN ?UC_SWITCH_DENSE
        EXTERN ?V0
        EXTERN __INIT_XDATA_Z

        PUBLIC ??HalUARTClose?relay
        PUBLIC ??HalUARTFlushRxBuf?relay
        PUBLIC ??HalUARTFlushTxBuf?relay
        PUBLIC ??HalUARTInit?relay
        PUBLIC ??HalUARTOpen?relay
        PUBLIC ??HalUARTPoll?relay
        PUBLIC ??HalUARTRead?relay
        PUBLIC ??HalUARTWrite?relay
        PUBLIC ??Hal_UART_RxBufLen?relay
        PUBLIC ??Hal_UART_TxBufLen?relay
        PUBWEAK `??halUart0RxIsr??INTVEC 19`
        PUBWEAK `??halUart0TxIsr??INTVEC 59`
        PUBWEAK ADCCFG
        PUBLIC HalUARTClose
        PUBLIC HalUARTFlushRxBuf
        PUBLIC HalUARTFlushTxBuf
        PUBLIC HalUARTInit
        PUBLIC HalUARTOpen
        PUBLIC HalUARTPoll
        PUBLIC HalUARTRead
        PUBLIC HalUARTWrite
        PUBLIC Hal_UART_RxBufLen
        PUBLIC Hal_UART_TxBufLen
        PUBWEAK IEN2
        PUBWEAK P0DIR
        PUBWEAK P0SEL
        PUBWEAK P1SEL
        PUBWEAK P2DIR
        PUBWEAK PERCFG
        PUBWEAK ST0
        PUBWEAK U0BAUD
        PUBWEAK U0CSR
        PUBWEAK U0DBUF
        PUBWEAK U0GCR
        PUBWEAK U0UCR
        PUBWEAK U1DBUF
        PUBWEAK _A_IEN0
        PUBWEAK _A_IRCON2
        PUBWEAK _A_P0
        PUBWEAK _A_P1
        PUBWEAK _A_TCON
        PUBLIC halUart0RxIsr
        PUBLIC halUart0TxIsr

osal_mem_alloc      SYMBOL "osal_mem_alloc"
??osal_mem_alloc?relay SYMBOL "?relay", osal_mem_alloc
HalUARTClose        SYMBOL "HalUARTClose"
??HalUARTClose?relay SYMBOL "?relay", HalUARTClose
HalUARTFlushRxBuf   SYMBOL "HalUARTFlushRxBuf"
??HalUARTFlushRxBuf?relay SYMBOL "?relay", HalUARTFlushRxBuf
HalUARTFlushTxBuf   SYMBOL "HalUARTFlushTxBuf"
??HalUARTFlushTxBuf?relay SYMBOL "?relay", HalUARTFlushTxBuf
HalUARTInit         SYMBOL "HalUARTInit"
??HalUARTInit?relay SYMBOL "?relay", HalUARTInit
HalUARTOpen         SYMBOL "HalUARTOpen"
??HalUARTOpen?relay SYMBOL "?relay", HalUARTOpen
HalUARTPoll         SYMBOL "HalUARTPoll"
??HalUARTPoll?relay SYMBOL "?relay", HalUARTPoll
HalUARTRead         SYMBOL "HalUARTRead"
??HalUARTRead?relay SYMBOL "?relay", HalUARTRead
HalUARTWrite        SYMBOL "HalUARTWrite"
??HalUARTWrite?relay SYMBOL "?relay", HalUARTWrite
Hal_UART_RxBufLen   SYMBOL "Hal_UART_RxBufLen"
??Hal_UART_RxBufLen?relay SYMBOL "?relay", Hal_UART_RxBufLen
Hal_UART_TxBufLen   SYMBOL "Hal_UART_TxBufLen"
??Hal_UART_TxBufLen?relay SYMBOL "?relay", Hal_UART_TxBufLen
halUart0RxIsr       SYMBOL "halUart0RxIsr"
`??halUart0RxIsr??INTVEC 19` SYMBOL "??INTVEC 19", halUart0RxIsr
halUart0TxIsr       SYMBOL "halUart0TxIsr"
`??halUart0TxIsr??INTVEC 59` SYMBOL "??INTVEC 59", halUart0TxIsr

        EXTERN osal_mem_alloc
        EXTERN ??osal_mem_alloc?relay


        ASEGN SFR_AN:DATA:NOROOT,080H
// union <unnamed> volatile __sfr _A_P0
_A_P0:
        DS 1

        ASEGN SFR_AN:DATA:NOROOT,086H
// unsigned char volatile __sfr U0CSR
U0CSR:
        DS 1

        ASEGN SFR_AN:DATA:NOROOT,088H
// union <unnamed> volatile __sfr _A_TCON
_A_TCON:
        DS 1

        ASEGN SFR_AN:DATA:NOROOT,090H
// union <unnamed> volatile __sfr _A_P1
_A_P1:
        DS 1

        ASEGN SFR_AN:DATA:NOROOT,095H
// unsigned char volatile __sfr ST0
ST0:
        DS 1

        ASEGN SFR_AN:DATA:NOROOT,09aH
// unsigned char volatile __sfr IEN2
IEN2:
        DS 1

        ASEGN SFR_AN:DATA:NOROOT,0a8H
// union <unnamed> volatile __sfr _A_IEN0
_A_IEN0:
        DS 1

        ASEGN SFR_AN:DATA:NOROOT,0c1H
// unsigned char volatile __sfr U0DBUF
U0DBUF:
        DS 1

        ASEGN SFR_AN:DATA:NOROOT,0c2H
// unsigned char volatile __sfr U0BAUD
U0BAUD:
        DS 1

        ASEGN SFR_AN:DATA:NOROOT,0c4H
// unsigned char volatile __sfr U0UCR
U0UCR:
        DS 1

        ASEGN SFR_AN:DATA:NOROOT,0c5H
// unsigned char volatile __sfr U0GCR
U0GCR:
        DS 1

        ASEGN SFR_AN:DATA:NOROOT,0e8H
// union <unnamed> volatile __sfr _A_IRCON2
_A_IRCON2:
        DS 1

        ASEGN SFR_AN:DATA:NOROOT,0f1H
// unsigned char volatile __sfr PERCFG
PERCFG:
        DS 1

        ASEGN SFR_AN:DATA:NOROOT,0f2H
// unsigned char volatile __sfr ADCCFG
ADCCFG:
        DS 1

        ASEGN SFR_AN:DATA:NOROOT,0f3H
// unsigned char volatile __sfr P0SEL
P0SEL:
        DS 1

        ASEGN SFR_AN:DATA:NOROOT,0f4H
// unsigned char volatile __sfr P1SEL
P1SEL:
        DS 1

        ASEGN SFR_AN:DATA:NOROOT,0f9H
// unsigned char volatile __sfr U1DBUF
U1DBUF:
        DS 1

        ASEGN SFR_AN:DATA:NOROOT,0fdH
// unsigned char volatile __sfr P0DIR
P0DIR:
        DS 1

        ASEGN SFR_AN:DATA:NOROOT,0ffH
// unsigned char volatile __sfr P2DIR
P2DIR:
        DS 1

        RSEG XDATA_Z:XDATA:NOROOT(0)
cfg0:
        DS 2
        REQUIRE __INIT_XDATA_Z

        RSEG BANKED_CODE:CODE:NOROOT(0)
pollISR:
        PUSH    DPL
        PUSH    DPH
        ; Saved register size: 2
        ; Auto size: 0
        MOV     A,R2
        ADD     A,#-0x80
        MOV     DPL,A
        MOV     A,R3
        ADDC    A,#0x0
        MOV     DPH,A
        MOVX    A,@DPTR
        PUSH    A
        MOV     A,R2
        ADD     A,#-0x7f
        MOV     DPL,A
        MOV     A,R3
        ADDC    A,#0x0
        MOV     DPH,A
        MOVX    A,@DPTR
        MOV     R4,A
        POP     A
        CLR     C
        SUBB    A,R4
        MOV     A,R2
        JC      ??pollISR_0
        ADD     A,#-0x80
        MOV     DPL,A
        MOV     A,R3
        ADDC    A,#0x0
        MOV     DPH,A
        MOVX    A,@DPTR
        CLR     C
        SUBB    A,R4
        SJMP    ??pollISR_1
??pollISR_0:
        ADD     A,#-0x80
        MOV     DPL,A
        MOV     A,R3
        ADDC    A,#0x0
        MOV     DPH,A
        PUSH    DPL
        PUSH    DPH
        MOV     A,R2
        ADD     A,#-0x7e
        MOV     DPL,A
        MOV     A,R3
        ADDC    A,#0x0
        MOV     DPH,A
        MOVX    A,@DPTR
        CLR     C
        SUBB    A,R4
        POP     DPH
        POP     DPL
        MOV     R4,A
        MOVX    A,@DPTR
        ADD     A,R4
        INC     A
??pollISR_1:
        MOV     R4,A
        MOV     A,R2
        ADD     A,#-0x73
        MOV     DPL,A
        MOV     A,R3
        ADDC    A,#0x0
        MOV     DPH,A
        MOVX    A,@DPTR
        MOV     C,0xE0 /* A   */.1
        JC      ??pollISR_2
        MOV     A,R2
        ADD     A,#-0x7d
        MOV     DPL,A
        MOV     A,R3
        ADDC    A,#0x0
        MOV     DPH,A
        MOVX    A,@DPTR
        XRL     A,R4
        JZ      ??pollISR_3
        MOV     A,R2
        ADD     A,#-0x7c
        MOV     DPL,A
        MOV     A,R3
        ADDC    A,#0x0
        MOV     DPH,A
        MOV     A,#-0x3a
        MOVX    @DPTR,A
        MOV     A,R2
        ADD     A,#-0x7d
        MOV     DPL,A
        MOV     A,R3
        ADDC    A,#0x0
        MOV     DPH,A
        MOV     A,R4
        MOVX    @DPTR,A
??pollISR_3:
        MOVX    A,@DPTR
        MOV     R4,A
        MOV     A,R2
        ADD     A,#-0x7e
        MOV     DPL,A
        MOV     A,R3
        ADDC    A,#0x0
        MOV     DPH,A
        MOVX    A,@DPTR
        MOV     R0,A
        MOV     A,#-0x30
        ADD     A,R0
        MOV     R0,A
        MOV     A,#-0x1
        ADDC    A,#0x0
        MOV     R1,A
        CLR     C
        MOV     A,R4
        SUBB    A,R0
        CLR     A
        SUBB    A,R1
        MOV     C,0xD0 /* PSW */.2
        XRL     A,PSW
        RLC     A
        JC      ??pollISR_2
        MOV     A,R2
        ADD     A,#-0x73
        MOV     DPL,A
        MOV     A,R3
        ADDC    A,#0x0
        MOV     DPH,A
        MOVX    A,@DPTR
        MOV     C,0xE0 /* A   */.7
        JC      ??pollISR_4
        SETB    0x80.5
        SJMP    ??pollISR_5
??pollISR_4:
        SETB    0x90.5
??pollISR_5:
        MOV     C,0xE0 /* A   */.6
        JNC     ??pollISR_6
        MOV     A,R2
        ADD     A,#-0x7c
        MOV     DPL,A
        MOV     A,R3
        ADDC    A,#0x0
        MOV     DPH,A
        MOV     A,#-0x74
        MOVX    @DPTR,A
??pollISR_6:
        MOV     A,R2
        ADD     A,#-0x73
        MOV     DPL,A
        MOV     A,R3
        ADDC    A,#0x0
        MOV     DPH,A
        MOVX    A,@DPTR
        SETB    0xE0 /* A   */.1
        MOVX    @DPTR,A
??pollISR_2:
        SJMP    ??Subroutine4_0
        REQUIRE _A_P0
        REQUIRE _A_P1

        RSEG XDATA_Z:XDATA:NOROOT(0)
??tickShdw:
        DS 1
        REQUIRE __INIT_XDATA_Z

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine0:
        MOV     DPL,A
        MOV     A,R3
        ADDC    A,#0x0
        MOV     DPH,A
        CLR     A
        MOVX    @DPTR,A
        REQUIRE ??Subroutine4_0
        ; // Fall through to label ??Subroutine4_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine4_0:
        POP     DPH
        POP     DPL
        LJMP    ?BRET

        RSEG BANKED_CODE:CODE:NOROOT(0)
HalUARTInit:
        ; Saved register size: 0
        ; Auto size: 0
        ANL     0xff,#0x3f
        MOV     A,0xff
        MOV     0xff,0xff
        ORL     0xf1,#0x1
        ORL     0xf4,#0x30
        MOV     A,0xf4
        ANL     0xf3,#0xfd
        ORL     0xfd,#0x2
        CLR     0x80.1
        ANL     0xf2,#0xf3
        MOV     A,0xf2
        MOV     0x86,#-0x80
        MOV     0xc4,#-0x80
        LJMP    ?BRET
        REQUIRE _A_P0
        REQUIRE U0CSR
        REQUIRE U0UCR
        REQUIRE PERCFG
        REQUIRE ADCCFG
        REQUIRE P0SEL
        REQUIRE P1SEL
        REQUIRE P0DIR
        REQUIRE P2DIR

        RSEG BANKED_CODE:CODE:NOROOT(0)
HalUARTOpen:
        MOV     A,#-0xe
        LCALL   ?BANKED_ENTER_XDATA
        ; Saved register size: 14
        ; Auto size: 0
        MOV     ?V0 + 2,R1
        MOV     ?V0 + 0,R2
        MOV     ?V0 + 1,R3
        MOV     DPL,#0x0
        MOV     DPH,#0x0
        MOV     A,R1
        JNZ     ??HalUARTOpen_0
        MOV     DPL,#(cfg0 & 0xff)
        MOV     DPH,#((cfg0 >> 8) & 0xff)
??HalUARTOpen_0:
        MOVX    A,@DPTR
        MOV     R6,A
        INC     DPTR
        MOVX    A,@DPTR
        MOV     R7,A
        MOV     A,R2
        ADD     A,#0xa
        MOV     R0,A
        MOV     A,R3
        ADDC    A,#0x0
        MOV     R1,A
        MOV     ?V0 + 4,R0
        MOV     ?V0 + 5,R1
        MOV     DPL,R0
        MOV     DPH,A
        MOVX    A,@DPTR
        PUSH    A
        MOV     A,R6
        ADD     A,#-0x7e
        MOV     DPL,A
        MOV     A,R7
        ADDC    A,#0x0
        MOV     DPH,A
        POP     A
        MOVX    @DPTR,A
        MOV     A,R6
        ADD     A,#-0x76
        MOV     R0,A
        MOV     A,R7
        ADDC    A,#0x0
        MOV     R1,A
        MOV     A,R2
        ADD     A,#0x12
        MOV     DPL,A
        MOV     A,R3
        ADDC    A,#0x0
        MOV     DPH,A
        MOVX    A,@DPTR
        MOV     DPL,R0
        MOV     DPH,R1
        MOVX    @DPTR,A
        ; Setup parameters for call to function osal_mem_alloc
        MOV     R0,A
        MOV     A,#0x1
        ADD     A,R0
        MOV     R2,A
        CLR     A
        ADDC    A,#0x0
        MOV     R3,A
        LCALL   ??osal_mem_alloc?relay
        MOV     A,R6
        ADD     A,#-0x7a
        MOV     DPL,A
        MOV     A,R7
        ADDC    A,#0x0
        MOV     DPH,A
        MOV     A,R2
        MOVX    @DPTR,A
        INC     DPTR
        MOV     A,R3
        MOVX    @DPTR,A
        MOV     A,R6
        ADD     A,#-0x7f
        MOV     DPL,A
        MOV     A,R7
        ADDC    A,#0x0
        MOV     DPH,A
        CLR     A
        MOVX    @DPTR,A
        MOV     A,R6
        ADD     A,#-0x80
        MOV     DPL,A
        MOV     A,R7
        ADDC    A,#0x0
        MOV     DPH,A
        CLR     A
        MOVX    @DPTR,A
        MOV     A,R6
        ADD     A,#-0x77
        MOV     DPL,A
        MOV     A,R7
        ADDC    A,#0x0
        MOV     DPH,A
        CLR     A
        MOVX    @DPTR,A
        MOV     A,R6
        ADD     A,#-0x78
        MOV     DPL,A
        MOV     A,R7
        ADDC    A,#0x0
        MOV     DPH,A
        CLR     A
        MOVX    @DPTR,A
        MOV     DPL,?V0 + 0
        MOV     DPH,?V0 + 1
        INC     DPTR
        INC     DPTR
        INC     DPTR
        MOVX    A,@DPTR
        MOV     R0,A
        MOV     DPL,?V0 + 4
        MOV     DPH,?V0 + 5
        MOVX    A,@DPTR
        CLR     C
        SUBB    A,R0
        PUSH    A
        MOV     A,R6
        ADD     A,#-0x7b
        MOV     DPL,A
        MOV     A,R7
        ADDC    A,#0x0
        MOV     DPH,A
        POP     A
        MOVX    @DPTR,A
        MOV     A,?V0 + 0
        ADD     A,#0x1b
        MOV     DPL,A
        MOV     A,?V0 + 1
        ADDC    A,#0x0
        MOV     DPH,A
        MOVX    A,@DPTR
        MOV     R0,A
        INC     DPTR
        MOVX    A,@DPTR
        MOV     R1,A
        MOV     A,R6
        ADD     A,#-0x72
        MOV     DPL,A
        MOV     A,R7
        ADDC    A,#0x0
        MOV     DPH,A
        MOV     A,R0
        MOVX    @DPTR,A
        INC     DPTR
        MOV     A,R1
        MOVX    @DPTR,A
        MOV     A,?V0 + 2
        JNZ     ??HalUARTOpen_1
        ; Setup parameters for call to function HalUartChangeRate
        MOV     DPL,?V0 + 0
        MOV     DPH,?V0 + 1
        INC     DPTR
        MOVX    A,@DPTR
        MOV     R2,A
        MOV     R1,#0x0
        LCALL   ??HalUartChangeRate?relay
        ORL     0x86,#0x40
        MOV     A,R6
        ADD     A,#-0x73
        MOV     DPL,A
        MOV     A,R7
        ADDC    A,#0x0
        MOV     DPH,A
        CLR     A
        MOVX    @DPTR,A
        SETB    0xa8.2
        ORL     0x9a,#0x4
        MOV     DPL,?V0 + 0
        MOV     DPH,?V0 + 1
        INC     DPTR
        INC     DPTR
        MOVX    A,@DPTR
        JZ      ??HalUARTOpen_2
        MOV     A,R6
        ADD     A,#-0x73
        MOV     DPL,A
        MOV     A,R7
        ADDC    A,#0x0
        MOV     DPH,A
        CLR     A
        SETB    0xE0 /* A   */.5
        MOVX    @DPTR,A
        MOV     0xc4,#0x42
        ORL     0xf3,#0x10
        ORL     0xfd,#0x20
        CLR     0x80.5
        SJMP    ??HalUARTOpen_1
??HalUARTOpen_2:
        MOV     0xc4,#0x2
??HalUARTOpen_1:
        MOV     R1,#0x0
        REQUIRE ?Subroutine1
        REQUIRE _A_P0
        REQUIRE U0CSR
        REQUIRE IEN2
        REQUIRE _A_IEN0
        REQUIRE U0UCR
        REQUIRE P0SEL
        REQUIRE P0DIR
        ; // Fall through to label ?Subroutine1

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine1:
        MOV     R7,#0x6
        LJMP    ?BANKED_LEAVE_XDATA

        RSEG BANKED_CODE:CODE:NOROOT(0)
HalUARTClose:
        ; Saved register size: 0
        ; Auto size: 0
        LJMP    ?BRET

        RSEG BANKED_CODE:CODE:NOROOT(0)
HalUARTPoll:
        MOV     A,#-0x9
        LCALL   ?BANKED_ENTER_XDATA
        ; Saved register size: 9
        ; Auto size: 0
        MOV     DPTR,#cfg0
        MOVX    A,@DPTR
        JNZ     ??HalUARTPoll_0
        INC     DPTR
        MOVX    A,@DPTR
??HalUARTPoll_0:
        JZ      ??HalUARTPoll_1
        MOV     DPTR,#cfg0
        MOVX    A,@DPTR
        MOV     R6,A
        INC     DPTR
        MOVX    A,@DPTR
        MOV     R7,A
??HalUARTPoll_1:
        MOV     DPTR,#??tickShdw
        MOVX    A,@DPTR
        MOV     R2,A
        MOV     A,0x95
        CLR     C
        SUBB    A,R2
        MOV     R2,A
        MOV     A,0x95
        MOVX    @DPTR,A
        MOV     A,R6
        ADD     A,#-0x74
        MOV     DPL,A
        MOV     A,R7
        ADDC    A,#0x0
        MOV     DPH,A
        MOVX    A,@DPTR
        MOV     R3,A
        MOV     A,R2
        CLR     C
        SUBB    A,R3
        JNC     ??HalUARTPoll_2
        MOVX    A,@DPTR
        CLR     C
        SUBB    A,R2
        SJMP    ??HalUARTPoll_3
??HalUARTPoll_2:
        CLR     A
??HalUARTPoll_3:
        MOVX    @DPTR,A
        MOV     A,R6
        ADD     A,#-0x7c
        MOV     DPL,A
        MOV     A,R7
        ADDC    A,#0x0
        MOV     DPH,A
        MOVX    A,@DPTR
        MOV     R3,A
        MOV     A,R2
        CLR     C
        SUBB    A,R3
        JNC     ??HalUARTPoll_4
        MOVX    A,@DPTR
        CLR     C
        SUBB    A,R2
        SJMP    ??HalUARTPoll_5
??HalUARTPoll_4:
        CLR     A
??HalUARTPoll_5:
        MOVX    @DPTR,A
        ; Setup parameters for call to function pollISR
        MOV     A,R6
        MOV     R2,A
        MOV     A,R7
        MOV     R3,A
        LCALL   ??pollISR?relay
        MOV     A,R6
        ADD     A,#-0x80
        MOV     DPL,A
        MOV     A,R7
        ADDC    A,#0x0
        MOV     DPH,A
        MOVX    A,@DPTR
        MOV     R2,A
        MOV     A,R6
        ADD     A,#-0x7f
        MOV     DPL,A
        MOV     A,R7
        ADDC    A,#0x0
        MOV     DPH,A
        MOVX    A,@DPTR
        XRL     A,R2
        JNZ     $+5
        LJMP    ??HalUARTPoll_6 & 0xFFFF
        MOV     A,R6
        ADD     A,#-0x7e
        MOV     DPL,A
        MOV     A,R7
        ADDC    A,#0x0
        MOV     DPH,A
        MOVX    A,@DPTR
        MOV     R0,A
        MOV     A,#-0x30
        ADD     A,R0
        MOV     R0,A
        MOV     A,#-0x1
        ADDC    A,#0x0
        MOV     R1,A
        CLR     C
        MOV     A,R2
        SUBB    A,R0
        CLR     A
        SUBB    A,R1
        MOV     C,0xD0 /* PSW */.2
        XRL     A,PSW
        RLC     A
        JC      ??HalUARTPoll_7
        MOV     R2,#0x1
        SJMP    ??HalUARTPoll_8
??HalUARTPoll_7:
        MOV     A,R6
        ADD     A,#-0x7b
        MOV     DPL,A
        MOV     A,R7
        ADDC    A,#0x0
        MOV     DPH,A
        MOVX    A,@DPTR
        JZ      ??HalUARTPoll_9
        MOV     A,R6
        ADD     A,#-0x80
        MOV     DPL,A
        MOV     A,R7
        ADDC    A,#0x0
        MOV     DPH,A
        MOVX    A,@DPTR
        PUSH    A
        MOV     A,R6
        ADD     A,#-0x7b
        MOV     DPL,A
        MOV     A,R7
        ADDC    A,#0x0
        MOV     DPH,A
        MOVX    A,@DPTR
        MOV     R2,A
        POP     A
        CLR     C
        SUBB    A,R2
        JC      ??HalUARTPoll_9
        MOV     R2,#0x2
        SJMP    ??HalUARTPoll_8
??HalUARTPoll_9:
        MOV     A,R6
        ADD     A,#-0x7c
        MOV     DPL,A
        MOV     A,R7
        ADDC    A,#0x0
        MOV     DPH,A
        MOVX    A,@DPTR
        JNZ     ??HalUARTPoll_6
        MOV     R2,#0x4
??HalUARTPoll_8:
        MOV     A,R6
        ADD     A,#-0x72
        MOV     DPL,A
        MOV     A,R7
        ADDC    A,#0x0
        MOV     DPH,A
        MOVX    A,@DPTR
        JNZ     ??HalUARTPoll_10
        INC     DPTR
        MOVX    A,@DPTR
??HalUARTPoll_10:
        JZ      ??HalUARTPoll_6
        ; Setup parameters for indirect call
        MOV     A,R6
        ADD     A,#-0x73
        MOV     DPL,A
        MOV     A,R7
        ADDC    A,#0x0
        MOV     DPH,A
        MOVX    A,@DPTR
        MOV     C,0xE0 /* A   */.7
        CLR     A
        MOV     0xE0 /* A   */.0,C
        MOV     R1,A
        MOV     A,R6
        ADD     A,#-0x72
        MOV     DPL,A
        MOV     A,R7
        ADDC    A,#0x0
        MOV     DPH,A
        MOVX    A,@DPTR
        MOV     R0,A
        INC     DPTR
        MOVX    A,@DPTR
        MOV     DPH,A
        MOV     DPL,R0
        LCALL   ?CALL_IND
??HalUARTPoll_6:
        LJMP    ??Subroutine5_0 & 0xFFFF
        REQUIRE ST0

        RSEG BANKED_CODE:CODE:NOROOT(0)
Hal_UART_RxBufLen:
        MOV     A,#-0x9
        LCALL   ?BANKED_ENTER_XDATA
        ; Saved register size: 9
        ; Auto size: 0
        MOV     R2,#0x0
        MOV     R3,#0x0
        MOV     A,R1
        JNZ     ??Hal_UART_RxBufLen_0
        MOV     DPTR,#cfg0
        MOVX    A,@DPTR
        MOV     R2,A
        INC     DPTR
        MOVX    A,@DPTR
        MOV     R3,A
??Hal_UART_RxBufLen_0:
        MOV     A,R2
        ADD     A,#-0x80
        MOV     DPL,A
        MOV     A,R3
        ADDC    A,#0x0
        MOV     DPH,A
        MOVX    A,@DPTR
        PUSH    A
        MOV     A,R2
        ADD     A,#-0x7f
        MOV     DPL,A
        MOV     A,R3
        ADDC    A,#0x0
        MOV     DPH,A
        MOVX    A,@DPTR
        MOV     R4,A
        POP     A
        CLR     C
        SUBB    A,R4
        MOV     A,R2
        JC      ??Hal_UART_RxBufLen_1
        ADD     A,#-0x80
        MOV     DPL,A
        MOV     A,R3
        ADDC    A,#0x0
        MOV     DPH,A
        MOVX    A,@DPTR
        MOV     R4,A
        MOV     A,R2
        ADD     A,#-0x7f
        MOV     DPL,A
        MOV     A,R3
        ADDC    A,#0x0
        MOV     DPH,A
        MOVX    A,@DPTR
        MOV     R2,A
        MOV     A,R4
        CLR     C
        SUBB    A,R2
        MOV     R2,A
        CLR     A
        SUBB    A,#0x0
        SJMP    ??Hal_UART_RxBufLen_2
??Hal_UART_RxBufLen_1:
        ADD     A,#-0x7e
        MOV     DPL,A
        MOV     A,R3
        ADDC    A,#0x0
        MOV     DPH,A
        MOVX    A,@DPTR
        MOV     R4,A
        MOV     A,R2
        ADD     A,#-0x7f
        MOV     DPL,A
        MOV     A,R3
        ADDC    A,#0x0
        MOV     DPH,A
        MOVX    A,@DPTR
        MOV     R6,A
        MOV     A,R4
        CLR     C
        SUBB    A,R6
        MOV     R4,A
        CLR     A
        SUBB    A,#0x0
        MOV     R5,A
        MOV     A,R2
        ADD     A,#-0x80
        MOV     DPL,A
        MOV     A,R3
        ADDC    A,#0x0
        MOV     DPH,A
        MOVX    A,@DPTR
        ADD     A,R4
        MOV     R2,A
        CLR     A
        ADDC    A,R5
        MOV     R3,A
        MOV     A,#0x1
        ADD     A,R2
        INC     R2
        CLR     A
        ADDC    A,R3
??Hal_UART_RxBufLen_2:
        REQUIRE ?Subroutine2
        ; // Fall through to label ?Subroutine2

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine2:
        MOV     R3,A
        REQUIRE ??Subroutine5_0
        ; // Fall through to label ??Subroutine5_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine5_0:
        MOV     R7,#0x1
        LJMP    ?BANKED_LEAVE_XDATA

        RSEG BANKED_CODE:CODE:NOROOT(0)
Hal_UART_TxBufLen:
        MOV     A,#-0x9
        LCALL   ?BANKED_ENTER_XDATA
        ; Saved register size: 9
        ; Auto size: 0
        MOV     A,R1
        MOV     R0,#0x0
        MOV     R1,#0x0
        JNZ     ??Hal_UART_TxBufLen_0
        MOV     DPTR,#cfg0
        MOVX    A,@DPTR
        MOV     R0,A
        INC     DPTR
        MOVX    A,@DPTR
        MOV     R1,A
??Hal_UART_TxBufLen_0:
        MOV     A,R0
        ADD     A,#-0x77
        MOV     DPL,A
        MOV     A,R1
        ADDC    A,#0x0
        MOV     DPH,A
        MOVX    A,@DPTR
        MOV     R2,A
        MOV     A,R0
        ADD     A,#-0x78
        MOV     DPL,A
        MOV     A,R1
        ADDC    A,#0x0
        MOV     DPH,A
        MOVX    A,@DPTR
        XRL     A,R2
        JNZ     ??Hal_UART_TxBufLen_1
        MOV     A,R0
        ADD     A,#-0x76
        MOV     DPL,A
        MOV     A,R1
        ADDC    A,#0x0
        MOV     DPH,A
        MOVX    A,@DPTR
        MOV     R0,A
        MOV     A,#-0x1
        ADD     A,R0
        MOV     R2,A
        MOV     A,#-0x1
        ADDC    A,#0x0
        SJMP    ??Hal_UART_TxBufLen_2
??Hal_UART_TxBufLen_1:
        MOVX    A,@DPTR
        CLR     C
        SUBB    A,R2
        JNC     ??Hal_UART_TxBufLen_3
        MOVX    A,@DPTR
        MOV     R0,A
        MOV     A,R2
        CLR     C
        SUBB    A,R0
        MOV     R0,A
        CLR     A
        SUBB    A,#0x0
        MOV     R1,A
        MOV     A,#-0x1
        ADD     A,R0
        MOV     R2,A
        MOV     A,#-0x1
        ADDC    A,R1
        SJMP    ??Hal_UART_TxBufLen_2
??Hal_UART_TxBufLen_3:
        MOV     A,R0
        ADD     A,#-0x76
        MOV     DPL,A
        MOV     A,R1
        ADDC    A,#0x0
        MOV     DPH,A
        MOVX    A,@DPTR
        MOV     R2,A
        MOV     A,R0
        ADD     A,#-0x78
        MOV     DPL,A
        MOV     A,R1
        ADDC    A,#0x0
        MOV     DPH,A
        MOVX    A,@DPTR
        MOV     R6,A
        MOV     A,R2
        CLR     C
        SUBB    A,R6
        MOV     R2,A
        CLR     A
        SUBB    A,#0x0
        MOV     R3,A
        MOV     A,R0
        ADD     A,#-0x77
        MOV     DPL,A
        MOV     A,R1
        ADDC    A,#0x0
        MOV     DPH,A
        MOVX    A,@DPTR
        ADD     A,R2
        MOV     R2,A
        CLR     A
        ADDC    A,R3
??Hal_UART_TxBufLen_2:
        LJMP    ?Subroutine2 & 0xFFFF

        RSEG BANKED_CODE:CODE:NOROOT(0)
HalUARTRead:
        MOV     A,#-0xc
        LCALL   ?BANKED_ENTER_XDATA
        ; Saved register size: 12
        ; Auto size: 0
        MOV     ?V0 + 0,R1
        MOV     R0,#0x0
        MOV     R1,#0x0
        MOV     ?V0 + 1,R0
        MOV     A,?V0 + 0
        JNZ     ??HalUARTRead_0
        MOV     DPTR,#cfg0
        MOVX    A,@DPTR
        MOV     R0,A
        INC     DPTR
        MOVX    A,@DPTR
        MOV     R1,A
        SJMP    ??HalUARTRead_0
??HalUARTRead_1:
        MOV     A,R0
        ADD     A,#-0x7f
        MOV     DPL,A
        MOV     A,R1
        ADDC    A,#0x0
        MOV     DPH,A
        MOVX    A,@DPTR
        INC     A
??HalUARTRead_2:
        MOVX    @DPTR,A
        INC     ?V0 + 1
??HalUARTRead_0:
        MOV     A,R0
        ADD     A,#-0x7f
        MOV     DPL,A
        MOV     A,R1
        ADDC    A,#0x0
        MOV     DPH,A
        MOVX    A,@DPTR
        MOV     R6,A
        MOV     A,R0
        ADD     A,#-0x80
        MOV     DPL,A
        MOV     A,R1
        ADDC    A,#0x0
        MOV     DPH,A
        MOVX    A,@DPTR
        XRL     A,R6
        JZ      ??HalUARTRead_3
        MOV     ?V0 + 2,?V0 + 1
        CLR     C
        MOV     A,?V0 + 2
        SUBB    A,R4
        CLR     A
        SUBB    A,R5
        JNC     ??HalUARTRead_3
        MOV     A,R0
        ADD     A,#-0x7f
        MOV     R6,A
        MOV     A,R1
        ADDC    A,#0x0
        MOV     R7,A
        MOV     DPL,R6
        MOV     DPH,R7
        MOVX    A,@DPTR
        MOV     ?V0 + 2,A
        MOV     A,R0
        ADD     A,?V0 + 2
        MOV     DPL,A
        MOV     A,R1
        ADDC    A,#0x0
        MOV     DPH,A
        MOVX    A,@DPTR
        MOV     DPL,R2
        MOV     DPH,R3
        MOVX    @DPTR,A
        INC     DPTR
        MOV     R2,DPL
        MOV     R3,DPH
        MOV     DPL,R6
        MOV     DPH,R7
        MOVX    A,@DPTR
        MOV     R6,A
        MOV     A,R0
        ADD     A,#-0x7e
        MOV     DPL,A
        MOV     A,R1
        ADDC    A,#0x0
        MOV     DPH,A
        MOVX    A,@DPTR
        XRL     A,R6
        JNZ     ??HalUARTRead_1
        MOV     A,R0
        ADD     A,#-0x7f
        MOV     DPL,A
        MOV     A,R1
        ADDC    A,#0x0
        MOV     DPH,A
        CLR     A
        SJMP    ??HalUARTRead_2
??HalUARTRead_3:
        MOVX    A,@DPTR
        PUSH    A
        MOV     A,R0
        ADD     A,#-0x7f
        MOV     DPL,A
        MOV     A,R1
        ADDC    A,#0x0
        MOV     DPH,A
        MOVX    A,@DPTR
        MOV     R2,A
        POP     A
        CLR     C
        SUBB    A,R2
        MOV     A,R0
        JC      ??HalUARTRead_4
        ADD     A,#-0x80
        MOV     DPL,A
        MOV     A,R1
        ADDC    A,#0x0
        MOV     DPH,A
        MOVX    A,@DPTR
        CLR     C
        SUBB    A,R2
        SJMP    ??HalUARTRead_5
??HalUARTRead_4:
        ADD     A,#-0x80
        MOV     DPL,A
        MOV     A,R1
        ADDC    A,#0x0
        MOV     DPH,A
        PUSH    DPL
        PUSH    DPH
        MOV     A,R0
        ADD     A,#-0x7e
        MOV     DPL,A
        MOV     A,R1
        ADDC    A,#0x0
        MOV     DPH,A
        MOVX    A,@DPTR
        CLR     C
        SUBB    A,R2
        POP     DPH
        POP     DPL
        MOV     R2,A
        MOVX    A,@DPTR
        ADD     A,R2
        INC     A
??HalUARTRead_5:
        PUSH    A
        MOV     A,R0
        ADD     A,#-0x7d
        MOV     DPL,A
        MOV     A,R1
        ADDC    A,#0x0
        MOV     DPH,A
        POP     A
        MOVX    @DPTR,A
        MOV     A,R0
        ADD     A,#-0x73
        MOV     DPL,A
        MOV     A,R1
        ADDC    A,#0x0
        MOV     DPH,A
        MOVX    A,@DPTR
        MOV     C,0xE0 /* A   */.1
        JNC     ??HalUARTRead_6
        MOV     A,R0
        ADD     A,#-0x7d
        MOV     DPL,A
        MOV     A,R1
        ADDC    A,#0x0
        MOV     DPH,A
        MOVX    A,@DPTR
        MOV     R4,A
        MOV     A,R0
        ADD     A,#-0x7e
        MOV     DPL,A
        MOV     A,R1
        ADDC    A,#0x0
        MOV     DPH,A
        MOVX    A,@DPTR
        MOV     R2,A
        MOV     A,#-0x30
        ADD     A,R2
        MOV     R2,A
        MOV     A,#-0x1
        ADDC    A,#0x0
        MOV     R3,A
        CLR     C
        MOV     A,R4
        SUBB    A,R2
        CLR     A
        SUBB    A,R3
        MOV     C,0xD0 /* PSW */.2
        XRL     A,PSW
        RLC     A
        JNC     ??HalUARTRead_6
        MOV     A,R0
        ADD     A,#-0x73
        MOV     DPL,A
        MOV     A,R1
        ADDC    A,#0x0
        MOV     DPH,A
        MOVX    A,@DPTR
        MOV     C,0xE0 /* A   */.7
        JC      ??HalUARTRead_7
        CLR     0x80.5
        SJMP    ??HalUARTRead_8
??HalUARTRead_7:
        CLR     0x90.5
??HalUARTRead_8:
        CLR     0xE0 /* A   */.1
        MOVX    @DPTR,A
??HalUARTRead_6:
        MOV     R2,?V0 + 1
        MOV     R3,#0x0
        MOV     R7,#0x4
        LJMP    ?BANKED_LEAVE_XDATA
        REQUIRE _A_P0
        REQUIRE _A_P1

        RSEG BANKED_CODE:CODE:NOROOT(0)
HalUARTWrite:
        MOV     A,#-0xe
        LCALL   ?BANKED_ENTER_XDATA
        ; Saved register size: 14
        ; Auto size: 0
        MOV     ?V0 + 0,R1
        MOV     A,R2
        MOV     R6,A
        MOV     A,R3
        MOV     R7,A
        MOV     A,R4
        MOV     R2,A
        MOV     A,R5
        MOV     R3,A
        MOV     R0,#0x0
        MOV     R1,#0x0
        MOV     A,R2
        JNZ     ??HalUARTWrite_0
        MOV     A,R3
??HalUARTWrite_0:
        JNZ     ??HalUARTWrite_1
??HalUARTWrite_2:
        MOV     R2,#0x0
        MOV     R3,#0x0
        LJMP    ??HalUARTWrite_3 & 0xFFFF
??HalUARTWrite_1:
        MOV     A,?V0 + 0
        JNZ     ??HalUARTWrite_4
        MOV     DPTR,#cfg0
        MOVX    A,@DPTR
        MOV     R0,A
        INC     DPTR
        MOVX    A,@DPTR
        MOV     R1,A
??HalUARTWrite_4:
        MOV     C,0xa8.7
        CLR     A
        MOV     0xE0 /* A   */.0,C
        MOV     ?V0 + 1,A
        CLR     0xa8.7
        MOV     A,R0
        ADD     A,#-0x78
        MOV     DPL,A
        MOV     A,R1
        ADDC    A,#0x0
        MOV     DPH,A
        MOVX    A,@DPTR
        MOV     R4,A
        MOV     A,R0
        ADD     A,#-0x77
        MOV     DPL,A
        MOV     A,R1
        ADDC    A,#0x0
        MOV     DPH,A
        MOVX    A,@DPTR
        XRL     A,R4
        JNZ     ??HalUARTWrite_5
        MOV     A,R0
        ADD     A,#-0x73
        MOV     DPL,A
        MOV     A,R1
        ADDC    A,#0x0
        MOV     DPH,A
        MOVX    A,@DPTR
        CLR     0xE0 /* A   */.0
        MOVX    @DPTR,A
        MOV     A,R0
        ADD     A,#-0x76
        MOV     DPL,A
        MOV     A,R1
        ADDC    A,#0x0
        MOV     DPH,A
        MOVX    A,@DPTR
        MOV     R4,A
        MOV     A,#-0x1
        ADD     A,R4
        DEC     R4
        MOV     A,#-0x1
        ADDC    A,#0x0
        SJMP    ??HalUARTWrite_6
??HalUARTWrite_5:
        MOV     A,R0
        ADD     A,#-0x78
        MOV     DPL,A
        MOV     A,R1
        ADDC    A,#0x0
        MOV     DPH,A
        MOVX    A,@DPTR
        PUSH    A
        MOV     A,R0
        ADD     A,#-0x77
        MOV     DPL,A
        MOV     A,R1
        ADDC    A,#0x0
        MOV     DPH,A
        MOVX    A,@DPTR
        MOV     R4,A
        POP     A
        CLR     C
        SUBB    A,R4
        MOV     A,R0
        JNC     ??HalUARTWrite_7
        ADD     A,#-0x78
        MOV     DPL,A
        MOV     A,R1
        ADDC    A,#0x0
        MOV     DPH,A
        MOVX    A,@DPTR
        MOV     ?V0 + 2,A
        MOV     A,R4
        CLR     C
        SUBB    A,?V0 + 2
        MOV     R4,A
        CLR     A
        SUBB    A,#0x0
        MOV     R5,A
        MOV     A,#-0x1
        ADD     A,R4
        DEC     R4
        MOV     A,#-0x1
        SJMP    ??HalUARTWrite_8
??HalUARTWrite_7:
        ADD     A,#-0x76
        MOV     DPL,A
        MOV     A,R1
        ADDC    A,#0x0
        MOV     DPH,A
        MOVX    A,@DPTR
        MOV     R4,A
        MOV     A,R0
        ADD     A,#-0x78
        MOV     DPL,A
        MOV     A,R1
        ADDC    A,#0x0
        MOV     DPH,A
        MOVX    A,@DPTR
        MOV     ?V0 + 2,A
        MOV     A,R4
        CLR     C
        SUBB    A,?V0 + 2
        MOV     R4,A
        CLR     A
        SUBB    A,#0x0
        MOV     R5,A
        MOV     A,R0
        ADD     A,#-0x77
        MOV     DPL,A
        MOV     A,R1
        ADDC    A,#0x0
        MOV     DPH,A
        MOVX    A,@DPTR
        ADD     A,R4
        MOV     R4,A
        CLR     A
??HalUARTWrite_8:
        ADDC    A,R5
??HalUARTWrite_6:
        MOV     R5,A
        CLR     C
        MOV     A,R4
        SUBB    A,R2
        MOV     A,R5
        SUBB    A,R3
        JNC     ??HalUARTWrite_9
        MOV     A,?V0 + 1
        MOV     C,0xE0 /* A   */.0
        MOV     0xa8.7,C
        LJMP    ??HalUARTWrite_2 & 0xFFFF
??HalUARTWrite_9:
        MOV     A,?V0 + 0
        JNZ     ??HalUARTWrite_10
        SETB    0x80.1
??HalUARTWrite_10:
        MOV     A,R2
        MOV     ?V0 + 5,A
        JZ      ??HalUARTWrite_11
??HalUARTWrite_12:
        MOV     A,R0
        ADD     A,#-0x78
        MOV     R4,A
        MOV     A,R1
        ADDC    A,#0x0
        MOV     R5,A
        MOV     DPL,R6
        MOV     DPH,R7
        MOVX    A,@DPTR
        PUSH    A
        MOV     DPL,R4
        MOV     DPH,R5
        MOVX    A,@DPTR
        MOV     ?V0 + 2,A
        MOV     A,R0
        ADD     A,#-0x7a
        MOV     DPL,A
        MOV     A,R1
        ADDC    A,#0x0
        MOV     DPH,A
        MOVX    A,@DPTR
        ADD     A,?V0 + 2
        MOV     ?V0 + 4,A
        INC     DPTR
        MOVX    A,@DPTR
        ADDC    A,#0x0
        MOV     DPL,?V0 + 4
        MOV     DPH,A
        POP     A
        MOVX    @DPTR,A
        MOV     DPL,R6
        MOV     DPH,R7
        INC     DPTR
        MOV     R6,DPL
        MOV     R7,DPH
        MOV     DPL,R4
        MOV     DPH,R5
        MOVX    A,@DPTR
        MOV     R4,A
        MOV     A,R0
        ADD     A,#-0x76
        MOV     DPL,A
        MOV     A,R1
        ADDC    A,#0x0
        MOV     DPH,A
        MOVX    A,@DPTR
        XRL     A,R4
        JNZ     ??HalUARTWrite_13
        MOV     A,R0
        ADD     A,#-0x78
        MOV     DPL,A
        MOV     A,R1
        ADDC    A,#0x0
        MOV     DPH,A
        CLR     A
        SJMP    ??HalUARTWrite_14
??HalUARTWrite_13:
        MOV     A,R0
        ADD     A,#-0x78
        MOV     DPL,A
        MOV     A,R1
        ADDC    A,#0x0
        MOV     DPH,A
        MOVX    A,@DPTR
        INC     A
??HalUARTWrite_14:
        MOVX    @DPTR,A
        DEC     ?V0 + 5
        MOV     A,?V0 + 5
        JNZ     ??HalUARTWrite_12
??HalUARTWrite_11:
        MOV     A,?V0 + 1
        MOV     C,0xE0 /* A   */.0
        MOV     0xa8.7,C
        MOV     A,R0
        ADD     A,#-0x73
        MOV     DPL,A
        MOV     A,R1
        ADDC    A,#0x0
        MOV     DPH,A
        MOVX    A,@DPTR
        MOV     C,0xE0 /* A   */.0
        JC      ??HalUARTWrite_3
        SETB    0xE0 /* A   */.0
        MOVX    @DPTR,A
        MOV     C,0xE0 /* A   */.7
        MOV     A,R0
        JC      ??HalUARTWrite_15
        ADD     A,#-0x77
        MOV     DPL,A
        MOV     A,R1
        ADDC    A,#0x0
        MOV     DPH,A
        MOVX    A,@DPTR
        MOV     R4,A
        MOV     A,R0
        ADD     A,#-0x7a
        MOV     DPL,A
        MOV     A,R1
        ADDC    A,#0x0
        MOV     DPH,A
        MOVX    A,@DPTR
        ADD     A,R4
        MOV     R6,A
        INC     DPTR
        MOVX    A,@DPTR
        ADDC    A,#0x0
        MOV     DPL,R6
        MOV     DPH,A
        MOVX    A,@DPTR
        MOV     0xc1,A
        SJMP    ??HalUARTWrite_3
??HalUARTWrite_15:
        ADD     A,#-0x77
        MOV     DPL,A
        MOV     A,R1
        ADDC    A,#0x0
        MOV     DPH,A
        MOVX    A,@DPTR
        MOV     R4,A
        MOV     A,R0
        ADD     A,#-0x7a
        MOV     DPL,A
        MOV     A,R1
        ADDC    A,#0x0
        MOV     DPH,A
        MOVX    A,@DPTR
        ADD     A,R4
        MOV     R6,A
        INC     DPTR
        MOVX    A,@DPTR
        ADDC    A,#0x0
        MOV     DPL,R6
        MOV     DPH,A
        MOVX    A,@DPTR
        MOV     0xf9,A
??HalUARTWrite_3:
        LJMP    ?Subroutine1 & 0xFFFF
        REQUIRE _A_P0
        REQUIRE _A_IEN0
        REQUIRE U0DBUF
        REQUIRE U1DBUF

        RSEG BANKED_CODE:CODE:NOROOT(0)
HalUARTFlushTxBuf:
        PUSH    DPL
        PUSH    DPH
        ; Saved register size: 2
        ; Auto size: 0
        MOV     R2,#0x0
        MOV     R3,#0x0
        MOV     A,R1
        JNZ     ??HalUARTFlushTxBuf_0
        MOV     DPTR,#cfg0
        MOVX    A,@DPTR
        MOV     R2,A
        INC     DPTR
        MOVX    A,@DPTR
        MOV     R3,A
??HalUARTFlushTxBuf_0:
        MOV     A,R2
        ADD     A,#-0x78
        MOV     DPL,A
        MOV     A,R3
        ADDC    A,#0x0
        MOV     DPH,A
        CLR     A
        MOVX    @DPTR,A
        MOV     A,R2
        ADD     A,#-0x77
        LJMP    ?Subroutine0 & 0xFFFF

        RSEG BANKED_CODE:CODE:NOROOT(0)
HalUARTFlushRxBuf:
        PUSH    DPL
        PUSH    DPH
        ; Saved register size: 2
        ; Auto size: 0
        MOV     R2,#0x0
        MOV     R3,#0x0
        MOV     A,R1
        JNZ     ??HalUARTFlushRxBuf_0
        MOV     DPTR,#cfg0
        MOVX    A,@DPTR
        MOV     R2,A
        INC     DPTR
        MOVX    A,@DPTR
        MOV     R3,A
??HalUARTFlushRxBuf_0:
        MOV     A,R2
        ADD     A,#-0x80
        MOV     DPL,A
        MOV     A,R3
        ADDC    A,#0x0
        MOV     DPH,A
        CLR     A
        MOVX    @DPTR,A
        MOV     A,R2
        ADD     A,#-0x7f
        LJMP    ?Subroutine0 & 0xFFFF

        RSEG BANKED_CODE:CODE:NOROOT(0)
HalUartChangeRate:
        PUSH    DPL
        PUSH    DPH
        ; Saved register size: 2
        ; Auto size: 0
        MOV     A,R1
        JNZ     ??HalUartChangeRate_0
        MOV     A,R2
        LCALL   ?UC_SWITCH_DENSE
`?<Jumptable for HalUartChangeRate>_0`:
        DATA
        DB        0
        DB        8
        DW        ??HalUartChangeRate_0
        DW        ??HalUartChangeRate_1
        DW        ??HalUartChangeRate_2
        DW        ??HalUartChangeRate_3
        DW        ??HalUartChangeRate_4
        DW        ??HalUartChangeRate_5
        DW        ??HalUartChangeRate_0
        DW        ??HalUartChangeRate_6
        DW        ??HalUartChangeRate_0
        DW        ??HalUartChangeRate_7
        CODE
??HalUartChangeRate_1:
        MOV     0xc2,#0x3b
        MOV     0xc5,#0x5
        SJMP    ??HalUartChangeRate_0
??HalUartChangeRate_2:
        MOV     0xc2,#0x3b
        MOV     0xc5,#0x6
        SJMP    ??HalUartChangeRate_0
??HalUartChangeRate_3:
        MOV     0xc2,#0x3b
        MOV     0xc5,#0x7
        SJMP    ??HalUartChangeRate_0
??HalUartChangeRate_4:
        MOV     0xc2,#0x3b
        MOV     0xc5,#0x8
        SJMP    ??HalUartChangeRate_0
??HalUartChangeRate_5:
        MOV     0xc2,#0x3b
        MOV     0xc5,#0x9
        SJMP    ??HalUartChangeRate_0
??HalUartChangeRate_6:
        MOV     0xc2,#0x3b
        MOV     0xc5,#0xa
        SJMP    ??HalUartChangeRate_0
??HalUartChangeRate_7:
        MOV     0xc2,#-0x28
        MOV     0xc5,#0xb
??HalUartChangeRate_0:
        LJMP    ??Subroutine4_0 & 0xFFFF
        REQUIRE U0BAUD
        REQUIRE U0GCR

        RSEG NEAR_CODE:CODE:NOROOT(0)
halUart0RxIsr:
        PUSH    A
        PUSH    PSW
        MOV     A,R0
        PUSH    A
        MOV     A,R1
        PUSH    A
        MOV     A,R2
        PUSH    A
        PUSH    DPL
        PUSH    DPH
        ; Saved register size: 7
        ; Auto size: 0
        MOV     A,0xc1
        PUSH    A
        MOV     DPTR,#cfg0
        MOVX    A,@DPTR
        ADD     A,#-0x80
        MOV     R0,A
        INC     DPTR
        MOVX    A,@DPTR
        ADDC    A,#0x0
        MOV     R1,A
        MOV     DPL,R0
        MOV     DPH,R1
        MOVX    A,@DPTR
        MOV     R0,A
        MOV     DPTR,#cfg0
        MOVX    A,@DPTR
        ADD     A,R0
        MOV     R2,A
        INC     DPTR
        MOVX    A,@DPTR
        ADDC    A,#0x0
        MOV     DPL,R2
        MOV     DPH,A
        POP     A
        MOVX    @DPTR,A
        MOV     DPTR,#cfg0
        MOVX    A,@DPTR
        ADD     A,#-0x80
        MOV     R0,A
        INC     DPTR
        MOVX    A,@DPTR
        ADDC    A,#0x0
        MOV     R1,A
        MOV     DPL,R0
        MOV     DPH,R1
        MOVX    A,@DPTR
        PUSH    A
        MOV     DPTR,#cfg0
        MOVX    A,@DPTR
        ADD     A,#-0x7e
        INC     R0
        INC     R0
        INC     DPTR
        MOVX    A,@DPTR
        ADDC    A,#0x0
        MOV     R1,A
        MOV     DPL,R0
        MOV     DPH,R1
        MOVX    A,@DPTR
        MOV     R2,A
        POP     A
        CLR     C
        SUBB    A,R2
        MOV     DPTR,#cfg0
        MOVX    A,@DPTR
        JC      ??halUart0RxIsr_0
        ADD     A,#-0x80
        DEC     R0
        DEC     R0
        INC     DPTR
        MOVX    A,@DPTR
        ADDC    A,#0x0
        MOV     R1,A
        MOV     DPL,R0
        MOV     DPH,R1
        CLR     A
        SJMP    ??halUart0RxIsr_1
??halUart0RxIsr_0:
        ADD     A,#-0x80
        DEC     R0
        DEC     R0
        INC     DPTR
        MOVX    A,@DPTR
        ADDC    A,#0x0
        MOV     R1,A
        MOV     DPL,R0
        MOV     DPH,R1
        MOVX    A,@DPTR
        INC     A
??halUart0RxIsr_1:
        MOVX    @DPTR,A
        CLR     0x88.3
        POP     DPH
        POP     DPL
        REQUIRE ?Subroutine3
        REQUIRE _A_TCON
        REQUIRE U0DBUF
        ; // Fall through to label ?Subroutine3

        RSEG NEAR_CODE:CODE:NOROOT(0)
?Subroutine3:
        POP     A
        MOV     R2,A
        POP     A
        MOV     R1,A
        POP     A
        MOV     R0,A
        POP     PSW
        POP     A
        RETI

        RSEG NEAR_CODE:CODE:NOROOT(0)
halUart0TxIsr:
        PUSH    A
        PUSH    PSW
        MOV     A,R0
        PUSH    A
        MOV     A,R1
        PUSH    A
        MOV     A,R2
        PUSH    A
        MOV     A,R3
        PUSH    A
        PUSH    DPL
        PUSH    DPH
        ; Saved register size: 8
        ; Auto size: 0
        CLR     0xe8.1
        MOV     DPTR,#cfg0
        MOVX    A,@DPTR
        ADD     A,#-0x77
        MOV     R0,A
        INC     DPTR
        MOVX    A,@DPTR
        ADDC    A,#0x0
        MOV     R1,A
        MOV     DPL,R0
        MOV     DPH,R1
        MOVX    A,@DPTR
        MOV     R2,A
        MOV     DPTR,#cfg0
        MOVX    A,@DPTR
        ADD     A,#-0x76
        INC     R0
        INC     DPTR
        MOVX    A,@DPTR
        ADDC    A,#0x0
        MOV     R1,A
        MOV     DPL,R0
        MOV     DPH,R1
        MOVX    A,@DPTR
        XRL     A,R2
        MOV     DPTR,#cfg0
        JNZ     ??halUart0TxIsr_0
        MOVX    A,@DPTR
        ADD     A,#-0x77
        DEC     R0
        INC     DPTR
        MOVX    A,@DPTR
        ADDC    A,#0x0
        MOV     R1,A
        MOV     DPL,R0
        MOV     DPH,R1
        CLR     A
        SJMP    ??halUart0TxIsr_1
??halUart0TxIsr_0:
        MOVX    A,@DPTR
        ADD     A,#-0x77
        DEC     R0
        INC     DPTR
        MOVX    A,@DPTR
        ADDC    A,#0x0
        MOV     R1,A
        MOV     DPL,R0
        MOV     DPH,R1
        MOVX    A,@DPTR
        INC     A
??halUart0TxIsr_1:
        MOVX    @DPTR,A
        MOV     DPTR,#cfg0
        MOVX    A,@DPTR
        ADD     A,#-0x77
        MOV     R0,A
        INC     DPTR
        MOVX    A,@DPTR
        ADDC    A,#0x0
        MOV     R1,A
        MOV     DPL,R0
        MOV     DPH,R1
        MOVX    A,@DPTR
        MOV     R2,A
        MOV     DPTR,#cfg0
        MOVX    A,@DPTR
        ADD     A,#-0x78
        DEC     R0
        INC     DPTR
        MOVX    A,@DPTR
        ADDC    A,#0x0
        MOV     R1,A
        MOV     DPL,R0
        MOV     DPH,R1
        MOVX    A,@DPTR
        XRL     A,R2
        JZ      ??halUart0TxIsr_2
        MOV     DPTR,#cfg0
        MOVX    A,@DPTR
        ADD     A,#-0x77
        INC     R0
        INC     DPTR
        MOVX    A,@DPTR
        ADDC    A,#0x0
        MOV     R1,A
        MOV     DPL,R0
        MOV     DPH,R1
        MOVX    A,@DPTR
        MOV     R0,A
        MOV     DPTR,#cfg0
        MOVX    A,@DPTR
        ADD     A,#-0x7a
        MOV     R2,A
        INC     DPTR
        MOVX    A,@DPTR
        ADDC    A,#0x0
        MOV     R3,A
        MOV     DPL,R2
        MOV     DPH,R3
        MOVX    A,@DPTR
        ADD     A,R0
        MOV     R2,A
        INC     DPTR
        MOVX    A,@DPTR
        ADDC    A,#0x0
        MOV     DPL,R2
        MOV     DPH,A
        MOVX    A,@DPTR
        MOV     0xc1,A
        SJMP    ??halUart0TxIsr_3
??halUart0TxIsr_2:
        CLR     0x80.1
??halUart0TxIsr_3:
        POP     DPH
        POP     DPL
        POP     A
        MOV     R3,A
        LJMP    ?Subroutine3
        REQUIRE _A_P0
        REQUIRE U0DBUF
        REQUIRE _A_IRCON2

        COMMON INTVEC:CODE:ROOT(0)
        ORG 19
`??halUart0RxIsr??INTVEC 19`:
        LJMP       (halUart0RxIsr)

        COMMON INTVEC:CODE:ROOT(0)
        ORG 59
`??halUart0TxIsr??INTVEC 59`:
        LJMP       (halUart0TxIsr)

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??pollISR?relay:
        LCALL   ?BDISPATCH
        DATA
        DC24    pollISR

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??HalUARTInit?relay:
        LCALL   ?BDISPATCH
        DATA
        DC24    HalUARTInit

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??HalUARTOpen?relay:
        LCALL   ?BDISPATCH
        DATA
        DC24    HalUARTOpen

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??HalUARTClose?relay:
        LCALL   ?BDISPATCH
        DATA
        DC24    HalUARTClose

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??HalUARTPoll?relay:
        LCALL   ?BDISPATCH
        DATA
        DC24    HalUARTPoll

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??Hal_UART_RxBufLen?relay:
        LCALL   ?BDISPATCH
        DATA
        DC24    Hal_UART_RxBufLen

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??Hal_UART_TxBufLen?relay:
        LCALL   ?BDISPATCH
        DATA
        DC24    Hal_UART_TxBufLen

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??HalUARTRead?relay:
        LCALL   ?BDISPATCH
        DATA
        DC24    HalUARTRead

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??HalUARTWrite?relay:
        LCALL   ?BDISPATCH
        DATA
        DC24    HalUARTWrite

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??HalUARTFlushTxBuf?relay:
        LCALL   ?BDISPATCH
        DATA
        DC24    HalUARTFlushTxBuf

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??HalUARTFlushRxBuf?relay:
        LCALL   ?BDISPATCH
        DATA
        DC24    HalUARTFlushRxBuf

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??HalUartChangeRate?relay:
        LCALL   ?BDISPATCH
        DATA
        DC24    HalUartChangeRate

        END
// 
// 2 119 bytes in segment BANKED_CODE
//    72 bytes in segment BANK_RELAYS
//     6 bytes in segment INTVEC
//   351 bytes in segment NEAR_CODE
//    19 bytes in segment SFR_AN
//     3 bytes in segment XDATA_Z
// 
// 2 542 bytes of CODE  memory (+  6 bytes shared)
//     0 bytes of DATA  memory (+ 19 bytes shared)
//     3 bytes of XDATA memory
//
//Errors: none
//Warnings: none
